{"version":3,"sources":["styles/Button.module.css","styles/Asset.module.css","styles/TaskPage.module.css","styles/Account.module.css","App.module.css","assets/months/1january.webp","assets/months/2februari.webp","assets/months/3march.webp","assets/months/4april.webp","assets/months/5may.webp","assets/months/6june.webp","assets/months/7july.webp","assets/months/8august.png","assets/months/9september.png","assets/months/10october.png","assets/months/11november.png","assets/months/12december.png","assets/logo.png","api/axiosDefaults.js","contexts/CurrentUserContext.js","components/Avatar.js","hooks/useClickOutsideToggle.js","components/NavBar.js","assets/melon11.png","hooks/useRedirect.js","pages/auth/SignUpForm.js","assets/melon4.png","pages/auth/SignInForm.js","components/MyCalendar.js","assets/upload.png","components/Asset.js","pages/tasks/TaskCreateForm.js","components/MoreDropdown.js","pages/tasks/Task.js","pages/tasks/TaskCommentEditForm.js","pages/tasks/TaskComment.js","pages/tasks/TaskCommentCreateForm.js","utils/utils.js","pages/tasks/TaskPage.js","assets/no-results.png","contexts/AccountDataContext.js","pages/accounts/Account.js","pages/accounts/NewestAccounts.js","pages/tasks/TasksPage.js","pages/tasks/TaskEditForm.js","pages/accounts/AccountPage.js","pages/accounts/UsernameForm.js","pages/accounts/UserPasswordForm.js","pages/accounts/AccountEditForm.js","App.js","reportWebVitals.js","index.js","styles/TaskCreateEditForm.module.css","styles/NavBar.module.css","styles/MoreDropdown.module.css","styles/Task.module.css","styles/SignInUpForm.module.css","styles/TaskComment.module.css","styles/MyCalendar.module.css","styles/AccountPage.module.css","styles/UsernamePasswordForm.module.css","styles/AccountEditForm.module.css","styles/TaskCommentEditForm.module.css","styles/NewestAccounts.module.css","styles/TasksPage.module.css","styles/Avatar.module.css"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","handleMount","useCallback","async","data","get","err","console","log","useEffect","useMemo","interceptors","request","use","prevCurrentUser","push","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","Avatar","src","height","text","_jsxs","className","styles","width","alt","useClickOutsideToggle","callback","_len","arguments","length","refs","Array","_key","handleClickOutside","event","every","ref","current","contains","target","document","addEventListener","removeEventListener","NavBar","navbarRef","useRef","searchRef","navbarExpanded","setNavbarExpanded","searchExpanded","setSearchExpanded","searchQuery","setSearchQuery","searchResults","setSearchResults","closeSearchResults","addTaskIcon","NavLink","concat","CreateTaskButton","to","CreateTaskText","loggedInIcons","_Fragment","activeClassName","Active","NavLinkTexts","onClick","account_id","account_image","loggedOutIcons","Navbar","expanded","expand","fixed","Container","Brand","logo","SearchInputContainer","Form","inline","onSubmit","e","preventDefault","FormControl","type","placeholder","onChange","query","results","SearchResultsDropdown","map","user","id","username","NoUserFound","Toggle","Collapse","Nav","exact","useRedirect","userAuthStatus","location","useLocation","pathname","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","password1","password2","errors","setErrors","handleChange","name","Row","Col","md","appStyles","Content","Header","Group","controlId","Label","Control","Input","message","idx","Alert","variant","Button","btnStyles","Wide","Bright","non_field_errors","Link","SignUpCol","Image","FillerImage","SignUpMelonImage","SignInForm","signInData","setSignInData","password","SignInCol","SignInMelon","monthImages","require","MyCalendar","tasks","calendarTasks","setCalendarTasks","showModal","setShowModal","selectedTask","setSelectedTask","currentView","setCurrentView","calendarTasksPreview","task","title","date","due_date","toString","calendarContainer","FullCalendar","plugins","dayGridPlugin","initialView","views","dayGridYear","duration","year","buttonText","customButtons","click","headerToolbar","left","center","right","events","eventClick","clickInfo","taskId","find","error","dayCellDidMount","info","Date","getDate","month","getMonth","imageUrl","el","style","backgroundImage","default","backgroundSize","backgroundPosition","Modal","show","onHide","calendarModal","closeButton","calendarModalHeader","Title","Body","calendarModalBody","content","priority","category","is_overdue","is_public","image","fluid","Footer","calendarModalFooter","handleEditRedirect","editButton","Asset","spinner","Spinner","animation","TaskCreateForm","_errors$title","_errors$content","_errors$due_date","_errors$image","taskData","setTaskData","imageInput","checked","textFields","taskFormDiv","formGroupCustom","formPlaceholder","as","rows","Check","label","Dark","goBack","Green","newErrors","trim","Object","keys","formData","FormData","append","files","_err$response2","taskForm","lg","rounded","htmlFor","Upload","File","accept","URL","revokeObjectURL","createObjectURL","AccountEditDropdown","Dropdown","Absolute","drop","DotsDropDown","Menu","AccountDropdown","Item","ItemIcon","ItemText","React","forwardRef","_ref2","DotsIcon","MoreDropdown","_ref3","handleEdit","handleDelete","CommentDropdownMenu","popperConfig","strategy","DropdownItem","MoreDropdownIcon","Task","props","owner","updated_at","onTaskDelete","is_owner","formattedDueDate","toLocaleDateString","day","Card","TitleSection","TitleContainer","PublicInfo","PublicIcon","PublicText","taskTitleLink","taskTitle","DateAndDropdownContainer","creationDate","delete","ImageSection","Img","ContentSection","Media","FooterSection","DueDateP","DueDateSpan","TaskCommentEditForm","setShowEditForm","setComments","formContent","setFormContent","trimmedContent","put","prevComments","comment","BtnCancel","BtnSave","disabled","TaskComment","created_at","author","setTask","showEditForm","CommentForm","Owner","accountImage","prevTask","filter","TaskCommentCreateForm","setContent","sm","InputGroup","InputFieldComments","borderRadius","PostCommentBtn","fetchMoreData","resource","setResource","next","prevResource","reduce","acc","cur","some","accResult","TaskPage","useParams","comments","isDataLoaded","isOwner","isPublicTask","taskResponse","commentsResponse","all","fetchTaskAndComments","setTasks","taskPage","removeTask","removeTaskFromState","CommentContainer","InfiniteScroll","dataLength","hasMore","loader","AccountDataContext","SetAccountDataContext","useAccountData","AccountDataProvider","accountData","setAccountData","pageAccount","newestAccounts","prevState","Account","account","mobile","imageSize","WordBreak","NewestAccounts","displayedAccounts","setDisplayedAccounts","sortedAccounts","sort","a","b","getTime","numAccountsToShow","slice","columnSize","NewestUsersP","NewestAccountsMobile","xs","TasksPage","hasLoaded","setHasLoaded","setQuery","removeTaskFromList","prevTasks","timer","setTimeout","fetchTasks","clearTimeout","SearchIcon","SearchBar","Post","NoResults","TaskEditForm","fetchTaskData","form","formatOwnerName","ownerName","toLowerCase","charAt","toUpperCase","AccountPage","accountTasks","setAccountTasks","visitedAccount","tasksUrl","fetchData","mainAccount","noGutters","AccountImage","roundedCircle","UsernameHeader","BioContent","mainAccountTasks","CustomHR","OwnersTasks","NoTasks","UsernameForm","setUsername","_currentUser$account_","prevUser","CustomUsernamePasswordLabel","UserPasswordForm","_errors$new_password","_errors$new_password2","userData","setUserData","new_password1","new_password2","AccountEditForm","imageFile","setPassword","deleteAccountSection","DeleteAccountDiv","Red","WarningP","WarningSpan","BioLabel","_imageFile$current","_imageFile$current2","App","Main","Switch","Route","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","Router","getElementById"],"mappings":"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","file":"static/js/main.4da2dfa1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"Wide\":\"Button_Wide__2ScDr\",\"Dark\":\"Button_Dark__1IuZO\",\"DarkOutline\":\"Button_DarkOutline__Vs2wq\",\"Bright\":\"Button_Bright__1MBHR\",\"Red\":\"Button_Red__1ANXl\",\"RedOutline\":\"Button_RedOutline__1BwjL\",\"Green\":\"Button_Green__1wHLv\",\"GreenOutline\":\"Button_GreenOutline__2AY3X\",\"Black\":\"Button_Black__2dCp7\",\"BlackOutline\":\"Button_BlackOutline__I-kZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Asset\":\"Asset_Asset__1dBcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"TaskPage_SearchBar__2Wtp-\",\"SearchIcon\":\"TaskPage_SearchIcon__2Iwqi\",\"CommentContainer\":\"TaskPage_CommentContainer__2vz5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WordBreak\":\"Account_WordBreak__tfKZH\",\"AuthorizeBtn\":\"Account_AuthorizeBtn__3jlSy\",\"UnauthorizeBtn\":\"Account_UnauthorizeBtn__KOaoX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Main\":\"App_Main__HQkvd\",\"Content\":\"App_Content__ZaMNr\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"Image\":\"App_Image__3UPXw\",\"view-dropdown\":\"App_view-dropdown__2QjCh\"};","export default __webpack_public_path__ + \"static/media/1january.ace430c6.webp\";","export default __webpack_public_path__ + \"static/media/2februari.0b267a14.webp\";","export default __webpack_public_path__ + \"static/media/3march.e530a1a9.webp\";","export default __webpack_public_path__ + \"static/media/4april.d17298a8.webp\";","export default __webpack_public_path__ + \"static/media/5may.aa442890.webp\";","export default __webpack_public_path__ + \"static/media/6june.7c384ff8.webp\";","export default __webpack_public_path__ + \"static/media/7july.dc43a5f9.webp\";","export default __webpack_public_path__ + \"static/media/8august.bd3f1759.png\";","export default __webpack_public_path__ + \"static/media/9september.118d794b.png\";","export default __webpack_public_path__ + \"static/media/10october.8ddb7855.png\";","export default __webpack_public_path__ + \"static/media/11november.ccf67f32.png\";","export default __webpack_public_path__ + \"static/media/12december.1f673334.png\";","export default __webpack_public_path__ + \"static/media/logo.9a1790e5.png\";","import axios from \"axios\";\n\n// Set default configurations for axios\naxios.defaults.baseURL = \"/api\";  // Set base URL for all axios requests to API endpoint\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";  // Set default Content type for POST requests\naxios.defaults.withCredentials = true;  // Include credentials in every request\n\n// Create axios instances for request and response\nexport const axiosReq = axios.create();  // sending requests\nexport const axiosRes = axios.create();  // handling responses\n","import {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n  useCallback,\n} from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router-dom\";\n\n// Contexts to manage current user data\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\n// Custom hooks for using contexts\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\n// Provide current user context to its children\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  // Function to fetch current user details\n  const handleMount = useCallback(async () => {\n    try {\n      const { data } = await axiosRes.get(`/dj-rest-auth/user/`);\n      setCurrentUser(data);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // Hook to execute handleMount on component mount\n  useEffect(() => {\n    handleMount();\n  }, [handleMount]);\n\n  // Memo hook to set up interceptors for HTTP requests and responses\n  useMemo(() => {\n    // Interceptor for requests to handle token refresh\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        try {\n          await axios.post(`/dj-rest-auth/token/refresh/`);\n        } catch (err) {\n          setCurrentUser((prevCurrentUser) => {\n            if (prevCurrentUser) {\n              history.push(\"/signin\");\n            }\n            return null;\n          });\n          return config;\n        }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n\n    // Interceptor for responses to handle unauthorized access\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post(`/dj-rest-auth/token/refresh/`);\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push(\"/signin\");\n              }\n              return null;\n            });\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [history]);\n\n  // Providing the current user data and the function to update it\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React from \"react\";\nimport styles from \"../styles/Avatar.module.css\";\n\n// Avatar component\nconst Avatar = ({ src, height = 45, text }) => {\n  return (\n    <span>\n      <img\n        className={styles.Avatar}\n        src={src}\n        height={height}\n        width={height}\n        alt=\"avatar\"\n      />\n      {text}\n    </span>\n  );\n};\n\nexport default Avatar;\n","import { useEffect } from \"react\";\n\n// Handle click event\nconst useClickOutsideToggle = (callback, ...refs) => {\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        refs.every((ref) => ref.current && !ref.current.contains(event.target))\n      ) {\n        callback();\n      }\n    };\n\n    // Add event listener for mousedown events\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [callback, refs]);\n};\n\nexport default useClickOutsideToggle;\n","import React, { useState, useRef } from \"react\";\nimport { Form, FormControl, Navbar, Container, Nav } from \"react-bootstrap\";\nimport logo from \"../assets/logo.png\";\nimport styles from \"../styles/NavBar.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  useSetCurrentUser,\n  useCurrentUser,\n} from \"../contexts/CurrentUserContext\";\nimport Avatar from \"./Avatar\";\nimport axios from \"axios\";\nimport { axiosReq } from \"../api/axiosDefaults\";\nimport useClickOutsideToggle from \"../hooks/useClickOutsideToggle\";\n\n// Navbar component\nconst NavBar = () => {\n  // For managing current user data and navbar behavior\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n\n  const navbarRef = useRef(null);\n  const searchRef = useRef(null);\n\n  // managing navbar, search expansion and search functionality\n  const [navbarExpanded, setNavbarExpanded] = useState(false);\n  const [searchExpanded, setSearchExpanded] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Close navbar when clicking outside\n  useClickOutsideToggle(() => setNavbarExpanded(false), navbarRef);\n  // Close searchbar when clicking otside\n  useClickOutsideToggle(() => setSearchExpanded(false), searchRef);\n\n  // Handle search input changes and fetch results\n  const handleSearchChange = async (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n\n    if (query.length === 0) {\n      setSearchResults([]);\n    } else {\n      try {\n        // Fetch search result based on query\n        const { data } = await axiosReq.get(`/search-users/?username=${query}`);\n        setSearchResults(data.results);\n        setSearchExpanded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  // Close search results dropdown\n  const closeSearchResults = () => {\n    setSearchExpanded(false);\n  };\n\n  // Handle sign out\n  const handleSignout = async () => {\n    try {\n      await axios.post(\"/dj-rest-auth/logout/\");\n      setCurrentUser(null); // Clear current user context\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Create task icon\n  const addTaskIcon = (\n    <NavLink\n      className={`${styles.CreateTaskButton} d-flex align-items-center`}\n      to=\"/tasks/create\"\n    >\n      <i className=\"fa-solid fa-calendar-plus\"></i>\n      <span className={`${styles.CreateTaskText}`}>Create task</span>\n    </NavLink>\n  );\n\n  // Links shown to logged in users\n  const loggedInIcons = (\n    <>\n      <NavLink\n        activeClassName={styles.Active}\n        className={styles.NavLink}\n        to=\"/tasks\"\n      >\n        <i className=\"fa-solid fa-list-check\"></i>\n        <span className={styles.NavLinkTexts}>Tasks</span>\n      </NavLink>\n\n      <NavLink className={styles.NavLink} to=\"/\" onClick={handleSignout}>\n        <i className=\"fa-solid fa-right-from-bracket\"></i>\n        <span className={styles.NavLinkTexts}>Sign out</span>\n      </NavLink>\n\n      <NavLink\n        className={styles.NavLink}\n        activeClassName={styles.Active}\n        to={`/accounts/${currentUser?.account_id}`}\n      >\n        <div>\n          <Avatar src={currentUser?.account_image} height={40} />\n        </div>\n        <span className={styles.NavLinkTexts}>Account</span>\n      </NavLink>\n    </>\n  );\n\n  // Links shown to logged out users\n  const loggedOutIcons = (\n    <>\n      <NavLink\n        className={styles.NavLink}\n        activeClassName={styles.Active}\n        to=\"/signin\"\n      >\n        <i className=\"fa-solid fa-right-to-bracket\"></i>\n        <span className={styles.NavLinkTexts}>Sign in</span>\n      </NavLink>\n      <NavLink\n        className={styles.NavLink}\n        activeClassName={styles.Active}\n        to=\"/signup\"\n      >\n        <i className=\"fa-solid fa-user-plus\"></i>\n        <span className={styles.NavLinkTexts}>Sign up</span>\n      </NavLink>\n    </>\n  );\n\n  return (\n    <Navbar\n      expanded={navbarExpanded}\n      className={styles.NavBar}\n      expand=\"md\"\n      fixed=\"top\"\n      ref={navbarRef}\n    >\n      <Container>\n        <NavLink to=\"/\">\n          <Navbar.Brand>\n            <img src={logo} alt=\"logo\" height=\"45\" />\n          </Navbar.Brand>\n        </NavLink>\n        {currentUser && (\n          <div className={styles.SearchInputContainer} ref={searchRef}>\n            <Form inline onSubmit={(e) => e.preventDefault()}>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search for users\"\n                className=\"mr-sm-2\"\n                value={searchQuery}\n                onChange={handleSearchChange}\n              />\n            </Form>\n            {searchExpanded && (\n              <div className={styles.SearchResultsDropdown}>\n                {searchResults.length > 0 ? (\n                  searchResults.map((user) => (\n                    <NavLink\n                      key={user.id}\n                      to={`/accounts/${user.id}`}\n                      onClick={closeSearchResults}\n                    >\n                      {user.username}\n                    </NavLink>\n                  ))\n                ) : (\n                  <div className={styles.NoUserFound}>No user found</div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n        <Navbar.Toggle\n          onClick={() => setNavbarExpanded(!navbarExpanded)}\n          aria-controls=\"basic-navbar-nav\"\n        />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          {currentUser && addTaskIcon}\n\n          <Nav className=\"ml-auto text-left\">\n            <NavLink\n              exact\n              className={styles.NavLink}\n              activeClassName={styles.Active}\n              to=\"/\"\n            >\n              <i className=\"fa-solid fa-house-chimney\"></i>\n              <span className={styles.NavLinkTexts}>Home</span>\n            </NavLink>\n\n            {currentUser ? loggedInIcons : loggedOutIcons}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/melon11.d4c30671.png\";","import { useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const useRedirect = (userAuthStatus) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        await axios.post(\"/dj-rest-auth/token/refresh/\");\n        // No redirection when logged in\n      } catch (err) {\n        if (userAuthStatus === \"loggedOut\") {\n          // Redirect to signin only if the user is on a page that requires authentication\n          if (\n            location.pathname !== \"/signin\" &&\n            location.pathname !== \"/signup\"\n          ) {\n            history.push(\"/signin\");\n          }\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, location, userAuthStatus]);\n};\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport SignUpMelonImage from \"../../assets/melon11.png\";\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\nimport {\n  Form,\n  Button,\n  Image,\n  Col,\n  Row,\n  Container,\n  Alert,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n// Handles user registration\nconst SignUpForm = () => {\n  // redirect logged in users away from the signup page\n  useRedirect(\"loggedIn\");\n  // managing sign up form data\n  const [signUpData, setSignUpData] = useState({\n    username: \"\",\n    password1: \"\",\n    password2: \"\",\n  });\n  const { username, password1, password2 } = signUpData;\n  // managing form errors\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  // Handle changes in form inputs\n  const handleChange = (event) => {\n    // Updates signUpData state with new input values\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission.\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents the default form submission\n    try {\n      // POST request to the registration endpoint with the form data\n      await axios.post(\"/dj-rest-auth/registration/\", signUpData);\n      // Redirects to the sign in page after successful registration\n      history.push(\"/signin\");\n    } catch (err) {\n      // Set form errors if registration attempt fails\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className=\"my-auto py-2 p-md-2\" md={6}>\n        <Container className={`${appStyles.Content} p-4 `}>\n          <h1 className={styles.Header}>sign up</h1>\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"username\">\n              <Form.Label className=\"d-none\">username</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId=\"password1\">\n              <Form.Label className=\"d-none\">Password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password1\"\n                value={password1}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password1?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId=\"password2\">\n              <Form.Label className=\"d-none\">Confirm password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                name=\"password2\"\n                value={password2}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password2?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n              type=\"submit\"\n            >\n              Sign up\n            </Button>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\" className=\"mt-3\">\n                {message}\n              </Alert>\n            ))}\n          </Form>\n        </Container>\n\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to=\"/signin\">\n            Already have an account? <span>Sign in</span>\n          </Link>\n        </Container>\n      </Col>\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignUpCol}`}\n      >\n        <Image className={`${appStyles.FillerImage}`} src={SignUpMelonImage} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SignUpForm;\n","export default __webpack_public_path__ + \"static/media/melon4.ec283e97.png\";","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport SignInMelon from \"../../assets/melon4.png\";\nimport { useSetCurrentUser } from \"../../contexts/CurrentUserContext\";\n\n// SignInForm to handle sign ins\nconst SignInForm = () => {\n  // Custom hook to set current user context\n  const setCurrentUser = useSetCurrentUser();\n  // Manage sign in form data and error\n  const [signInData, setSignInData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  // Destructure to extract username and password from signInData\n  const { username, password } = signInData;\n  // useState hook for managing form errors\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n\n  // Handle form submission.\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents the default form submission\n    try {\n      // POST request to the sign-in endpoint with the form data\n      const response = await axios.post(\"/dj-rest-auth/login/\", signInData);\n      // Extracts data from the response\n      const data = response.data;\n      // Set current user in the context to the signed in user\n      setCurrentUser(data.user);\n      // Redirect to homepage after successful sign in\n      history.push(\"/\");\n    } catch (err) {\n      // Set form errors if the sign in attempt fails\n      setErrors(err.response.data);\n    }\n  };\n\n  // Function to handle changes in form inputs\n  const handleChange = (event) => {\n    // Updates signInData state with new input values\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className=\"my-auto p-0 p-md-2\" md={6}>\n        <Container className={`${appStyles.Content} p-4 `}>\n          <h1 className={styles.Header}>sign in</h1>\n          <Form onSubmit={handleSubmit}>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Form.Group controlId=\"username\">\n              <Form.Label className=\"d-none\">Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                className={styles.Input}\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId=\"password\">\n              <Form.Label className=\"d-none\">Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                className={styles.Input}\n                value={password}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n              type=\"submit\"\n            >\n              Sign in\n            </Button>\n          </Form>\n        </Container>\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to=\"/signup\">\n            Don't have an account? <span>Sign up now!</span>\n          </Link>\n        </Container>\n      </Col>\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignInCol}`}\n      >\n        <Image className={`${appStyles.FillerImage}`} src={SignInMelon} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SignInForm;\n","import React, { useEffect, useState } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport Container from \"react-bootstrap/Container\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport { useHistory } from \"react-router-dom\";\nimport styles from \"../styles/MyCalendar.module.css\";\n\n// Show unique image for each months 1st day\nconst monthImages = {\n  0: require(\"../assets/months/1january.webp\"),\n  1: require(\"../assets/months/2februari.webp\"),\n  2: require(\"../assets/months/3march.webp\"),\n  3: require(\"../assets/months/4april.webp\"),\n  4: require(\"../assets/months/5may.webp\"),\n  5: require(\"../assets/months/6june.webp\"),\n  6: require(\"../assets/months/7july.webp\"),\n  7: require(\"../assets/months/8august.png\"),\n  8: require(\"../assets/months/9september.png\"),\n  9: require(\"../assets/months/10october.png\"),\n  10: require(\"../assets/months/11november.png\"),\n  11: require(\"../assets/months/12december.png\"),\n};\n\n// Calendar component\nconst MyCalendar = ({ tasks }) => {\n  const [calendarTasks, setCalendarTasks] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentView, setCurrentView] = useState(\"dayGridMonth\"); // State to manage current view\n  const history = useHistory();\n\n  // Hook to process tasks data when prop changes\n  useEffect(() => {\n    const calendarTasksPreview = tasks.map((task) => ({\n      title: task.title,\n      date: task.due_date,\n      id: task.id.toString(),\n    }));\n    setCalendarTasks(calendarTasksPreview);\n  }, [tasks]);\n\n  // Handle click events\n  const handleEventClick = (clickInfo) => {\n    const taskId = clickInfo.event.id;\n    const task = tasks.find((task) => task.id.toString() === taskId);\n    if (task) {\n      setSelectedTask(task);\n      setShowModal(true);\n    } else {\n      console.error(\"Task not found for ID:\", taskId);\n    }\n  };\n\n  // Redirection after editing\n  const handleEditRedirect = () => {\n    history.push(`/tasks/${selectedTask.id}/edit`);\n  };\n\n  // Add background image to the first day of each month\n  const handleDayCellDidMount = (info) => {\n    const date = new Date(info.date);\n    if (date.getDate() === 1) {\n      const month = date.getMonth();\n      const imageUrl = monthImages[month];\n      if (imageUrl) {\n        info.el.style.backgroundImage = `url(${imageUrl.default})`;\n        info.el.style.backgroundSize = \"cover\";\n        info.el.style.backgroundPosition = \"center\";\n      }\n    }\n  };\n\n  return (\n    <Container className={`p-4 ${styles.calendarContainer}`}>\n      <FullCalendar\n        plugins={[dayGridPlugin]} // Using only the dayGrid plugin\n        initialView={currentView}\n        views={{\n          dayGridYear: {\n            type: \"dayGrid\",\n            duration: { year: 1 },\n            buttonText: \"Year\",\n          },\n        }}\n        customButtons={{\n          year: {\n            text: \"Year\",\n            click: () => setCurrentView(\"dayGridYear\"),\n          },\n        }}\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,dayGridYear\",\n        }}\n        events={calendarTasks}\n        eventClick={handleEventClick}\n        dayCellDidMount={handleDayCellDidMount}\n      />\n\n      <Modal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        className={styles.calendarModal}\n      >\n        <Modal.Header closeButton className={styles.calendarModalHeader}>\n          <Modal.Title>Task Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={styles.calendarModalBody}>\n          {selectedTask && (\n            <>\n              <p>\n                <strong>Title:</strong> {selectedTask.title}\n              </p>\n              <p>\n                <strong>Content:</strong> {selectedTask.content}\n              </p>\n              <p>\n                <strong>Due Date:</strong> {selectedTask.due_date}\n              </p>\n              <p>\n                <strong>Priority:</strong> {selectedTask.priority}\n              </p>\n              <p>\n                <strong>Category:</strong> {selectedTask.category}\n              </p>\n              <p>\n                <strong>Status:</strong> {selectedTask.status}\n              </p>\n              <p>\n                <strong>Is Overdue:</strong>{\" \"}\n                {selectedTask.is_overdue ? \"Yes\" : \"No\"}\n              </p>\n              <p>\n                <strong>Public:</strong> {selectedTask.is_public ? \"Yes\" : \"No\"}\n              </p>\n              {selectedTask.image && (\n                <div>\n                  <p>\n                    <strong>Image:</strong>\n                  </p>\n                  <Image src={selectedTask.image} alt=\"Task\" fluid />\n                </div>\n              )}\n            </>\n          )}\n        </Modal.Body>\n        <Modal.Footer className={styles.calendarModalFooter}>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowModal(false)}\n            className={styles.closeButton}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={handleEditRedirect}\n            className={styles.editButton}\n          >\n            Edit Task\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default MyCalendar;\n","export default __webpack_public_path__ + \"static/media/upload.327ce923.png\";","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport styles from \"../styles/Asset.module.css\";\n\n// Asset component\nconst Asset = ({ spinner, src, message }) => {\n  return (\n    <div className={`${styles.Asset} p-4`}>\n      {spinner && <Spinner animation=\"border\" />}\n      {src && <img src={src} alt={message} />}\n      {message && <p className=\"mt-4\">{message}</p>}\n    </div>\n  );\n};\n\nexport default Asset;\n","import React, { useRef, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { Alert, Image } from \"react-bootstrap\";\n\nimport Upload from \"../../assets/upload.png\";\n\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport Asset from \"../../components/Asset\";\nimport { useHistory } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\nfunction TaskCreateForm() {\n  // Redirect user if not logged in\n  useRedirect(\"loggedOut\");\n  // State to manage form errors\n  const [errors, setErrors] = useState({});\n\n  // State for managing task data\n  const [taskData, setTaskData] = useState({\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    due_date: \"\",\n    is_overdue: false,\n    is_public: false,\n    priority: \"medium\",\n    category: \"other\",\n    status: \"open\",\n  });\n  const {\n    title,\n    content,\n    image,\n    due_date,\n    priority,\n    category,\n    status,\n    is_overdue,\n    is_public,\n  } = taskData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    setTaskData({\n      ...taskData,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let newErrors = {};\n\n    // Validation for required fields\n    if (!title.trim()) newErrors.title = [\"This field is required.\"];\n    if (!content.trim()) newErrors.content = [\"This field is required.\"];\n    if (!due_date.trim()) newErrors.due_date = [\"This field is required.\"];\n\n    // If any issue, updated 'errors' and abort submission\n    if (Object.keys(newErrors).length) {\n      setErrors(newErrors);\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    if (imageInput.current && imageInput.current.files[0]) {\n      formData.append(\"image\", imageInput.current.files[0]);\n    }\n    formData.append(\"due_date\", due_date);\n    formData.append(\"priority\", priority);\n    formData.append(\"category\", category);\n    formData.append(\"status\", status);\n    formData.append(\"is_overdue\", is_overdue);\n    formData.append(\"is_public\", is_public);\n\n    try {\n      const { data } = await axiosReq.post(\"/tasks/\", formData);\n      history.push(`/tasks/${data.id}`);\n    } catch (err) {\n      console.log(err);\n      if (err.response?.status !== 401) setErrors(err.response?.data);\n    }\n  };\n\n  const textFields = (\n    <div className={styles.taskFormDiv}>\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Form.Group>\n        <Form.Label>Content</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"textarea\"\n          rows={3}\n          name=\"content\"\n          value={content}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Form.Group>\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          type=\"date\"\n          name=\"due_date\"\n          value={due_date}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.due_date?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Form.Group>\n        <Form.Label>Priority</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"priority\"\n          value={priority}\n          onChange={handleChange}\n        >\n          <option value=\"urgent\">🔴 Urgent</option>\n          <option value=\"high\">🟡 High Priority</option>\n          <option value=\"medium\">🟢 Medium Priority</option>\n          <option value=\"low\">🔵 Low Priority</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Category</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"category\"\n          value={category}\n          onChange={handleChange}\n        >\n          <option value=\"work\">Work</option>\n          <option value=\"personal\">Personal</option>\n          <option value=\"other\">Other</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Status</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"status\"\n          value={status}\n          onChange={handleChange}\n        >\n          <option value=\"open\">Open</option>\n          <option value=\"in_progress\">In Progress</option>\n          <option value=\"done\">Done</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Overdue\"\n          name=\"is_overdue\"\n          checked={is_overdue}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Public\"\n          name=\"is_public\"\n          checked={is_public}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <div className=\"text-center\">\n        <Button\n          className={`${btnStyles.Button} ${btnStyles.Dark} btn my-auto`}\n          onClick={() => history.goBack()}\n        >\n          cancel\n        </Button>\n        <Button\n          className={`${btnStyles.Button} ${btnStyles.Green} btn my-auto`}\n          type=\"submit\"\n        >\n          create\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit} className={styles.taskForm}>\n      <Row>\n        <Col className=\"py-2 p-0 p-md-2\" md={7} lg={8}>\n          <Container\n            className={`${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image && (\n                <>\n                  <figure>\n                    {image && (\n                      <Image className={appStyles.Image} src={image} rounded />\n                    )}\n                  </figure>\n\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} ${btnStyles.Dark} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Change the image\n                    </Form.Label>\n                  </div>\n                </>\n              )}\n              {!image && (\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset src={Upload} message=\"Click to upload image\" />\n                </Form.Label>\n              )}\n\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n              />\n            </Form.Group>\n            {errors?.image?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n\n        <Col md={5} lg={4} className=\"d-none d-md-block p-0 p-md-2\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default TaskCreateForm;\n","import React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport styles from \"../styles/MoreDropdown.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\n// Dropdown for editing user Account\n\nexport function AccountEditDropdown({ id }) {\n  const history = useHistory();\n  return (\n    <Dropdown className={`ml-auto px-3 ${styles.Absolute}`} drop=\"left\">\n      <Dropdown.Toggle as={DotsDropDown} />\n      <Dropdown.Menu className={`text-center ${styles.AccountDropdown}`}>\n        <Dropdown.Item\n          className={styles.Item}\n          onClick={() => history.push(`/accounts/${id}/edit`)}\n          aria-label=\"manage-account\"\n        >\n          <i className={`fas fa-edit ${styles.ItemIcon}`} />{\" \"}\n          <span className={styles.ItemText}>manage account</span>\n        </Dropdown.Item>\n        <Dropdown.Item\n          className={styles.Item}\n          onClick={() => history.push(`/accounts/${id}/edit/username`)}\n          aria-label=\"edit-username\"\n        >\n          <i className={`far fa-id-card ${styles.ItemIcon}`} />\n          <span className={styles.ItemText}>change username</span>\n        </Dropdown.Item>\n        <Dropdown.Item\n          className={styles.Item}\n          onClick={() => history.push(`/accounts/${id}/edit/password`)}\n          aria-label=\"edit-password\"\n        >\n          <i className={`fas fa-key ${styles.ItemIcon}`} />\n          <span className={styles.ItemText}>change password</span>\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\n// Dropdown for Edit/Delete Tasks and Comments\n\nconst DotsDropDown = React.forwardRef(({ onClick }, ref) => (\n  <i\n    className={`fa-solid fa-ellipsis-vertical ${styles.DotsIcon}`}\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  />\n));\n\nexport const MoreDropdown = ({ handleEdit, handleDelete }) => {\n  return (\n    <Dropdown className=\"ml-auto\" drop=\"left\">\n      <Dropdown.Toggle as={DotsDropDown} />\n\n      <Dropdown.Menu\n        className={`text-center ${styles.CommentDropdownMenu}`}\n        popperConfig={{ strategy: \"fixed\" }}\n      >\n        <Dropdown.Item\n          className={styles.DropdownItem}\n          onClick={handleEdit}\n          aria-label=\"edit\"\n        >\n          <i\n            className={`fa-solid fa-pen-to-square ${styles.MoreDropdownIcon}`}\n          />{\" \"}\n        </Dropdown.Item>\n        <Dropdown.Item\n          className={styles.DropdownItem}\n          onClick={handleDelete}\n          aria-label=\"delete\"\n        >\n          <i className={`fas fa-trash-alt ${styles.MoreDropdownIcon}`} />{\" \"}\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"../../styles/Task.module.css\";\nimport Card from \"react-bootstrap/Card\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\nimport { MoreDropdown } from \"../../components/MoreDropdown\";\nimport Media from \"react-bootstrap/Media\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nconst Task = (props) => {\n  const {\n    id,\n    owner,\n    updated_at,\n    title,\n    content,\n    image,\n    due_date,\n    onTaskDelete,\n    is_public,\n  } = props;\n\n  const currentUser = useContext(CurrentUserContext);\n  const is_owner = currentUser?.username === owner;\n  const history = useHistory();\n  const dueDateObj = new Date(due_date);\n\n  // Format due date\n  const formattedDueDate = dueDateObj.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  // Handle editing and redirecting\n  const handleEdit = () => {\n    history.push(`/tasks/${id}/edit`);\n  };\n\n  // Handles deletion of task\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/tasks/${id}/`);\n      onTaskDelete(id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Card className={styles.Task}>\n      <Card.Body\n        className={`${styles.TitleSection} d-flex justify-content-between`}\n      >\n        <div className={`d-flex align-items-center ${styles.TitleContainer}`}>\n          {is_public && (\n            <div className={styles.PublicInfo}>\n              <i className={`fa-solid fa-users ${styles.PublicIcon}`} />\n              <span className={styles.PublicText}>public</span>\n            </div>\n          )}\n          {title && (\n            <Link to={`/tasks/${id}`} className={styles.taskTitleLink}>\n              <Card.Title className={styles.taskTitle}>{title}</Card.Title>\n            </Link>\n          )}\n        </div>\n\n        <div\n          className={`d-flex align-items-center ${styles.DateAndDropdownContainer}`}\n        >\n          <span className={styles.creationDate}>{updated_at}</span>\n          {is_owner && (\n            <div className=\"ml-2\">\n              <MoreDropdown\n                handleEdit={handleEdit}\n                handleDelete={handleDelete}\n              />\n            </div>\n          )}\n        </div>\n      </Card.Body>\n\n      <Link to={`/tasks/${id}`} className={styles.ImageSection}>\n        {image && <Card.Img src={image} alt={title} />}\n      </Link>\n\n      <Card.Body className={styles.ContentSection}>\n        <Media className=\"align-items-center justify-content-between\">\n          <div className=\"d-flex align-items-center\">{content}</div>\n        </Media>\n      </Card.Body>\n      <Card.Body className={styles.FooterSection}>\n        <p className={styles.DueDateP}>\n          Due date:{\" \"}\n          <span className={styles.DueDateSpan}>{formattedDueDate}</span>\n        </p>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Task;\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport styles from \"../../styles/TaskCommentEditForm.module.css\";\n\nfunction TaskCommentEditForm(props) {\n  const { id, taskId, content, setShowEditForm, setComments } = props;\n\n  // state to manage content of the form\n  const [formContent, setFormContent] = useState(content);\n\n  // Event handler for changes in the form input\n  const handleChange = (event) => {\n    setFormContent(event.target.value);\n  };\n\n  // Event handler for form submission\n  const handleSubmit = async (event) => {\n    // Prevents the default form submission behaviour\n    event.preventDefault();\n\n    // Trim content to remove trailing whitespaces\n    const trimmedContent = formContent.trim();\n\n    // Check if trimmed content is empty and logs an error if true\n    if (!trimmedContent) {\n      console.error(\"Comment content cannot be empty.\");\n      return;\n    }\n\n    try {\n      // Sends a PUT request to update the comment with the new content\n      await axiosRes.put(`/comments/${id}/`, {\n        task: taskId,\n        content: trimmedContent,\n      });\n\n      // Updates the comments state with the new comment content\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.map((comment) =>\n          comment.id === id ? { ...comment, content: trimmedContent } : comment\n        ),\n      }));\n\n      // Closes the edit form\n      setShowEditForm(false);\n    } catch (err) {\n      // Logs an error message if the update operation fails\n      console.error(\"Error updating comment:\", err.response.data);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"pr-1\">\n        <Form.Control\n          className={styles.Form}\n          as=\"textarea\"\n          value={formContent}\n          onChange={handleChange}\n          rows={2}\n        />\n      </Form.Group>\n      <div className=\"text-right\">\n        <button\n          className={styles.BtnCancel}\n          onClick={() => setShowEditForm(false)}\n          type=\"button\"\n        >\n          cancel\n        </button>\n        <button\n          className={styles.BtnSave}\n          disabled={!formContent.trim()}\n          type=\"submit\"\n        >\n          save\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default TaskCommentEditForm;\n","import React, { useState } from \"react\";\nimport { Media } from \"react-bootstrap\";\nimport Avatar from \"../../components/Avatar\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport styles from \"../../styles/TaskComment.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { MoreDropdown } from \"../../components/MoreDropdown\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport TaskCommentEditForm from \"./TaskCommentEditForm\";\n\nconst TaskComment = (props) => {\n  const {\n    account_id,\n    account_image,\n    created_at,\n    content,\n    author,\n    setTask,\n    setComments,\n    id,\n  } = props;\n\n  const [showEditForm, setShowEditForm] = useState(false);\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === author;\n  const taskId = props.task;\n\n  // Delete comments \n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/comments/${id}/`);\n      setTask((prevTask) => ({\n        results: [\n          {\n            ...(prevTask.results[0]),\n          },\n        ],\n      }));\n\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.filter((comment) => comment.id !== id),\n      }));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <hr />\n      <div className={styles.CommentForm}>\n        <Media>\n          <Link to={`/accounts/${account_id}`} className=\"mt-1\">\n            <Avatar src={currentUser?.account_image} height={25} />\n          </Link>\n          <Media.Body className=\"mb-1 align-self-center ml-2\">\n            <h6 className={styles.Owner}>{author}</h6>\n            <p>{content}</p>\n            {showEditForm ? (\n              <TaskCommentEditForm\n                id={id}\n                taskId={taskId}\n                content={content}\n                accountImage={account_image}\n                setComments={setComments}\n                setShowEditForm={setShowEditForm}\n              />\n            ) : (\n              <small className={styles.Date}>{created_at}</small>\n            )}\n          </Media.Body>\n          {is_owner && !showEditForm && (\n            <MoreDropdown\n              handleEdit={() => setShowEditForm(true)}\n              handleDelete={handleDelete}\n            />\n          )}\n        </Media>\n      </div>\n      <hr />\n    </>\n  );\n};\n\nexport default TaskComment;\n","import React, { useState } from \"react\";\nimport { Form, InputGroup, Button, Row, Container, Col } from \"react-bootstrap\";\nimport Avatar from \"../../components/Avatar\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport styles from \"../../styles/TaskComment.module.css\";\n\n// TaskCommentCreateForm for creating comments on tasks\nconst TaskCommentCreateForm = ({ taskId, setComments }) => {\n  // managing the content of the comment\n  const [content, setContent] = useState(\"\");\n  // access the current user data\n  const currentUser = useCurrentUser();\n\n  // Handle changes in the comment input field\n  const handleChange = (e) => setContent(e.target.value);\n\n  // Handle submission of the comment form\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents default form submission actiom\n    try {\n      // POST request to create new comment with task ID and content\n      const { data } = await axiosRes.post(\"/comments/\", {\n        content,\n        task: taskId,\n      });\n      // Update state to include new comment in the comments list\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: [data, ...prevComments.results],\n      }));\n      // Clear the content field after successful submission\n      setContent(\"\");\n    } catch (err) {\n      // Log any errors that occur during the submission\n      console.log(err);\n    }\n  };\n\n  return (\n    <Container className={styles.CommentForm}>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col sm={12} md={11} className=\"pr-md-2 mt-1\">\n            <InputGroup>\n              <Avatar\n                src={currentUser?.account_image}\n                height={25}\n                className=\"mr-2\"\n              />\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                onChange={handleChange}\n                rows={2}\n                placeholder=\"Write a comment...\"\n                className={`${styles.InputFieldComments} mb-1 mt-1`}\n                style={{ borderRadius: \"3px\" }}\n              />\n            </InputGroup>\n          </Col>\n          <Col sm={12} md={1} className=\"pl-md-0 d-flex justify-content-end\">\n            <Button\n              type=\"submit\"\n              disabled={!content.trim()}\n              className={`${styles.PostCommentBtn} mt-2 mt-md-0`}\n            >\n              Post\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default TaskCommentCreateForm;\n","import { axiosReq } from \"../api/axiosDefaults\";\n\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, cur) => {\n        return acc.some((accResult) => accResult.id === cur.id)\n          ? acc\n          : [...acc, cur];\n      }, prevResource.results),\n    }));\n  } catch (err) {}\n};\n","import React, { useEffect, useState } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport { useParams } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport Task from \"./Task\";\nimport TaskComment from \"./TaskComment\";\nimport TaskCommentCreateForm from \"./TaskCommentCreateForm\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport styles from \"../../styles/TaskPage.module.css\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Asset from \"../../components/Asset\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\n// TaskPage to display a specific task and its comments\nfunction TaskPage() {\n  // Redirects logged out users\n  useRedirect(\"loggedOut\");\n  const { id } = useParams();\n  const [task, setTask] = useState({ results: [] });\n  // State to hold comments associated with the task\n  const [comments, setComments] = useState({ results: [] });\n  // Retrieves current user information\n  const currentUser = useCurrentUser();\n\n  // Boolean to check if the task data is loaded\n  const isDataLoaded = task.results && task.results.length > 0;\n  // Extract first task data if loaded, else null\n  const taskData = isDataLoaded ? task.results[0] : null;\n  // Check if current user is the owner of the task\n  const isOwner = taskData && currentUser?.username === taskData.owner;\n  // Check if the task is public\n  const isPublicTask = taskData && taskData.is_public;\n\n  // Clear task data from the state\n  const removeTaskFromState = () => {\n    setTask({ results: [] });\n  };\n\n  // Fetch task and comments data when the component mounts or the ID changes\n  useEffect(() => {\n    const fetchTaskAndComments = async () => {\n      try {\n        // Fetches task and comments data from the server using the task ID\n        const [{ data: taskResponse }, { data: commentsResponse }] =\n          await Promise.all([\n            axiosReq.get(`/tasks/${id}`),\n            axiosReq.get(`/comments/?task_id=${id}`),\n          ]);\n\n        // Set fetched task and comments data to their respective states\n        setTask({ results: [taskResponse] });\n        setComments(commentsResponse);\n      } catch (err) {\n        // Logs the error if the fetching fails\n        console.log(err);\n      }\n    };\n\n    // Calls the fetch function\n    fetchTaskAndComments();\n  }, [id]);\n\n  return (\n    <Row className=\"h-100\">\n      <Col className=\"py-2 p-0 p-lg-2\" lg={10}>\n        {isDataLoaded && (\n          <>\n            <Task\n              {...taskData}\n              setTasks={setTask}\n              taskPage\n              removeTask={removeTaskFromState}\n            />\n            <Container className={styles.CommentContainer}>\n              {(isPublicTask || isOwner) && (\n                <TaskCommentCreateForm taskId={id} setComments={setComments} />\n              )}\n              <InfiniteScroll\n                dataLength={comments.results.length}\n                next={() => fetchMoreData(comments, setComments)}\n                hasMore={!!comments.next}\n                loader={<Asset spinner />}\n              >\n                {comments.results.map((comment) => (\n                  <TaskComment\n                    key={comment.id}\n                    {...comment}\n                    setTask={setTask}\n                    setComments={setComments}\n                    task={id}\n                  />\n                ))}\n              </InfiniteScroll>\n            </Container>\n          </>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default TaskPage;\n","export default __webpack_public_path__ + \"static/media/no-results.055a1c0b.png\";","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\n// Context to share account data through components\nexport const AccountDataContext = createContext();\nexport const SetAccountDataContext = createContext();\n\n// Custom hooks for easy access to context\nexport const useAccountData = () => useContext(AccountDataContext);\nexport const useSetAccountData = () => useContext(SetAccountDataContext);\n\n// Wrap children components and provide them with account data\nexport const AccountDataProvider = ({ children }) => {\n  const [accountData, setAccountData] = useState({\n    pageAccount: { results: [] },\n    newestAccounts: { results: [] },\n  });\n\n  // Access current user data\n  const currentUser = useCurrentUser();\n\n  // Fetch and set account data when component mounts or currentUser changes\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        // Fetching newest account data\n        const { data } = await axiosReq.get(\"/accounts/?ordering=-created_at\");\n        // Updating state with fetched data\n        setAccountData((prevState) => ({\n          ...prevState,\n          newestAccounts: data,\n        }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    handleMount();\n  }, [currentUser]);\n\n  // Provide accountData and setAccountData to children component\n  return (\n    <AccountDataContext.Provider value={accountData}>\n      <SetAccountDataContext.Provider value={setAccountData}>\n        {children}\n      </SetAccountDataContext.Provider>\n    </AccountDataContext.Provider>\n  );\n};\n","import React from \"react\";\nimport styles from \"../../styles/Account.module.css\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\n\n// Account component\nconst Account = (props) => {\n  // Destructuring props to extract 'account', 'mobile', and 'imageSize' with default value\n  const { account, mobile, imageSize = 45 } = props;\n  // Ddestructuring 'account' to get 'id', 'image' and 'owner'\n  const { id, image, owner } = account;\n\n  return (\n    <div\n      className={`my-3 d-flex align-items-center ${mobile && \"flex-column\"}`}\n    >\n      <div>\n        <Link className=\"align-self-center\" to={`/accounts/${id}`}>\n          <Avatar src={image} height={imageSize} />\n        </Link>\n      </div>\n      <div className={`mx-2 ${styles.WordBreak}`}>\n        <Link className=\"align-self-center\" to={`/accounts/${id}`}>\n          <strong>{owner}</strong>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"../../styles/NewestAccounts.module.css\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { useAccountData } from \"../../contexts/AccountDataContext\";\nimport Asset from \"../../components/Asset\";\nimport Account from \"./Account\";\n\nconst NewestAccounts = ({ mobile }) => {\n  const { newestAccounts } = useAccountData();\n  const [displayedAccounts, setDisplayedAccounts] = useState([]);\n\n  useEffect(() => {\n    if (newestAccounts.results) {\n      // Sort by created_at in descending order\n      const sortedAccounts = [...newestAccounts.results].sort(\n        (a, b) =>\n          new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n      );\n\n      // Determine nr of accounts to display based on screen size\n      const numAccountsToShow = mobile ? 3 : 5;\n      setDisplayedAccounts(sortedAccounts.slice(0, numAccountsToShow));\n    }\n  }, [newestAccounts, mobile]);\n\n  // Adjusted column sizes for different screen sizes\n  const columnSize = mobile ? 4 : 12;\n\n  return (\n    <Container\n      className={`${styles.NewestAccounts} ${\n        mobile ? \"d-lg-none text-center mb-3\" : \"\"\n      }`}\n    >\n      {displayedAccounts.length ? (\n        <>\n          <p className={styles.NewestUsersP}>Newest Users</p>\n          <Row className={`${mobile ? styles.NewestAccountsMobile : \"\"}`}>\n            {displayedAccounts.map((account) => (\n              <Col key={account.id} xs={columnSize} className=\"mb-3\">\n                <Account account={account} mobile={mobile} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      ) : (\n        <Asset spinner />\n      )}\n    </Container>\n  );\n};\n\nexport default NewestAccounts;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Post from \"./Task\";\nimport Asset from \"../../components/Asset\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\n\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/TasksPage.module.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport NoResults from \"../../assets/no-results.png\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport NewestAccounts from \"../accounts/NewestAccounts\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\n// TasksPage component, accepting props for an optional message and filter\nfunction TasksPage({ message, filter = \"\" }) {\n  // Redirect user if not logged in\n  useRedirect(\"loggedOut\");\n\n  // State for storing tasks and loading status\n  const [tasks, setTasks] = useState({ results: [] });\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  // Get current location path\n  const { pathname } = useLocation();\n\n  // Access current user information from context\n  const currentUser = useContext(CurrentUserContext);\n\n  // State to store search query\n  const [query, setQuery] = useState(\"\");\n\n  // remove task from the list by it ID\n  const removeTaskFromList = (taskId) => {\n    setTasks((prevTasks) => ({\n      ...prevTasks,\n      results: prevTasks.results.filter((task) => task.id !== taskId),\n    }));\n  };\n\n  // Fetch tasks when dependencies change\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        // Check if a user is logged in\n        const username = currentUser?.username;\n        if (!username) {\n          console.error(\"No logged-in user found!\");\n          return; // Exit if no user is found\n        }\n\n        // Fetch tasks data from the API\n        const { data } = await axiosReq.get(\n          `/tasks/?owner__username=${username}&${filter}search=${query}`\n        );\n\n        // Update state with fetched tasks and set loading status\n        setTasks(data);\n        setHasLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    // Reset loading state and set a timer to delay the fetch\n    setHasLoaded(false);\n    const timer = setTimeout(() => {\n      fetchTasks();\n    }, 1000); // Delayed fetch\n\n    // Cleanup function to clear the timer\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [filter, query, pathname, currentUser]);\n\n  return (\n    <Row className=\"h-100\">\n      <Col className=\"py-2 p-0 p-lg-2\" lg={8}>\n        <NewestAccounts mobile />\n        <i className={`fa-solid fa-magnifying-glass ${styles.SearchIcon}`} />\n        <Form\n          className={styles.SearchBar}\n          onSubmit={(event) => event.preventDefault()}\n        >\n          <Form.Control\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n            type=\"text\"\n            className=\"mr-sm-2\"\n            placeholder=\"Search tasks\"\n          />\n        </Form>\n        {hasLoaded ? (\n          <>\n            {tasks.results.length ? (\n              <InfiniteScroll\n                children={tasks.results.map((task) => (\n                  <Post\n                    key={task.id}\n                    {...task}\n                    setTasks={setTasks}\n                    onTaskDelete={removeTaskFromList}\n                  />\n                ))}\n                dataLength={tasks.results.length}\n                loader={<Asset spinner />}\n                hasMore={!!tasks.next}\n                next={() => fetchMoreData(tasks, setTasks)}\n              />\n            ) : (\n              <Container className={appStyles.Content}>\n                <Asset src={NoResults} message={message} />\n                <p>No tasks created yet</p>\n              </Container>\n            )}\n          </>\n        ) : (\n          <Container className={appStyles.Content}>\n            <Asset spinner />\n          </Container>\n        )}\n      </Col>\n      <Col md={4} className=\"d-none d-lg-block p-0 p-lg-2\">\n        <NewestAccounts />\n      </Col>\n    </Row>\n  );\n}\n\nexport default TasksPage;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { Alert, Image } from \"react-bootstrap\";\nimport Asset from \"../../components/Asset\";\n\nimport Upload from \"../../assets/upload.png\";\n\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nfunction TaskEditForm() {\n  const [errors, setErrors] = useState({});\n\n  const [taskData, setTaskData] = useState({\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    due_date: \"\",\n    is_overdue: false,\n    is_public: false,\n    priority: \"medium\",\n    category: \"other\",\n    status: \"open\",\n  });\n  const {\n    title,\n    content,\n    image,\n    due_date,\n    priority,\n    category,\n    status,\n    is_overdue,\n    is_public,\n  } = taskData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n  const { id } = useParams();\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchTaskData = async () => {\n      try {\n        const { data } = await axiosReq.get(`/tasks/${id}/`);\n        setTaskData(data);\n        setHasLoaded(true); // Set hasLoaded to true after data is fetched\n      } catch (err) {\n        console.error(\"Failed to fetch task data:\", err);\n        setHasLoaded(true); // Set hasLoaded to true even if there is an error\n      }\n    };\n\n    fetchTaskData();\n  }, [id]); // Re-run when id changes\n\n  if (!hasLoaded) {\n    return (\n      <Container className={appStyles.Content}>\n        <Asset spinner />{\" \"}\n      </Container>\n    );\n  }\n  if (errors.form) {\n    return (\n      <Container className={appStyles.Content}>\n        <Alert variant=\"danger\">{errors.form}</Alert>\n      </Container>\n    );\n  }\n\n  const handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    setTaskData({\n      ...taskData,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let newErrors = {};\n\n    // If any issue, updated 'errors' and abort submission\n    if (Object.keys(newErrors).length) {\n      setErrors(newErrors);\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    if (imageInput.current && imageInput.current.files[0]) {\n      formData.append(\"image\", imageInput.current.files[0]);\n    }\n    formData.append(\"due_date\", due_date);\n    formData.append(\"priority\", priority);\n    formData.append(\"category\", category);\n    formData.append(\"status\", status);\n    formData.append(\"is_overdue\", is_overdue);\n    formData.append(\"is_public\", is_public);\n\n    try {\n      await axiosReq.put(`/tasks/${id}/`, formData);\n      history.push(`/tasks/${id}`);\n    } catch (err) {\n      console.log(err);\n      if (err.response?.status !== 401) setErrors(err.response?.data);\n    }\n  };\n\n  const textFields = (\n    <div className={styles.taskFormDiv}>\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          type=\"text\"\n          name=\"title\"\n          value={taskData.title || \"\"}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Content</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"textarea\"\n          rows={3}\n          name=\"content\"\n          value={taskData.content || \"\"}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          type=\"date\"\n          name=\"due_date\"\n          value={taskData.due_date || \"\"}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.due_date?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Priority</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"priority\"\n          value={taskData.priority || \"\"}\n          onChange={handleChange}\n        >\n          <option value=\"urgent\">🔴 Urgent</option>\n          <option value=\"high\">🟡 High Priority</option>\n          <option value=\"medium\">🟢 Medium Priority</option>\n          <option value=\"low\">🔵 Low Priority</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Category</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"category\"\n          value={taskData.category || \"\"}\n          onChange={handleChange}\n        >\n          <option value=\"work\">Work</option>\n          <option value=\"personal\">Personal</option>\n          <option value=\"other\">Other</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Status</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"status\"\n          value={taskData.status || \"\"}\n          onChange={handleChange}\n        >\n          <option value=\"open\">Open</option>\n          <option value=\"in_progress\">In Progress</option>\n          <option value=\"done\">Done</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Overdue\"\n          name=\"is_overdue\"\n          checked={taskData.is_overdue}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Public\"\n          name=\"is_public\"\n          checked={taskData.is_public}\n          onChange={handleChange}\n        />\n      </Form.Group>\n\n      <div className=\"text-center\">\n        <Button\n          className={`${btnStyles.Button} ${btnStyles.Dark} btn my-auto`}\n          onClick={() => history.goBack()}\n        >\n          cancel\n        </Button>\n        <Button\n          className={`${btnStyles.Button} ${btnStyles.Green} btn my-auto`}\n          type=\"submit\"\n        >\n          save\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit} className={styles.taskForm}>\n      <Row>\n        <Col className=\"py-2 p-0 p-md-2\" md={7} lg={8}>\n          <Container\n            className={`${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image && (\n                <>\n                  <figure>\n                    {image && (\n                      <Image className={appStyles.Image} src={image} rounded />\n                    )}\n                  </figure>\n\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} ${btnStyles.Dark} btn my-auto`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Change the image\n                    </Form.Label>\n                  </div>\n                </>\n              )}\n              {!image && (\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset src={Upload} message=\"Click to upload image\" />\n                </Form.Label>\n              )}\n\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n              />\n            </Form.Group>\n            {errors?.image?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n\n        <Col md={5} lg={4} className=\"d-none d-md-block p-0 p-md-2\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default TaskEditForm;\n","import React, { useEffect, useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nimport Asset from \"../../components/Asset\";\n\nimport styles from \"../../styles/AccountPage.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { AccountEditDropdown } from \"../../components/MoreDropdown.js\";\n\nimport Task from \"../tasks/Task.js\";\nimport { fetchMoreData } from \"../../utils/utils.js\";\nimport NoResults from \"../../assets/no-results.png\";\n\nimport NewestAccounts from \"./NewestAccounts\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useParams } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport {\n  useAccountData,\n  useSetAccountData,\n} from \"../../contexts/AccountDataContext\";\nimport { Image } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nfunction formatOwnerName(ownerName) {\n  if (!ownerName) return \"\";\n  return ownerName.toLowerCase().charAt(0).toUpperCase() + ownerName.slice(1);\n}\n\nfunction AccountPage() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [accountTasks, setAccountTasks] = useState({ results: [] });\n  const currentUser = useCurrentUser();\n  const { id } = useParams();\n  const setAccountData = useSetAccountData();\n  const { pageAccount } = useAccountData();\n  const [account] = pageAccount.results;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the account details of the visited account\n        const { data: visitedAccount } = await axiosReq.get(`/accounts/${id}/`);\n\n        // Add the tasks URL to fetch tasks of the visited account\n        let tasksUrl = `/tasks/?owner__username=${visitedAccount.owner}`;\n\n        // If the current user is not owner of account visited -\n        // only public tasks are fetched\n        if (currentUser?.username !== visitedAccount.owner) {\n          tasksUrl += \"&is_public=true\";\n        }\n\n        // Fetch the tasks based on the construct URL\n        const { data: accountTasks } = await axiosReq.get(tasksUrl);\n\n        // Update state with the fetched data\n        setAccountData((prevState) => ({\n          ...prevState,\n          pageAccount: { results: [visitedAccount] },\n        }));\n        setAccountTasks(accountTasks);\n        setHasLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [id, setAccountData, currentUser]);\n\n  const mainAccount = (\n    <>\n      {account?.is_owner && <AccountEditDropdown id={account?.id} />}\n      <Row noGutters className=\"px-3 text-center\">\n        <Col lg={3} className=\"text-lg-left\">\n          <Image\n            className={styles.AccountImage}\n            roundedCircle\n            src={account?.image}\n          />\n        </Col>\n        <Col lg={6}>\n          <h3 className={`${styles.UsernameHeader} m-2`}>\n            {formatOwnerName(account?.owner)}\n          </h3>\n        </Col>\n        {account?.content && (\n          <Col xs={12} md={12} className={`${styles.BioContent} p-3`}>\n            {account.content}\n          </Col>\n        )}\n      </Row>\n    </>\n  );\n\n  const mainAccountTasks = (\n    <>\n      <hr className={styles.CustomHR} />\n      <p className={`${styles.OwnersTasks} text-center`}>\n        {formatOwnerName(account?.owner)}'s tasks\n      </p>\n      {accountTasks.results.length ? (\n        <InfiniteScroll\n          children={accountTasks.results.map((task) => (\n            <Task key={task.id} {...task} setTasks={setAccountTasks} />\n          ))}\n          dataLength={accountTasks.results.length}\n          loader={<Asset spinner />}\n          hasMore={!!accountTasks.next}\n          next={() => fetchMoreData(accountTasks, setAccountTasks)}\n        />\n      ) : (\n        <Row className=\"justify-content-center\">\n          <Col xs={12} sm={12} md={12} className={styles.NoTasks}>\n            <Asset\n              src={NoResults}\n              message={`${formatOwnerName(\n                account?.owner\n              )} has no public tasks.`}\n            />\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n\n  return (\n    <Row>\n      <Col className=\"py-2 p-0 p-lg-2\" lg={8}>\n        <NewestAccounts mobile />\n        <Container className={appStyles.Content}>\n          {hasLoaded ? (\n            <>\n              {mainAccount}\n              {mainAccountTasks}\n            </>\n          ) : (\n            <Asset spinner />\n          )}\n        </Container>\n      </Col>\n      <Col lg={4} className=\"d-none d-lg-block p-0 p-lg-2\">\n        <NewestAccounts />\n      </Col>\n    </Row>\n  );\n}\n\nexport default AccountPage;\n","import React, { useEffect, useState } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport {\n  useCurrentUser,\n  useSetCurrentUser,\n} from \"../../contexts/CurrentUserContext\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/UsernamePasswordForm.module.css\";\n\n// Form to change username\nconst UsernameForm = () => {\n  // Redirects if the user is not logged in\n  useRedirect(\"loggedOut\");\n  // useState hook to manage username and form errors.\n  const [username, setUsername] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  // useHistory hook for programmatic navigation.\n  const history = useHistory();\n  // useParams hook to access the user ID from the URL.\n  const { id } = useParams();\n\n  // Accessing the current user context\n  const currentUser = useCurrentUser();\n  // update the current user context\n  const setCurrentUser = useSetCurrentUser();\n\n  // runs when the component mount or dependencies update\n  useEffect(() => {\n    // Checks if the current user ID matches the ID inURL\n    if (currentUser?.account_id?.toString() === id) {\n      setUsername(currentUser.username);\n    } else {\n      history.push(\"/\"); // Redirect to home if not current user\n    }\n  }, [currentUser, history, id]);\n\n  // Handle form submission.\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents default form submission behavior\n    try {\n      // PUT request to update the username.\n      await axiosRes.put(\"/dj-rest-auth/user/\", { username });\n      // Update the current user's username in context\n      setCurrentUser((prevUser) => ({\n        ...prevUser,\n        username,\n      }));\n      history.goBack(); // Navigate back to the previous page\n    } catch (err) {\n      console.log(err);\n      setErrors(err.response?.data); // Set errors from the response\n    }\n  };\n\n  return (\n    <Row>\n      <Col className=\"py-2 mx-auto text-center\" md={6}>\n        <Container className={appStyles.Content}>\n          <Form onSubmit={handleSubmit} className=\"my-2\">\n            <Form.Group>\n              <Form.Label className={styles.CustomUsernamePasswordLabel}>\n                Change username\n              </Form.Label>\n              <Form.Control\n                placeholder=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n              />\n            </Form.Group>\n            {errors?.username?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Dark}`}\n              onClick={() => history.goBack()}\n            >\n              cancel\n            </Button>\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Green}`}\n              type=\"submit\"\n            >\n              save\n            </Button>\n          </Form>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UsernameForm;\n","import React, { useEffect, useState } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/UsernamePasswordForm.module.css\";\n\n// UserPasswordForm for changing user password\nconst UserPasswordForm = () => {\n  // Redirects logged out users.\n  useRedirect(\"loggedOut\");\n  const history = useHistory();\n  const { id } = useParams();\n  // Access current user data\n  const currentUser = useCurrentUser();\n\n  // useState hook to manage form data and errors\n  const [userData, setUserData] = useState({\n    new_password1: \"\",\n    new_password2: \"\",\n  });\n  const { new_password1, new_password2 } = userData;\n  const [errors, setErrors] = useState({});\n\n  // Handle form field changes\n  const handleChange = (event) => {\n    setUserData({ ...userData, [event.target.name]: event.target.value });\n  };\n\n  // Perform actions on component mount and when dependencies changes\n  useEffect(() => {\n    // Redirect user if not the owner of account\n    if (currentUser?.account_id?.toString() !== id) {\n      history.push(\"/\");\n    }\n  }, [currentUser, history, id]);\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents default form submission action\n    try {\n      // POST request to change user password\n      await axiosRes.post(\"/dj-rest-auth/password/change/\", userData);\n      history.goBack(); // Navigate back to previous page\n    } catch (err) {\n      console.log(err);\n      setErrors(err.response?.data); // Set any errors from the response\n    }\n  };\n\n  return (\n    <Row>\n      <Col className=\"py-2 mx-auto text-center\" md={6}>\n        <Container className={appStyles.Content}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label className={styles.CustomUsernamePasswordLabel}>\n                New password\n              </Form.Label>\n              <Form.Control\n                placeholder=\"new password\"\n                type=\"password\"\n                value={new_password1}\n                onChange={handleChange}\n                name=\"new_password1\"\n              />\n            </Form.Group>\n            {errors?.new_password1?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Form.Group>\n              <Form.Label className={styles.CustomUsernamePasswordLabel}>\n                Confirm password\n              </Form.Label>\n              <Form.Control\n                placeholder=\"confirm new password\"\n                type=\"password\"\n                value={new_password2}\n                onChange={handleChange}\n                name=\"new_password2\"\n              />\n            </Form.Group>\n            {errors?.new_password2?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Dark}`}\n              onClick={() => history.goBack()}\n            >\n              cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              className={`${btnStyles.Button} ${btnStyles.Green}`}\n            >\n              save\n            </Button>\n          </Form>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UserPasswordForm;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport { axiosReq, axiosRes } from \"../../api/axiosDefaults\";\nimport {\n  useCurrentUser,\n  useSetCurrentUser,\n} from \"../../contexts/CurrentUserContext\";\n// import { useRedirect } from \"../../hooks/useRedirect\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/AccountEditForm.module.css\";\n\nconst AccountEditForm = () => {\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n  const { id } = useParams();\n  const history = useHistory();\n  const imageFile = useRef();\n\n  const [accountData, setAccountData] = useState({\n    name: \"\",\n    content: \"\",\n    image: \"\",\n  });\n  const { name, content, image } = accountData; // Destructure accountData\n\n  const [errors, setErrors] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    const handleMount = async () => {\n      if (currentUser?.account_id?.toString() === id) {\n        try {\n          const { data } = await axiosReq.get(`/accounts/${id}/`);\n          const { name, content, image } = data;\n          setAccountData({ name, content, image });\n        } catch (err) {\n          console.log(err);\n          history.push(\"/\");\n        }\n      } else {\n        history.push(\"/\");\n      }\n    };\n\n    handleMount();\n  }, [currentUser, history, id]);\n\n  const handleChange = (event) => {\n    setAccountData({\n      ...accountData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"content\", content);\n\n    if (imageFile?.current?.files[0]) {\n      formData.append(\"image\", imageFile?.current?.files[0]);\n    }\n\n    try {\n      const { data } = await axiosReq.put(`/accounts/${id}/`, formData);\n      setCurrentUser((currentUser) => ({\n        ...currentUser,\n        account_image: data.image,\n      }));\n      history.goBack();\n    } catch (err) {\n      console.log(err);\n      setErrors(err.response?.data);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      const response = await axiosRes.delete(\"/delete-user/\", {\n        data: { password: password },\n      });\n      if (response.status !== 400) {\n        console.log(\"logged out\");\n        setCurrentUser(null);\n        history.push(\"/signup\");\n      } else console.log(response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deleteAccountSection = (\n    <div className={`${styles.DeleteAccountDiv} mt-4`}>\n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Red}`}\n        onClick={() => setShowModal(true)}\n      >\n        Delete Account\n      </Button>\n      <p className={styles.WarningP}>\n        <span className={styles.WarningSpan}>Warning</span>: this action will\n        delete all your user data, and it is not undoable.\n      </p>\n    </div>\n  );\n\n  const textFields = (\n    <>\n      <Form.Group>\n        <Form.Label className={styles.BioLabel}>Bio</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          value={content}\n          onChange={handleChange}\n          name=\"content\"\n          rows={7}\n        />\n      </Form.Group>\n\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Dark}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Green}`}\n        type=\"submit\"\n      >\n        save\n      </Button>\n    </>\n  );\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col className=\"py-2 p-0 p-md-2 text-center\" md={7} lg={6}>\n            <Container className={appStyles.Content}>\n              <Form.Group>\n                {image && (\n                  <figure>\n                    <Image src={image} fluid />\n                  </figure>\n                )}\n                {errors?.image?.map((message, idx) => (\n                  <Alert variant=\"warning\" key={idx}>\n                    {message}\n                  </Alert>\n                ))}\n                <div>\n                  <Form.Label\n                    className={`${btnStyles.Button} ${btnStyles.Dark} btn my-auto`}\n                    htmlFor=\"image-upload\"\n                  >\n                    Change the image\n                  </Form.Label>\n                </div>\n                <Form.File\n                  id=\"image-upload\"\n                  ref={imageFile}\n                  accept=\"image/*\"\n                  onChange={(e) => {\n                    if (e.target.files.length) {\n                      setAccountData({\n                        ...accountData,\n                        image: URL.createObjectURL(e.target.files[0]),\n                      });\n                    }\n                  }}\n                />\n              </Form.Group>\n            </Container>\n          </Col>\n          <Col md={5} lg={6} className=\"py-2 p-0 p-md-2 text-center\">\n            <Container className={appStyles.Content}>{textFields}</Container>\n            <Container className={appStyles.Content}>\n              {deleteAccountSection}{\" \"}\n            </Container>\n          </Col>\n        </Row>\n      </Form>\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Account</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Please enter your password to confirm account deletion:</p>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={handleDelete}>\n            Delete Account\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AccountEditForm;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./App.module.css\";\nimport NavBar from \"./components/NavBar\";\nimport Container from \"react-bootstrap/Container\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { axiosReq } from \"./api/axiosDefaults\";\nimport SignUpForm from \"./pages/auth/SignUpForm\";\nimport SignInForm from \"./pages/auth/SignInForm\";\nimport MyCalendar from \"./components/MyCalendar\";\nimport TaskCreateForm from \"./pages/tasks/TaskCreateForm\";\nimport TaskPage from \"./pages/tasks/TaskPage\";\nimport TasksPage from \"./pages/tasks/TasksPage\";\nimport { useCurrentUser } from \"./contexts/CurrentUserContext\";\nimport TaskEditForm from \"./pages/tasks/TaskEditForm\";\nimport AccountPage from \"./pages/accounts/AccountPage\";\nimport UsernameForm from \"./pages/accounts/UsernameForm\";\nimport UserPasswordForm from \"./pages/accounts/UserPasswordForm\";\nimport AccountEditForm from \"./pages/accounts/AccountEditForm\";\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const username = currentUser?.username;\n        if (!username) {\n          console.error(\"No logged-in user found!\");\n          return; // Exit the function if no user is found\n        }\n        const { data } = await axiosReq.get(\n          `/tasks/?owner__username=${username}`\n        );\n        setTasks(data.results);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (currentUser) {\n      fetchTasks();\n    }\n  }, [currentUser]); // Dependency on currentUser\n\n  return (\n    <div className={styles.App}>\n      <NavBar />\n      <Container className={styles.Main}>\n        <Switch>\n          <Route exact path=\"/\" render={() => <MyCalendar tasks={tasks} />} />\n          <Route\n            exact\n            path=\"/alltasks\"\n            render={() => (\n              <TasksPage\n                message=\"No results found. Try another keyword.\"\n                setTasks={setTasks}\n                tasks={tasks}\n              />\n            )}\n          />\n          <Route exact path=\"/signin\" render={() => <SignInForm />} />\n          <Route exact path=\"/signup\" render={() => <SignUpForm />} />\n          <Route exact path=\"/tasks/create\" render={() => <TaskCreateForm />} />\n          <Route exact path=\"/tasks/:id\" render={() => <TaskPage />} />\n          <Route exact path=\"/tasks\" render={() => <TasksPage />} />\n          <Route exact path=\"/tasks/:id/edit\" render={() => <TaskEditForm />} />\n          <Route exact path=\"/accounts/:id\" render={() => <AccountPage />} />\n          <Route\n            exact\n            path=\"/accounts/:id/edit/username\"\n            render={() => <UsernameForm />}\n          />\n          <Route\n            exact\n            path=\"/accounts/:id/edit/password\"\n            render={() => <UserPasswordForm />}\n          />\n          <Route\n            exact\n            path=\"/accounts/:id/edit\"\n            render={() => <AccountEditForm />}\n          />\n          <Route render={() => <p>Page not found!</p>} />\n        </Switch>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CurrentUserProvider } from \"./contexts/CurrentUserContext\";\nimport { AccountDataProvider } from \"./contexts/AccountDataContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <CurrentUserProvider>\n        <AccountDataProvider>\n          <App />\n        </AccountDataProvider>\n      </CurrentUserProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TaskCreateEditForm_Container__2K-o6\",\"taskForm\":\"TaskCreateEditForm_taskForm__fTqX0\",\"closeButton\":\"TaskCreateEditForm_closeButton__1eIb2\",\"editButton\":\"TaskCreateEditForm_editButton__280ZQ\",\"formGroupCustom\":\"TaskCreateEditForm_formGroupCustom__3pQMI\",\"taskFormDiv\":\"TaskCreateEditForm_taskFormDiv__GNA8r\",\"formPlaceholder\":\"TaskCreateEditForm_formPlaceholder__2gt29\",\"changeImgBtn\":\"TaskCreateEditForm_changeImgBtn__Nxy8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"rainbow\":\"NavBar_rainbow__3OHcZ\",\"NavLink\":\"NavBar_NavLink__34ons\",\"Active\":\"NavBar_Active__3PBZb\",\"NavLinkTexts\":\"NavBar_NavLinkTexts__1gGsB\",\"CreateTaskButton\":\"NavBar_CreateTaskButton__21DC3\",\"CreateTaskText\":\"NavBar_CreateTaskText__1oW0v\",\"viewText\":\"NavBar_viewText__8Ox3o\",\"SearchResultsDropdown\":\"NavBar_SearchResultsDropdown__24X5I\",\"SearchInputContainer\":\"NavBar_SearchInputContainer__-CB6c\",\"NoUserFound\":\"NavBar_NoUserFound__1dBuD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DotsIcon\":\"MoreDropdown_DotsIcon__orToG\",\"Absolute\":\"MoreDropdown_Absolute__2RO70\",\"AccountDropdown\":\"MoreDropdown_AccountDropdown__3a9wk\",\"Item\":\"MoreDropdown_Item__1ogZW\",\"ItemText\":\"MoreDropdown_ItemText__2G_6j\",\"ItemIcon\":\"MoreDropdown_ItemIcon__XOScw\",\"DropdownItem\":\"MoreDropdown_DropdownItem__2E4UM\",\"MoreDropdownIcon\":\"MoreDropdown_MoreDropdownIcon__1uxua\",\"CommentDropdownMenu\":\"MoreDropdown_CommentDropdownMenu__13u1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Task_Task__3r7K9\",\"PublicIcon\":\"Task_PublicIcon__KwUnf\",\"PublicText\":\"Task_PublicText__13sNO\",\"PublicInfo\":\"Task_PublicInfo__26Fy3\",\"TitleSection\":\"Task_TitleSection__2FCnH\",\"taskTitle\":\"Task_taskTitle__1AvDP\",\"creationDate\":\"Task_creationDate__1d3VA\",\"ContentSection\":\"Task_ContentSection__1wP1_\",\"ImageSection\":\"Task_ImageSection__3QNNm\",\"FooterSection\":\"Task_FooterSection__1GoVv\",\"DueDateP\":\"Task_DueDateP__1qsaj\",\"DueDateSpan\":\"Task_DueDateSpan__3pLR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"SignInUpForm_Row__3PbVy\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"Container\":\"SignInUpForm_Container__2cuBp\",\"SignInCol\":\"SignInUpForm_SignInCol__3ImPK\",\"SignUpCol\":\"SignInUpForm_SignUpCol__28o4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Owner\":\"TaskComment_Owner__3gKei\",\"Date\":\"TaskComment_Date__2npnW\",\"InputFieldComments\":\"TaskComment_InputFieldComments__3Fq48\",\"TaskCommentCreateForm\":\"TaskComment_TaskCommentCreateForm__4y4Xu\",\"PostCommentBtn\":\"TaskComment_PostCommentBtn__L2U9n\",\"CommentFormCol\":\"TaskComment_CommentFormCol__2dISq\",\"CommentForm\":\"TaskComment_CommentForm__1tuMY\",\"InputGroup\":\"TaskComment_InputGroup__3j2j5\",\"Avatar\":\"TaskComment_Avatar__2SVmW\",\"ButtonContainer\":\"TaskComment_ButtonContainer__36Yte\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarContainer\":\"MyCalendar_calendarContainer__3mWfz\",\"calendarModal\":\"MyCalendar_calendarModal__3yXjP\",\"calendarModalHeader\":\"MyCalendar_calendarModalHeader__TKw01\",\"calendarModalBody\":\"MyCalendar_calendarModalBody__faVvp\",\"calendarModalFooter\":\"MyCalendar_calendarModalFooter__2MVeP\",\"closeButton\":\"MyCalendar_closeButton__1ltmF\",\"editButton\":\"MyCalendar_editButton__3zpTC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountImage\":\"AccountPage_AccountImage__3F6Yr\",\"UsernameHeader\":\"AccountPage_UsernameHeader__qRBHs\",\"BioContent\":\"AccountPage_BioContent__2grvv\",\"CustomHR\":\"AccountPage_CustomHR__aMvrn\",\"OwnersTasks\":\"AccountPage_OwnersTasks__8wMQu\",\"NoTasks\":\"AccountPage_NoTasks__2B_Np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomUsernamePasswordLabel\":\"UsernamePasswordForm_CustomUsernamePasswordLabel__37nma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeleteAccountDiv\":\"AccountEditForm_DeleteAccountDiv__1A7sX\",\"WarningP\":\"AccountEditForm_WarningP__2XaTo\",\"WarningSpan\":\"AccountEditForm_WarningSpan__3hIHT\",\"BioLabel\":\"AccountEditForm_BioLabel__xZUgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"TaskCommentEditForm_Form__wcOZE\",\"BtnCancel\":\"TaskCommentEditForm_BtnCancel__r4M55\",\"BtnSave\":\"TaskCommentEditForm_BtnSave__2sHvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewestAccounts\":\"NewestAccounts_NewestAccounts__1nNIw\",\"NewestUsersP\":\"NewestAccounts_NewestUsersP__wx6Lj\",\"NewestAccountsMobile\":\"NewestAccounts_NewestAccountsMobile__2u0SF\",\"col\":\"NewestAccounts_col__1Q6Ci\",\"col-lg-12\":\"NewestAccounts_col-lg-12__Ymvck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"TasksPage_SearchBar__hCMay\",\"SearchIcon\":\"TasksPage_SearchIcon__7YqSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};"],"sourceRoot":""}