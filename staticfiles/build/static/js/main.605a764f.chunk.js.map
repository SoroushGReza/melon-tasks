{"version":3,"sources":["styles/Button.module.css","styles/Asset.module.css","styles/TaskPage.module.css","styles/Account.module.css","App.module.css","assets/months/1january.webp","assets/months/2februari.webp","assets/months/3march.webp","assets/months/4april.webp","assets/months/5may.webp","assets/months/6june.webp","assets/months/7july.webp","assets/months/8august.webp","assets/months/9september.webp","assets/months/10october.webp","assets/months/11november.webp","assets/months/12december.webp","assets/logo.png","api/axiosDefaults.js","contexts/CurrentUserContext.js","components/Avatar.js","hooks/useClickOutsideToggle.js","components/NavBar.js","assets/melon11.png","hooks/useRedirect.js","pages/auth/SignUpForm.js","assets/melon4.png","pages/auth/SignInForm.js","components/MyCalendar.js","assets/upload.png","components/Asset.js","pages/tasks/TaskCreateForm.js","components/MoreDropdown.js","pages/tasks/Task.js","pages/tasks/TaskCommentEditForm.js","pages/tasks/TaskComment.js","pages/tasks/TaskCommentCreateForm.js","utils/utils.js","pages/tasks/TaskPage.js","assets/no-results.png","contexts/AccountDataContext.js","pages/accounts/Account.js","pages/accounts/NewestAccounts.js","pages/tasks/TasksPage.js","pages/tasks/TaskEditForm.js","pages/accounts/AccountPage.js","pages/accounts/UsernameForm.js","pages/accounts/UserPasswordForm.js","pages/accounts/AccountEditForm.js","App.js","reportWebVitals.js","index.js","styles/TaskCreateEditForm.module.css","styles/NavBar.module.css","styles/MyCalendar.module.css","styles/MoreDropdown.module.css","styles/Task.module.css","styles/SignInUpForm.module.css","styles/TaskComment.module.css","styles/AccountPage.module.css","styles/UsernamePasswordForm.module.css","styles/AccountEditForm.module.css","styles/TaskCommentEditForm.module.css","styles/NewestAccounts.module.css","styles/TasksPage.module.css","styles/Avatar.module.css"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","handleMount","useCallback","async","data","get","err","console","log","useEffect","useMemo","interceptors","request","use","prevCurrentUser","push","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","Avatar","src","height","text","_jsxs","className","styles","width","alt","useClickOutsideToggle","callback","_len","arguments","length","refs","Array","_key","handleClickOutside","event","every","ref","current","contains","target","document","addEventListener","removeEventListener","NavBar","navbarRef","useRef","searchRef","navbarExpanded","setNavbarExpanded","searchExpanded","setSearchExpanded","searchQuery","setSearchQuery","searchResults","setSearchResults","addTaskIcon","NavLink","concat","CreateTaskButton","to","onClick","CreateTaskText","loggedInIcons","_Fragment","activeClassName","Active","NavLinkTexts","handleSignout","account_id","account_image","loggedOutIcons","Navbar","expanded","expand","fixed","Container","Brand","logo","SearchInputContainer","Form","inline","onSubmit","e","preventDefault","FormControl","type","placeholder","onChange","query","results","SearchResultsDropdown","map","user","id","username","NoUserFound","Toggle","Collapse","Nav","exact","useRedirect","userAuthStatus","location","useLocation","pathname","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","password1","password2","errors","setErrors","handleChange","name","Row","Col","md","appStyles","Content","Header","Group","controlId","Label","Control","Input","message","idx","Alert","variant","Button","btnStyles","Wide","Bright","non_field_errors","Link","SignUpCol","Image","FillerImage","SignUpMelonImage","SignInForm","signInData","setSignInData","password","SignInCol","SignInMelon","monthImages","require","MyCalendar","tasks","setTasks","calendarTasks","setCalendarTasks","showModal","setShowModal","selectedTask","setSelectedTask","showTaskListModal","setShowTaskListModal","selectedDate","setSelectedDate","currentView","setCurrentView","localStorage","getItem","windowWidth","setWindowWidth","window","innerWidth","fetchTasks","calendarTasksPreview","task","title","date","due_date","toString","unlisten","listen","handleFirstDayCellCheck","querySelectorAll","forEach","dayCell","Date","dataset","getDate","month","getMonth","imageUrl","style","backgroundImage","default","backgroundSize","backgroundPosition","position","filter","toDateString","classList","add","darkenBackground","remove","observer","MutationObserver","childList","subtree","calendarElement","querySelector","observe","disconnect","handleResize","handleViewChange","view","setItem","handleEditRedirect","taskId","handleDelete","delete","prevTasks","removeTaskFromList","truncateText","maxLength","substring","calendarContainer","FullCalendar","plugins","dayGridPlugin","initialView","views","dayGridYear","duration","year","buttonText","customButtons","click","headerToolbar","left","center","right","events","eventClick","clickInfo","find","error","datesSet","dateInfo","dayCellContent","_ref2","tasksOnDate","fluid","xs","handleIconClick","Modal","show","onHide","calendarModal","closeButton","calendarModalHeader","Title","Body","calendarModalBody","content","priority","category","is_overdue","is_public","image","Footer","calendarModalFooter","editButton","deleteButton","taskListModal","taskListModalHeader","taskListModalBody","ulTaskList","taskListItem","taskLink","buttonGroup","size","taskListModalFooter","Asset","spinner","Spinner","animation","TaskCreateForm","_errors$title","_errors$content","_errors$due_date","_errors$image","taskData","setTaskData","imageInput","checked","textFields","taskFormDiv","formGroupCustom","formPlaceholder","as","rows","Check","label","Dark","goBack","Green","newErrors","trim","Object","keys","formData","FormData","append","files","_err$response2","taskForm","lg","rounded","htmlFor","Upload","File","accept","URL","revokeObjectURL","createObjectURL","AccountEditDropdown","Dropdown","Absolute","drop","DotsDropDown","Menu","AccountDropdown","Item","ItemIcon","ItemText","React","forwardRef","DotsIcon","MoreDropdown","_ref3","handleEdit","CommentDropdownMenu","popperConfig","strategy","DropdownItem","MoreDropdownIcon","Task","props","owner","updated_at","onTaskDelete","is_owner","formattedDueDate","toLocaleDateString","day","Card","TitleSection","TitleContainer","PublicInfo","PublicIcon","PublicText","taskTitleLink","taskTitle","DateAndDropdownContainer","creationDate","ImageSection","Img","ContentSection","Media","FooterSection","DueDateP","DueDateSpan","TaskCommentEditForm","setShowEditForm","setComments","formContent","setFormContent","trimmedContent","put","prevComments","comment","BtnCancel","BtnSave","disabled","TaskComment","created_at","author","setTask","showEditForm","CommentForm","Owner","accountImage","prevTask","TaskCommentCreateForm","setContent","sm","InputGroup","InputFieldComments","borderRadius","PostCommentBtn","fetchMoreData","resource","setResource","next","prevResource","reduce","acc","cur","some","accResult","TaskPage","useParams","comments","isDataLoaded","isOwner","isPublicTask","taskResponse","commentsResponse","all","fetchTaskAndComments","taskPage","removeTask","removeTaskFromState","CommentContainer","InfiniteScroll","dataLength","hasMore","loader","AccountDataContext","SetAccountDataContext","useAccountData","AccountDataProvider","accountData","setAccountData","pageAccount","newestAccounts","prevState","Account","account","mobile","imageSize","WordBreak","NewestAccounts","displayedAccounts","setDisplayedAccounts","sortedAccounts","sort","a","b","getTime","numAccountsToShow","slice","columnSize","NewestUsersP","NewestAccountsMobile","TasksPage","hasLoaded","setHasLoaded","setQuery","timer","setTimeout","clearTimeout","SearchIcon","SearchBar","NoResults","TaskEditForm","fetchTaskData","form","formatOwnerName","ownerName","toLowerCase","charAt","toUpperCase","AccountPage","accountTasks","setAccountTasks","visitedAccount","tasksUrl","fetchData","mainAccount","noGutters","AccountImage","roundedCircle","UsernameHeader","BioContent","mainAccountTasks","CustomHR","OwnersTasks","NoTasks","UsernameForm","setUsername","_currentUser$account_","prevUser","CustomUsernamePasswordLabel","UserPasswordForm","_errors$new_password","_errors$new_password2","userData","setUserData","new_password1","new_password2","AccountEditForm","imageFile","setPassword","deleteAccountSection","DeleteAccountDiv","Red","WarningP","WarningSpan","BioLabel","_imageFile$current","_imageFile$current2","App","Main","Switch","Route","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","Router","getElementById"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,KAAO,qBAAqB,YAAc,4BAA4B,OAAS,uBAAuB,IAAM,oBAAoB,WAAa,2BAA2B,MAAQ,sBAAsB,aAAe,6BAA6B,MAAQ,sBAAsB,aAAe,6B,sBCA7WD,EAAOC,QAAU,CAAC,MAAQ,qB,sBCA1BD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,WAAa,6BAA6B,iBAAmB,mC,sBCAvHD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,aAAe,8BAA8B,eAAiB,gC,2CCAvHD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,QAAU,qBAAqB,YAAc,yBAAyB,MAAQ,mBAAmB,gBAAgB,2B,mCCDnL,OAAe,cAA0B,qC,mCCAzC,OAAe,cAA0B,sC,mCCAzC,OAAe,cAA0B,mC,mCCAzC,OAAe,cAA0B,mC,mCCAzC,OAAe,cAA0B,iC,mCCAzC,OAAe,cAA0B,kC,mCCAzC,OAAe,cAA0B,kC,mCCAzC,OAAe,cAA0B,oC,mCCAzC,OAAe,cAA0B,uC,mCCAzC,OAAe,cAA0B,sC,mCCAzC,OAAe,cAA0B,uC,mCCAzC,OAAe,cAA0B,uC,iJCA1B,MAA0B,iC,0CCGzCC,IAAMC,SAASC,QAAU,OACzBF,IAAMC,SAASE,QAAQC,KAAK,gBAAkB,sBAC9CJ,IAAMC,SAASI,iBAAkB,EAG1B,MAAMC,EAAWN,IAAMO,SACjBC,EAAWR,IAAMO,S,mBCIvB,MAAME,EAAqBC,0BACrBC,EAAwBD,0BAGxBE,EAAiBA,IAAMC,qBAAWJ,GAClCK,EAAoBA,IAAMD,qBAAWF,GAGrCI,EAAsBC,IAAmB,IAAlB,SAAEC,GAAUD,EAC9C,MAAOE,EAAaC,GAAkBC,mBAAS,MACzCC,EAAUC,cAGVC,EAAcC,uBAAYC,UAC9B,IACE,MAAM,KAAEC,SAAelB,EAASmB,IAAI,uBACpCR,EAAeO,EACjB,CAAE,MAAOE,GACPC,QAAQC,IAAIF,EACd,IACC,IAqDH,OAlDAG,qBAAU,KACRR,GAAa,GACZ,CAACA,IAGJS,mBAAQ,KAEN1B,EAAS2B,aAAaC,QAAQC,KAC5BV,UACE,UACQzB,IAAMI,KAAK,+BACnB,CAAE,MAAOwB,GAOP,OANAT,GAAgBiB,IACVA,GACFf,EAAQgB,KAAK,WAER,QAEFC,CACT,CACA,OAAOA,CAAM,IAEdV,GACQW,QAAQC,OAAOZ,KAK1BpB,EAASyB,aAAaQ,SAASN,KAC5BM,GAAaA,IACdhB,UAAgB,IAADiB,EACb,GAA6B,OAAb,QAAZA,EAAAd,EAAIa,gBAAQ,IAAAC,OAAA,EAAZA,EAAcC,QAAgB,CAChC,UACQ3C,IAAMI,KAAK,+BACnB,CAAE,MAAOwB,GACPT,GAAgBiB,IACVA,GACFf,EAAQgB,KAAK,WAER,OAEX,CACA,OAAOrC,IAAM4B,EAAIU,OACnB,CACA,OAAOC,QAAQC,OAAOZ,EAAI,GAE7B,GACA,CAACP,IAIFuB,cAACnC,EAAmBoC,SAAQ,CAACC,MAAO5B,EAAYD,SAC9C2B,cAACjC,EAAsBkC,SAAQ,CAACC,MAAO3B,EAAeF,SACnDA,KAEyB,E,qBCxEnB8B,MAfA/B,IAAiC,IAAhC,IAAEgC,EAAG,OAAEC,EAAS,GAAE,KAAEC,GAAMlC,EACxC,OACEmC,eAAA,QAAAlC,SAAA,CACE2B,cAAA,OACEQ,UAAWC,IAAON,OAClBC,IAAKA,EACLC,OAAQA,EACRK,MAAOL,EACPM,IAAI,WAELL,IACI,ECMIM,MAlBe,SAACC,GAAuB,IAAD,IAAAC,EAAAC,UAAAC,OAATC,EAAI,IAAAC,MAAAJ,EAAA,EAAAA,EAAA,KAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,EAAA,GAAAJ,UAAAI,GAC9ChC,qBAAU,KACR,MAAMiC,EAAsBC,IAExBJ,EAAKK,OAAOC,GAAQA,EAAIC,UAAYD,EAAIC,QAAQC,SAASJ,EAAMK,WAE/Db,GACF,EAKF,OADAc,SAASC,iBAAiB,YAAaR,GAChC,KACLO,SAASE,oBAAoB,YAAaT,EAAmB,CAC9D,GACA,CAACP,EAAUI,GAChB,EC0Mea,MA1MAA,KAEb,MAAMxD,EAAcN,IACdO,EAAiBL,IAEjB6D,EAAYC,iBAAO,MACnBC,EAAYD,iBAAO,OAGlBE,EAAgBC,GAAqB3D,oBAAS,IAC9C4D,EAAgBC,GAAqB7D,oBAAS,IAC9C8D,EAAaC,GAAkB/D,mBAAS,KACxCgE,EAAeC,GAAoBjE,mBAAS,IAGnDoC,GAAsB,IAAMuB,GAAkB,IAAQJ,GAEtDnB,GAAsB,IAAMyB,GAAkB,IAAQJ,GAGtD,MAkCMS,EACJnC,eAACoC,IAAO,CACNnC,UAAS,GAAAoC,OAAKnC,IAAOoC,iBAAgB,8BACrCC,GAAG,gBACHC,QAASA,IAAMZ,GAAkB,GAAO9D,SAAA,CAExC2B,cAAA,KAAGQ,UAAU,8BACbR,cAAA,QAAMQ,UAAS,GAAAoC,OAAKnC,IAAOuC,gBAAiB3E,SAAC,mBAK3C4E,EACJ1C,eAAA2C,WAAA,CAAA7E,SAAA,CACEkC,eAACoC,IAAO,CACNQ,gBAAiB1C,IAAO2C,OACxB5C,UAAWC,IAAOkC,QAClBG,GAAG,SACHC,QAASA,IAAMZ,GAAkB,GAAO9D,SAAA,CAExC2B,cAAA,KAAGQ,UAAU,2BACbR,cAAA,QAAMQ,UAAWC,IAAO4C,aAAahF,SAAC,aAGxCkC,eAACoC,IAAO,CACNnC,UAAWC,IAAOkC,QAClBG,GAAG,IACHC,QAASA,KArCOlE,WACpB,UACQzB,IAAMI,KAAK,yBACjBe,EAAe,KACjB,CAAE,MAAOS,GACPC,QAAQC,IAAIF,EACd,GAgCMsE,GACAnB,GAAkB,EAAM,EACxB9D,SAAA,CAEF2B,cAAA,KAAGQ,UAAU,mCACbR,cAAA,QAAMQ,UAAWC,IAAO4C,aAAahF,SAAC,gBAGxCkC,eAACoC,IAAO,CACNnC,UAAWC,IAAOkC,QAClBQ,gBAAiB1C,IAAO2C,OACxBN,GAAE,aAAAF,OAA0B,OAAXtE,QAAW,IAAXA,OAAW,EAAXA,EAAaiF,YAC9BR,QAASA,IAAMZ,GAAkB,GAAO9D,SAAA,CAExC2B,cAAA,OAAA3B,SACE2B,cAACG,EAAM,CAACC,IAAgB,OAAX9B,QAAW,IAAXA,OAAW,EAAXA,EAAakF,cAAenD,OAAQ,OAEnDL,cAAA,QAAMQ,UAAWC,IAAO4C,aAAahF,SAAC,kBAMtCoF,EACJlD,eAAA2C,WAAA,CAAA7E,SAAA,CACEkC,eAACoC,IAAO,CACNnC,UAAWC,IAAOkC,QAClBQ,gBAAiB1C,IAAO2C,OACxBN,GAAG,UACHC,QAASA,IAAMZ,GAAkB,GAAO9D,SAAA,CAExC2B,cAAA,KAAGQ,UAAU,iCACbR,cAAA,QAAMQ,UAAWC,IAAO4C,aAAahF,SAAC,eAExCkC,eAACoC,IAAO,CACNnC,UAAWC,IAAOkC,QAClBQ,gBAAiB1C,IAAO2C,OACxBN,GAAG,UACHC,QAASA,IAAMZ,GAAkB,GAAO9D,SAAA,CAExC2B,cAAA,KAAGQ,UAAU,0BACbR,cAAA,QAAMQ,UAAWC,IAAO4C,aAAahF,SAAC,kBAK5C,OACE2B,cAAC0D,IAAM,CACLC,SAAUzB,EACV1B,UAAWC,IAAOqB,OAClB8B,OAAO,KACPC,MAAM,MACNtC,IAAKQ,EAAU1D,SAEfkC,eAACuD,IAAS,CAAAzF,SAAA,CACR2B,cAAC2C,IAAO,CAACG,GAAG,IAAIC,QAASA,IAAMZ,GAAkB,GAAO9D,SACtD2B,cAAC0D,IAAOK,MAAK,CAAA1F,SACX2B,cAAA,OAAKI,IAAK4D,EAAMrD,IAAI,OAAON,OAAO,WAGrC/B,GACCiC,eAAA,OAAKC,UAAWC,IAAOwD,qBAAsB1C,IAAKU,EAAU5D,SAAA,CAC1D2B,cAACkE,IAAI,CAACC,QAAM,EAACC,SAAWC,GAAMA,EAAEC,iBAAiBjG,SAC/C2B,cAACuE,IAAW,CACVC,KAAK,OACLC,YAAY,mBACZjE,UAAU,UACVN,MAAOoC,EACPoC,SAlIa7F,UACzB,MAAM8F,EAAQN,EAAE3C,OAAOxB,MAGvB,GAFAqC,EAAeoC,GAEM,IAAjBA,EAAM3D,OACRyB,EAAiB,SAEjB,IAEE,MAAM,KAAE3D,SAAepB,EAASqB,IAAI,2BAAD6D,OAA4B+B,IAC/DlC,EAAiB3D,EAAK8F,SACtBvC,GAAkB,EACpB,CAAE,MAAOrD,GACPC,QAAQC,IAAIF,EACd,CACF,MAsHSoD,GACCpC,cAAA,OAAKQ,UAAWC,IAAOoE,sBAAsBxG,SAC1CmE,EAAcxB,OAAS,EACtBwB,EAAcsC,KAAKC,GACjB/E,cAAC2C,IAAO,CAENG,GAAE,aAAAF,OAAemC,EAAKC,IACtBjC,QAASA,KAxH3BV,GAAkB,GA0HEF,GAAkB,EAAM,EACxB9D,SAED0G,EAAKE,UAPDF,EAAKC,MAWdhF,cAAA,OAAKQ,UAAWC,IAAOyE,YAAY7G,SAAC,uBAM9C2B,cAAC0D,IAAOyB,OAAM,CACZpC,QAASA,IAAMZ,GAAmBD,GAClC,gBAAc,qBAEhB3B,eAACmD,IAAO0B,SAAQ,CAACJ,GAAG,mBAAkB3G,SAAA,CACnCC,GAAeoE,EAEhBnC,eAAC8E,IAAG,CAAC7E,UAAU,oBAAmBnC,SAAA,CAChCkC,eAACoC,IAAO,CACN2C,OAAK,EACL9E,UAAWC,IAAOkC,QAClBQ,gBAAiB1C,IAAO2C,OACxBN,GAAG,IACHC,QAASA,IAAMZ,GAAkB,GAAO9D,SAAA,CAExC2B,cAAA,KAAGQ,UAAU,8BACbR,cAAA,QAAMQ,UAAWC,IAAO4C,aAAahF,SAAC,YAGvCC,EAAc2E,EAAgBQ,YAI9B,ECzNE,MAA0B,oC,kCCIlC,MAAM8B,EAAeC,IAC1B,MAAM/G,EAAUC,cACV+G,EAAWC,cAEjBvG,qBAAU,KACYN,WAClB,UACQzB,IAAMI,KAAK,+BAEnB,CAAE,MAAOwB,GACgB,cAAnBwG,GAGsB,YAAtBC,EAASE,UACa,YAAtBF,EAASE,UAETlH,EAAQgB,KAAK,UAGnB,GAGFd,EAAa,GACZ,CAACF,EAASgH,EAAUD,GAAgB,E,4CCuH1BI,MA9HIA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAEvBT,EAAY,YAEZ,MAAOU,EAAYC,GAAiB1H,mBAAS,CAC3CyG,SAAU,GACVkB,UAAW,GACXC,UAAW,MAEP,SAAEnB,EAAQ,UAAEkB,EAAS,UAAEC,GAAcH,GAEpCI,EAAQC,GAAa9H,mBAAS,CAAC,GAEhCC,EAAUC,cAGV6H,EAAgBlF,IAEpB6E,EAAc,IACTD,EACH,CAAC5E,EAAMK,OAAO8E,MAAOnF,EAAMK,OAAOxB,OAClC,EAiBJ,OACEK,eAACkG,IAAG,CAACjG,UAAWC,IAAOgG,IAAIpI,SAAA,CACzBkC,eAACmG,IAAG,CAAClG,UAAU,sBAAsBmG,GAAI,EAAEtI,SAAA,CACzCkC,eAACuD,IAAS,CAACtD,UAAS,GAAAoC,OAAKgE,IAAUC,QAAO,SAAQxI,SAAA,CAChD2B,cAAA,MAAIQ,UAAWC,IAAOqG,OAAOzI,SAAC,YAE9BkC,eAAC2D,IAAI,CAACE,SAnBOvF,UACnBwC,EAAMiD,iBACN,UAEQlH,IAAMI,KAAK,8BAA+ByI,GAEhDxH,EAAQgB,KAAK,UACf,CAAE,MAAOT,GAAM,IAADc,EAEZwG,EAAsB,QAAbxG,EAACd,EAAIa,gBAAQ,IAAAC,OAAA,EAAZA,EAAchB,KAC1B,GASmCT,SAAA,CAC3BkC,eAAC2D,IAAK6C,MAAK,CAACC,UAAU,WAAU3I,SAAA,CAC9B2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAU,SAAQnC,SAAC,aAC/B2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,IAAO0G,MAClB3C,KAAK,OACLC,YAAY,WACZ+B,KAAK,WACLtG,MAAO+E,EACPP,SAAU6B,OAGE,QADHV,EACZQ,EAAOpB,gBAAQ,IAAAY,OAAA,EAAfA,EAAiBf,KAAI,CAACsC,EAASC,IAC9BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAKhC9G,eAAC2D,IAAK6C,MAAK,CAACC,UAAU,YAAW3I,SAAA,CAC/B2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAU,SAAQnC,SAAC,aAC/B2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,IAAO0G,MAClB3C,KAAK,WACLC,YAAY,WACZ+B,KAAK,YACLtG,MAAOiG,EACPzB,SAAU6B,OAGG,QADJT,EACZO,EAAOF,iBAAS,IAAAL,OAAA,EAAhBA,EAAkBhB,KAAI,CAACsC,EAASC,IAC/BrH,cAACsH,IAAK,CAAWC,QAAQ,UAASlJ,SAC/B+I,GADSC,KAKd9G,eAAC2D,IAAK6C,MAAK,CAACC,UAAU,YAAW3I,SAAA,CAC/B2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAU,SAAQnC,SAAC,qBAC/B2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,IAAO0G,MAClB3C,KAAK,WACLC,YAAY,mBACZ+B,KAAK,YACLtG,MAAOkG,EACP1B,SAAU6B,OAGG,QADJR,EACZM,EAAOD,iBAAS,IAAAL,OAAA,EAAhBA,EAAkBjB,KAAI,CAACsC,EAASC,IAC/BrH,cAACsH,IAAK,CAAWC,QAAQ,UAASlJ,SAC/B+I,GADSC,KAKdrH,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUC,KAAI,KAAA9E,OAAI6E,IAAUE,QAC9DnD,KAAK,SAAQnG,SACd,YAGuB,QADf2H,EACRK,EAAOuB,wBAAgB,IAAA5B,OAAA,EAAvBA,EAAyBlB,KAAI,CAACsC,EAASC,IACtCrH,cAACsH,IAAK,CAAWC,QAAQ,UAAU/G,UAAU,OAAMnC,SAChD+I,GADSC,WAOlBrH,cAAC8D,IAAS,CAACtD,UAAS,QAAAoC,OAAUgE,IAAUC,SAAUxI,SAChDkC,eAACsH,IAAI,CAACrH,UAAWC,IAAOoH,KAAM/E,GAAG,UAASzE,SAAA,CAAC,4BAChB2B,cAAA,QAAA3B,SAAM,oBAIrC2B,cAAC0G,IAAG,CACFC,GAAI,EACJnG,UAAS,iCAAAoC,OAAmCnC,IAAOqH,WAAYzJ,SAE/D2B,cAAC+H,IAAK,CAACvH,UAAS,GAAAoC,OAAKgE,IAAUoB,aAAe5H,IAAK6H,QAEjD,EC9IK,MAA0B,mCCgI1BC,MA7GIA,KAAO,IAADlC,EAAAH,EAAAC,EAEvB,MAAMvH,EAAiBL,KAEhBiK,EAAYC,GAAiB5J,mBAAS,CAC3CyG,SAAU,GACVoD,SAAU,MAGN,SAAEpD,EAAQ,SAAEoD,GAAaF,GAExB9B,EAAQC,GAAa9H,mBAAS,CAAC,GAChCC,EAAUC,cAqBV6H,EAAgBlF,IAEpB+G,EAAc,IACTD,EACH,CAAC9G,EAAMK,OAAO8E,MAAOnF,EAAMK,OAAOxB,OAClC,EAGJ,OACEK,eAACkG,IAAG,CAACjG,UAAWC,IAAOgG,IAAIpI,SAAA,CACzBkC,eAACmG,IAAG,CAAClG,UAAU,qBAAqBmG,GAAI,EAAEtI,SAAA,CACxCkC,eAACuD,IAAS,CAACtD,UAAS,GAAAoC,OAAKgE,IAAUC,QAAO,SAAQxI,SAAA,CAChD2B,cAAA,MAAIQ,UAAWC,IAAOqG,OAAOzI,SAAC,YAC9BkC,eAAC2D,IAAI,CAACE,SA/BOvF,UACnBwC,EAAMiD,iBACN,IAEE,MAEMxF,SAFiB1B,IAAMI,KAAK,uBAAwB2K,IAEpCrJ,KAEtBP,EAAeO,EAAKiG,MAEpBtG,EAAQgB,KAAK,IACf,CAAE,MAAOT,GAEPsH,EAAUtH,EAAIa,SAASf,KACzB,GAiBmCT,SAAA,CACH,QADG2H,EAC1BK,EAAOuB,wBAAgB,IAAA5B,OAAA,EAAvBA,EAAyBlB,KAAI,CAACsC,EAASC,IACtCrH,cAACsH,IAAK,CAAWC,QAAQ,UAASlJ,SAC/B+I,GADSC,KAId9G,eAAC2D,IAAK6C,MAAK,CAACC,UAAU,WAAU3I,SAAA,CAC9B2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAU,SAAQnC,SAAC,aAC/B2B,cAACkE,IAAKgD,QAAO,CACX1C,KAAK,OACLC,YAAY,WACZ+B,KAAK,WACLhG,UAAWC,IAAO0G,MAClBjH,MAAO+E,EACPP,SAAU6B,OAGE,QADHV,EACZQ,EAAOpB,gBAAQ,IAAAY,OAAA,EAAfA,EAAiBf,KAAI,CAACsC,EAASC,IAC9BrH,cAACsH,IAAK,CAAWC,QAAQ,UAASlJ,SAC/B+I,GADSC,KAKd9G,eAAC2D,IAAK6C,MAAK,CAACC,UAAU,WAAU3I,SAAA,CAC9B2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAU,SAAQnC,SAAC,aAC/B2B,cAACkE,IAAKgD,QAAO,CACX1C,KAAK,WACLC,YAAY,WACZ+B,KAAK,WACLhG,UAAWC,IAAO0G,MAClBjH,MAAOmI,EACP3D,SAAU6B,OAGE,QADHT,EACZO,EAAOgC,gBAAQ,IAAAvC,OAAA,EAAfA,EAAiBhB,KAAI,CAACsC,EAASC,IAC9BrH,cAACsH,IAAK,CAAWC,QAAQ,UAASlJ,SAC/B+I,GADSC,KAIdrH,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUC,KAAI,KAAA9E,OAAI6E,IAAUE,QAC9DnD,KAAK,SAAQnG,SACd,kBAKL2B,cAAC8D,IAAS,CAACtD,UAAS,QAAAoC,OAAUgE,IAAUC,SAAUxI,SAChDkC,eAACsH,IAAI,CAACrH,UAAWC,IAAOoH,KAAM/E,GAAG,UAASzE,SAAA,CAAC,0BAClB2B,cAAA,QAAA3B,SAAM,yBAInC2B,cAAC0G,IAAG,CACFC,GAAI,EACJnG,UAAS,iCAAAoC,OAAmCnC,IAAO6H,WAAYjK,SAE/D2B,cAAC+H,IAAK,CAACvH,UAAS,GAAAoC,OAAKgE,IAAUoB,aAAe5H,IAAKmI,QAEjD,E,2CC9GV,MAAMC,EAAc,CAClB,EAAGC,EAAQ,KACX,EAAGA,EAAQ,KACX,EAAGA,EAAQ,KACX,EAAGA,EAAQ,KACX,EAAGA,EAAQ,KACX,EAAGA,EAAQ,KACX,EAAGA,EAAQ,KACX,EAAGA,EAAQ,KACX,EAAGA,EAAQ,KACX,EAAGA,EAAQ,KACX,GAAIA,EAAQ,KACZ,GAAIA,EAAQ,MAkWCC,OA9VItK,IAA0B,IAAzB,MAAEuK,EAAK,SAAEC,GAAUxK,EACrC,MAAOyK,EAAeC,GAAoBtK,mBAAS,KAC5CuK,EAAWC,GAAgBxK,oBAAS,IACpCyK,EAAcC,GAAmB1K,mBAAS,OAC1C2K,EAAmBC,GAAwB5K,oBAAS,IACpD6K,EAAcC,GAAmB9K,mBAAS,OAC1C+K,EAAaC,GAAkBhL,mBACpCiL,aAAaC,QAAQ,iBAAmB,iBAEnCC,EAAaC,GAAkBpL,mBAASqL,OAAOC,YAChDrL,EAAUC,cAGVqL,EAAanL,uBAAYC,UAC7B,IACE,MAAM,KAAEC,SAAepB,EAASqB,IAAI,WACpC6J,EAAS9J,EAAK8F,QAChB,CAAE,MAAO5F,GACPC,QAAQC,IAAIF,EACd,IACC,CAAC4J,IAGJzJ,qBAAU,KACR,MAAM6K,EAAuBrB,EAAM7D,KAAKmF,IAAI,CAC1CC,MAAOD,EAAKC,MACZC,KAAMF,EAAKG,SACXpF,GAAIiF,EAAKjF,GAAGqF,eAEdvB,EAAiBkB,EAAqB,GACrC,CAACrB,IAGJxJ,qBAAU,KACR,MAAMmL,EAAW7L,EAAQ8L,QAAQ9E,IACL,MAAtBA,EAASE,UACXoE,GACF,IAEF,MAAO,KACLO,GAAU,CACX,GACA,CAAC7L,EAASsL,IAEb5K,qBAAU,KACR,MAAMqL,EAA0BA,KACV7I,SAAS8I,iBAAiB,mBAElCC,SAASC,IACnB,MAAMR,EAAO,IAAIS,KAAKD,EAAQE,QAAQV,MACtC,GAAuB,IAAnBA,EAAKW,UAAiB,CACxB,MAAMC,EAAQZ,EAAKa,WACbC,EAAWzC,EAAYuC,GAC7B,GAAIE,EAAU,CACZN,EAAQO,MAAMC,gBAAe,OAAAvI,OAAUqI,EAASG,QAAO,KACvDT,EAAQO,MAAMG,eAAiB,QAC/BV,EAAQO,MAAMI,mBAAqB,SACnCX,EAAQO,MAAMK,SAAW,WAGD5C,EAAM6C,QAC3BvB,GACC,IAAIW,KAAKX,EAAKG,UAAUqB,iBAAmBtB,EAAKsB,iBAIhCzK,OAAS,EAC3B2J,EAAQe,UAAUC,IAAIlL,IAAOmL,kBAE7BjB,EAAQe,UAAUG,OAAOpL,IAAOmL,iBAEpC,CACF,IACA,EAGJpB,IAEA,MAAMsB,EAAW,IAAIC,iBAAiBvB,GAChC9K,EAAS,CAAEsM,WAAW,EAAMC,SAAS,GAErCC,EAAkBvK,SAASwK,cAAc,eAK/C,OAJID,GACFJ,EAASM,QAAQF,EAAiBxM,GAG7B,KACDwM,GACFJ,EAASO,YACX,CACD,GACA,CAAC1D,EAAOY,IAGXpK,qBAAU,KACR,MAAMmN,EAAeA,KACnB1C,EAAeC,OAAOC,WAAW,EAGnC,OADAD,OAAOjI,iBAAiB,SAAU0K,GAC3B,IAAMzC,OAAOhI,oBAAoB,SAAUyK,EAAa,GAC9D,IAGH,MAAMC,EAAoBC,IACxBhD,EAAegD,GACf/C,aAAagD,QAAQ,eAAgBD,EAAK,EAsBtCE,EAAsBC,IAC1BlO,EAAQgB,KAAK,UAADmD,OAAW+J,EAAM,SAAQ,EAYjCC,EAAe/N,UACnB,UACQnB,EAASmP,OAAO,UAADjK,OAAW+J,EAAM,MAVdA,KAC1B/D,GAAUkE,GAAcA,EAAUtB,QAAQvB,GAASA,EAAKjF,KAAO2H,MAC/D7D,GAAkBgE,GAChBA,EAAUtB,QAAQvB,GAASA,EAAKjF,KAAO2H,KACxC,EAOCI,CAAmBJ,GACnB3D,GAAa,EACf,CAAE,MAAOhK,GACPC,QAAQC,IAAIF,EACd,GAIIgO,EAAgB1M,IACpB,MAAM2M,EAAYtD,GAAe,IAAM,GAAK,GAC5C,OAAOrJ,EAAKU,OAASiM,EACjB3M,EAAK4M,UAAU,EAAGD,GAAa,MAC/B3M,CAAI,EAGV,OACEC,eAACuD,IAAS,CAACtD,UAAS,OAAAoC,OAASnC,IAAO0M,mBAAoB9O,SAAA,CACtD2B,cAACoN,IAAY,CACXC,QAAS,CAACC,KACVC,YAAahE,EACbiE,MAAO,CACLC,YAAa,CACXjJ,KAAM,UACNkJ,SAAU,CAAEC,KAAM,GAClBC,WAAY,SAGhBC,cAAe,CACbF,KAAM,CACJrN,KAAM,OACNwN,MAAOA,IAAMvB,EAAiB,gBAEhCxB,MAAO,CACLzK,KAAM,QACNwN,MAAOA,IAAMvB,EAAiB,kBAGlCwB,cAAe,CACbC,KAAM,kBACNC,OAAQ,QACRC,MAAO,4BAETC,OAAQtF,EACRuF,WA7EoBC,IACxB,MAAM1B,EAAS0B,EAAUhN,MAAM2D,GACzBiF,EAAOtB,EAAM2F,MAAMrE,GAASA,EAAKjF,GAAGqF,aAAesC,IACrD1C,GACFf,EAAgBe,GAChBjB,GAAa,IAEb/J,QAAQsP,MAAM,yBAA0B5B,EAC1C,EAsEI6B,SAAWC,GAAalC,EAAiBkC,EAASjC,KAAKhI,MACvDkK,eAAgBC,IAAe,IAAd,KAAExE,GAAMwE,EACvB,MAAMC,EAAcjG,EAAM6C,QACvBvB,GACC,IAAIW,KAAKX,EAAKG,UAAUqB,iBAAmBtB,EAAKsB,iBAEpD,OACElL,eAAA2C,WAAA,CAAA7E,SAAA,CACE2B,cAAA,OAAKQ,UAAU,wBAAuBnC,SAAE8L,EAAKW,YAC5CnB,GAAe,KAAOiF,EAAY5N,OAAS,GAC1ChB,cAAC8D,IAAS,CAAC+K,OAAK,EAACrO,UAAU,OAAMnC,SAC/BkC,eAACkG,IAAG,CAAApI,SAAA,CACF2B,cAAC0G,IAAG,CAACoI,GAAI,EAAGtO,UAAU,OAAMnC,SAC1B2B,cAAA,KACEQ,UAAS,4CACTuC,QAASA,IAjFNoH,KACvBb,EAAgBa,GAChBf,GAAqB,EAAK,EA+ES2F,CAAgB5E,OAGnCnK,cAAC0G,IAAG,CAACoI,GAAI,WAId,IAMTvO,eAACyO,IAAK,CACJC,KAAMlG,EACNmG,OAAQA,IAAMlG,GAAa,GAC3BxI,UAAWC,IAAO0O,cAAc9Q,SAAA,CAEhC2B,cAACgP,IAAMlI,OAAM,CAACsI,aAAW,EAAC5O,UAAWC,IAAO4O,oBAAoBhR,SAC9D2B,cAACgP,IAAMM,MAAK,CAAAjR,SAAC,mBAEfkC,eAACyO,IAAMO,KAAI,CAAC/O,UAAWC,IAAO+O,kBAAkBnR,SAAA,CAC7CsL,EAAc,KAAOV,GACpB1I,eAAA2C,WAAA,CAAA7E,SAAA,CACEkC,eAAA,KAAAlC,SAAA,CACE2B,cAAA,UAAA3B,SAAQ,WAAe,IAAE4K,EAAaiB,SAExC3J,eAAA,KAAAlC,SAAA,CACE2B,cAAA,UAAA3B,SAAQ,aAAiB,IAAE4K,EAAawG,WAE1ClP,eAAA,KAAAlC,SAAA,CACE2B,cAAA,UAAA3B,SAAQ,cAAkB,IAAE4K,EAAamB,YAE3C7J,eAAA,KAAAlC,SAAA,CACE2B,cAAA,UAAA3B,SAAQ,cAAkB,IAAE4K,EAAayG,YAE3CnP,eAAA,KAAAlC,SAAA,CACE2B,cAAA,UAAA3B,SAAQ,cAAkB,IAAE4K,EAAa0G,YAE3CpP,eAAA,KAAAlC,SAAA,CACE2B,cAAA,UAAA3B,SAAQ,YAAgB,IAAE4K,EAAalJ,UAEzCQ,eAAA,KAAAlC,SAAA,CACE2B,cAAA,UAAA3B,SAAQ,gBAAqB,IAC5B4K,EAAa2G,WAAa,MAAQ,QAErCrP,eAAA,KAAAlC,SAAA,CACE2B,cAAA,UAAA3B,SAAQ,YAAgB,IAAE4K,EAAa4G,UAAY,MAAQ,QAE5D5G,EAAa6G,OACZvP,eAAA,OAAAlC,SAAA,CACE2B,cAAA,KAAA3B,SACE2B,cAAA,UAAA3B,SAAQ,aAEV2B,cAAC+H,IAAK,CAAC3H,IAAK6I,EAAa6G,MAAOnP,IAAI,OAAOkO,OAAK,UAKvDlF,GAAe,KAAO3J,cAAA,KAAA3B,SAAG,8BAE5BkC,eAACyO,IAAMe,OAAM,CAACvP,UAAWC,IAAOuP,oBAAoB3R,SAAA,CAClD2B,cAACwH,IAAM,CACLD,QAAQ,YACRxE,QAASA,IAAMiG,GAAa,GAC5BxI,UAAWC,IAAO2O,YAAY/Q,SAC/B,UAGD2B,cAACwH,IAAM,CACLD,QAAQ,UACRxE,QAASA,IAAM2J,EAAmBzD,EAAajE,IAC/CxE,UAAWC,IAAOwP,WAAW5R,SAC9B,cAGD2B,cAACwH,IAAM,CACLD,QAAQ,SACRxE,QAASA,IAAM6J,EAAa3D,EAAajE,IACzCxE,UAAWC,IAAOyP,aAAa7R,SAChC,sBAOLkC,eAACyO,IAAK,CACJC,KAAM9F,EACN+F,OAAQA,IAAM9F,GAAqB,GACnC5I,UAAWC,IAAO0P,cAAc9R,SAAA,CAEhC2B,cAACgP,IAAMlI,OAAM,CAACsI,aAAW,EAAC5O,UAAWC,IAAO2P,oBAAoB/R,SAC9DkC,eAACyO,IAAMM,MAAK,CAAAjR,SAAA,CAAC,YACDgL,EAAeA,EAAaoC,eAAiB,QAG3DzL,cAACgP,IAAMO,KAAI,CAAC/O,UAAWC,IAAO4P,kBAAkBhS,SAC7CgL,GACCrJ,cAAA,MAAIQ,UAAWC,IAAO6P,WAAWjS,SAC9BsK,EACE6C,QACEvB,GACC,IAAIW,KAAKX,EAAKG,UAAUqB,iBACxBpC,EAAaoC,iBAEhB3G,KAAKmF,GACJ1J,eAAA,MAAkBC,UAAWC,IAAO8P,aAAalS,SAAA,CAC/C2B,cAAC6H,IAAI,CAAC/E,GAAE,UAAAF,OAAYqH,EAAKjF,IAAMxE,UAAWC,IAAO+P,SAASnS,SACxD2B,cAAA,UAAA3B,SAAS2O,EAAa/C,EAAKC,WAE7B3J,eAAA,OAAKC,UAAWC,IAAOgQ,YAAYpS,SAAA,CACjC2B,cAACwH,IAAM,CACLD,QAAQ,UACRmJ,KAAK,KACLlQ,UAAWC,IAAOwP,WAClBlN,QAASA,IAAM2J,EAAmBzC,EAAKjF,IAAI3G,SAC5C,SAGD2B,cAACwH,IAAM,CACLD,QAAQ,SACRmJ,KAAK,KACLlQ,UAAWC,IAAOyP,aAClBnN,QAASA,IAAM6J,EAAa3C,EAAKjF,IAAI3G,SACtC,gBAlBI4L,EAAKjF,UA2BxBhF,cAACgP,IAAMe,OAAM,CAACvP,UAAWC,IAAOkQ,oBAAoBtS,SAClD2B,cAACwH,IAAM,CACLD,QAAQ,YACRxE,QAASA,IAAMqG,GAAqB,GACpC5I,UAAWC,IAAO2O,YAAY/Q,SAC/B,iBAKK,ECxXD,OAA0B,mC,mDCe1BuS,OAVDxS,IAAgC,IAA/B,QAAEyS,EAAO,IAAEzQ,EAAG,QAAEgH,GAAShJ,EACtC,OACEmC,eAAA,OAAKC,UAAS,GAAAoC,OAAKnC,KAAOmQ,MAAK,QAAOvS,SAAA,CACnCwS,GAAW7Q,cAAC8Q,KAAO,CAACC,UAAU,WAC9B3Q,GAAOJ,cAAA,OAAKI,IAAKA,EAAKO,IAAKyG,IAC3BA,GAAWpH,cAAA,KAAGQ,UAAU,OAAMnC,SAAE+I,MAC7B,EC+RK4J,OAvRf,SAAuB5S,GAAgB,IAAD6S,EAAAC,EAAAC,EAAAC,EAAA,IAAd,SAAExI,GAAUxK,EAElCmH,EAAY,aAEZ,MAAOc,EAAQC,GAAa9H,mBAAS,CAAC,IAG/B6S,EAAUC,GAAe9S,mBAAS,CACvC0L,MAAO,GACPuF,QAAS,GACTK,MAAO,GACP1F,SAAU,GACVwF,YAAY,EACZC,WAAW,EACXH,SAAU,SACVC,SAAU,QACV5P,OAAQ,UAEJ,MACJmK,EAAK,QACLuF,EAAO,MACPK,EAAK,SACL1F,EAAQ,SACRsF,EAAQ,SACRC,EAAQ,OACR5P,EAAM,WACN6P,EAAU,UACVC,GACEwB,EAEEE,EAAavP,iBAAO,MACpBvD,EAAUC,cAEV6H,EAAgBlF,IACpB,MAAM,KAAEmF,EAAI,MAAEtG,EAAK,KAAEsE,EAAI,QAAEgN,GAAYnQ,EAAMK,OAC7C4P,EAAY,IACPD,EACH,CAAC7K,GAAgB,aAAThC,EAAsBgN,EAAUtR,GACxC,EAoDEuR,EACJlR,eAAA,OAAKC,UAAWC,KAAOiR,YAAYrT,SAAA,CACjCkC,eAAC2D,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAAA,CAC5C2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,UACZ2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBpN,KAAK,OACLgC,KAAK,QACLtG,MAAOgK,EACPxF,SAAU6B,OAGP,OAANF,QAAM,IAANA,GAAa,QAAP4K,EAAN5K,EAAQ6D,aAAK,IAAA+G,OAAP,EAANA,EAAenM,KAAI,CAACsC,EAASC,IAC5BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAKhC9G,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,YACZ2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBC,GAAG,WACHC,KAAM,EACNtL,KAAK,UACLtG,MAAOuP,EACP/K,SAAU6B,OAGP,OAANF,QAAM,IAANA,GAAe,QAAT6K,EAAN7K,EAAQoJ,eAAO,IAAAyB,OAAT,EAANA,EAAiBpM,KAAI,CAACsC,EAASC,IAC9BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAIhC9G,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,aACZ2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBpN,KAAK,OACLgC,KAAK,WACLtG,MAAOkK,EACP1F,SAAU6B,OAGP,OAANF,QAAM,IAANA,GAAgB,QAAV8K,EAAN9K,EAAQ+D,gBAAQ,IAAA+G,OAAV,EAANA,EAAkBrM,KAAI,CAACsC,EAASC,IAC/BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAKhC9G,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,aACZkC,eAAC2D,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBC,GAAG,SACHrL,KAAK,WACLtG,MAAOwP,EACPhL,SAAU6B,EAAalI,SAAA,CAEvB2B,cAAA,UAAQE,MAAM,SAAQ7B,SAAC,wBACvB2B,cAAA,UAAQE,MAAM,OAAM7B,SAAC,+BACrB2B,cAAA,UAAQE,MAAM,SAAQ7B,SAAC,iCACvB2B,cAAA,UAAQE,MAAM,MAAK7B,SAAC,oCAIxBkC,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,aACZkC,eAAC2D,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBC,GAAG,SACHrL,KAAK,WACLtG,MAAOyP,EACPjL,SAAU6B,EAAalI,SAAA,CAEvB2B,cAAA,UAAQE,MAAM,OAAM7B,SAAC,SACrB2B,cAAA,UAAQE,MAAM,WAAU7B,SAAC,aACzB2B,cAAA,UAAQE,MAAM,QAAO7B,SAAC,gBAI1BkC,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,WACZkC,eAAC2D,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBC,GAAG,SACHrL,KAAK,SACLtG,MAAOH,EACP2E,SAAU6B,EAAalI,SAAA,CAEvB2B,cAAA,UAAQE,MAAM,OAAM7B,SAAC,SACrB2B,cAAA,UAAQE,MAAM,cAAa7B,SAAC,gBAC5B2B,cAAA,UAAQE,MAAM,OAAM7B,SAAC,eAGzB2B,cAACkE,IAAK6C,MAAK,CAAA1I,SACT2B,cAACkE,IAAK6N,MAAK,CACTvN,KAAK,WACLwN,MAAM,UACNxL,KAAK,aACLgL,QAAS5B,EACTlL,SAAU6B,MAGdvG,cAACkE,IAAK6C,MAAK,CAAA1I,SACT2B,cAACkE,IAAK6N,MAAK,CACTvN,KAAK,WACLwN,MAAM,SACNxL,KAAK,YACLgL,QAAS3B,EACTnL,SAAU6B,MAGdhG,eAAA,OAAKC,UAAU,cAAanC,SAAA,CAC1B2B,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUwK,KAAI,gBAChDlP,QAASA,IAAMtE,EAAQyT,SAAS7T,SACjC,WAGD2B,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAU0K,MAAK,gBACjD3N,KAAK,SAAQnG,SACd,iBAOP,OACE2B,cAACkE,IAAI,CAACE,SA1KavF,UACnBwC,EAAMiD,iBACN,IAAI8N,EAAY,CAAC,EAQjB,GALKlI,EAAMmI,SAAQD,EAAUlI,MAAQ,CAAC,4BACjCuF,EAAQ4C,SAAQD,EAAU3C,QAAU,CAAC,4BACrCrF,EAASiI,SAAQD,EAAUhI,SAAW,CAAC,4BAGxCkI,OAAOC,KAAKH,GAAWpR,OAEzB,YADAsF,EAAU8L,GAIZ,MAAMI,EAAW,IAAIC,SAErBD,EAASE,OAAO,QAASxI,GACzBsI,EAASE,OAAO,UAAWjD,GACvB8B,EAAW/P,SAAW+P,EAAW/P,QAAQmR,MAAM,IACjDH,EAASE,OAAO,QAASnB,EAAW/P,QAAQmR,MAAM,IAEpDH,EAASE,OAAO,WAAYtI,GAC5BoI,EAASE,OAAO,WAAYhD,GAC5B8C,EAASE,OAAO,WAAY/C,GAC5B6C,EAASE,OAAO,SAAU3S,GAC1ByS,EAASE,OAAO,aAAc9C,GAC9B4C,EAASE,OAAO,YAAa7C,GAE7B,IACE,MAAM,KAAE/Q,SAAepB,EAASF,KAAK,UAAWgV,GAChD5J,GAAUkE,GAAc,IAAIA,EAAWhO,KACvCL,EAAQgB,KAAK,IACf,CAAE,MAAOT,GAAM,IAADc,EAAA8S,EACZ3T,QAAQC,IAAIF,GACiB,OAAb,QAAZc,EAAAd,EAAIa,gBAAQ,IAAAC,OAAA,EAAZA,EAAcC,SAAgBuG,EAAsB,QAAbsM,EAAC5T,EAAIa,gBAAQ,IAAA+S,OAAA,EAAZA,EAAc9T,KAC5D,GAsI8B0B,UAAWC,KAAOoS,SAASxU,SACvDkC,eAACkG,IAAG,CAAApI,SAAA,CACF2B,cAAC0G,IAAG,CAAClG,UAAU,kBAAkBmG,GAAI,EAAGmM,GAAI,EAAEzU,SAC5CkC,eAACuD,IAAS,CACRtD,UAAS,GAAAoC,OAAKgE,IAAUC,QAAO,KAAAjE,OAAInC,KAAOqD,UAAS,8CAA6CzF,SAAA,CAEhGkC,eAAC2D,IAAK6C,MAAK,CAACvG,UAAU,cAAanC,SAAA,CAChCyR,GACCvP,eAAA2C,WAAA,CAAA7E,SAAA,CACE2B,cAAA,UAAA3B,SACGyR,GACC9P,cAAC+H,IAAK,CAACvH,UAAWoG,IAAUmB,MAAO3H,IAAK0P,EAAOiD,SAAO,MAI1D/S,cAAA,OAAA3B,SACE2B,cAACkE,IAAK+C,MAAK,CACTzG,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUwK,KAAI,QAChDe,QAAQ,eAAc3U,SACvB,2BAMLyR,GACA9P,cAACkE,IAAK+C,MAAK,CACTzG,UAAU,gCACVwS,QAAQ,eAAc3U,SAEtB2B,cAAC4Q,GAAK,CAACxQ,IAAK6S,GAAQ7L,QAAQ,4BAIhCpH,cAACkE,IAAKgP,KAAI,CACRlO,GAAG,eACHmO,OAAO,UACPzO,SAzNarD,IACrBA,EAAMK,OAAOiR,MAAM3R,SACrBoS,IAAIC,gBAAgBvD,GACpBwB,EAAY,IACPD,EACHvB,MAAOsD,IAAIE,gBAAgBjS,EAAMK,OAAOiR,MAAM,MAElD,EAmNYpR,IAAKgQ,OAGF,OAANlL,QAAM,IAANA,GAAa,QAAP+K,EAAN/K,EAAQyJ,aAAK,IAAAsB,OAAP,EAANA,EAAetM,KAAI,CAACsC,EAASC,IAC5BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAIhCrH,cAAA,OAAKQ,UAAU,YAAWnC,SAAEoT,SAIhCzR,cAAC0G,IAAG,CAACC,GAAI,EAAGmM,GAAI,EAAGtS,UAAU,+BAA8BnC,SACzD2B,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SAAEoT,UAKpD,E,0DCjSO,SAAS8B,GAAmBnV,GAAU,IAAT,GAAE4G,GAAI5G,EACxC,MAAMK,EAAUC,cAChB,OACE6B,eAACiT,KAAQ,CAAChT,UAAS,gBAAAoC,OAAkBnC,KAAOgT,UAAYC,KAAK,OAAMrV,SAAA,CACjE2B,cAACwT,KAASrO,OAAM,CAAC0M,GAAI8B,KACrBpT,eAACiT,KAASI,KAAI,CAACpT,UAAS,eAAAoC,OAAiBnC,KAAOoT,iBAAkBxV,SAAA,CAChEkC,eAACiT,KAASM,KAAI,CACZtT,UAAWC,KAAOqT,KAClB/Q,QAASA,IAAMtE,EAAQgB,KAAK,aAADmD,OAAcoC,EAAE,UAC3C,aAAW,iBAAgB3G,SAAA,CAE3B2B,cAAA,KAAGQ,UAAS,eAAAoC,OAAiBnC,KAAOsT,YAAe,IACnD/T,cAAA,QAAMQ,UAAWC,KAAOuT,SAAS3V,SAAC,sBAEpCkC,eAACiT,KAASM,KAAI,CACZtT,UAAWC,KAAOqT,KAClB/Q,QAASA,IAAMtE,EAAQgB,KAAK,aAADmD,OAAcoC,EAAE,mBAC3C,aAAW,gBAAe3G,SAAA,CAE1B2B,cAAA,KAAGQ,UAAS,kBAAAoC,OAAoBnC,KAAOsT,YACvC/T,cAAA,QAAMQ,UAAWC,KAAOuT,SAAS3V,SAAC,uBAEpCkC,eAACiT,KAASM,KAAI,CACZtT,UAAWC,KAAOqT,KAClB/Q,QAASA,IAAMtE,EAAQgB,KAAK,aAADmD,OAAcoC,EAAE,mBAC3C,aAAW,gBAAe3G,SAAA,CAE1B2B,cAAA,KAAGQ,UAAS,cAAAoC,OAAgBnC,KAAOsT,YACnC/T,cAAA,QAAMQ,UAAWC,KAAOuT,SAAS3V,SAAC,4BAK5C,CAIA,MAAMsV,GAAeM,IAAMC,YAAW,CAAAvF,EAAcpN,KAAG,IAAhB,QAAEwB,GAAS4L,EAAA,OAChD3O,cAAA,KACEQ,UAAS,iCAAAoC,OAAmCnC,KAAO0T,UACnD5S,IAAKA,EACLwB,QAAUsB,IACRA,EAAEC,iBACFvB,EAAQsB,EAAE,GAEZ,IAGS+P,GAAeC,IAAmC,IAAlC,WAAEC,EAAU,aAAE1H,GAAcyH,EACvD,OACE9T,eAACiT,KAAQ,CAAChT,UAAU,UAAUkT,KAAK,OAAMrV,SAAA,CACvC2B,cAACwT,KAASrO,OAAM,CAAC0M,GAAI8B,KAErBpT,eAACiT,KAASI,KAAI,CACZpT,UAAS,eAAAoC,OAAiBnC,KAAO8T,qBACjCC,aAAc,CAAEC,SAAU,SAAUpW,SAAA,CAEpCkC,eAACiT,KAASM,KAAI,CACZtT,UAAWC,KAAOiU,aAClB3R,QAASuR,EACT,aAAW,OAAMjW,SAAA,CAEjB2B,cAAA,KACEQ,UAAS,6BAAAoC,OAA+BnC,KAAOkU,oBAC9C,OAELpU,eAACiT,KAASM,KAAI,CACZtT,UAAWC,KAAOiU,aAClB3R,QAAS6J,EACT,aAAW,SAAQvO,SAAA,CAEnB2B,cAAA,KAAGQ,UAAS,oBAAAoC,OAAsBnC,KAAOkU,oBAAuB,YAG3D,E,cCqBAC,OA7FDC,IACZ,MAAM,GACJ7P,EAAE,MACF8P,EAAK,WACLC,EAAU,MACV7K,EAAK,QACLuF,EAAO,MACPK,EAAK,SACL1F,EAAQ,aACR4K,EAAY,UACZnF,GACEgF,EAEEvW,EAAcL,qBAAWJ,GACzBoX,GAAsB,OAAX3W,QAAW,IAAXA,OAAW,EAAXA,EAAa2G,YAAa6P,EACrCrW,EAAUC,cAIVwW,EAHa,IAAItK,KAAKR,GAGQ+K,mBAAmB,QAAS,CAC9DxH,KAAM,UACN5C,MAAO,QACPqK,IAAK,YAkBP,OACE7U,eAAC8U,KAAI,CAAC7U,UAAWC,KAAOmU,KAAKvW,SAAA,CAC3BkC,eAAC8U,KAAK9F,KAAI,CACR/O,UAAS,GAAAoC,OAAKnC,KAAO6U,aAAY,mCAAkCjX,SAAA,CAEnEkC,eAAA,OAAKC,UAAS,6BAAAoC,OAA+BnC,KAAO8U,gBAAiBlX,SAAA,CAClEwR,GACCtP,eAAA,OAAKC,UAAWC,KAAO+U,WAAWnX,SAAA,CAChC2B,cAAA,KAAGQ,UAAS,qBAAAoC,OAAuBnC,KAAOgV,cAC1CzV,cAAA,QAAMQ,UAAWC,KAAOiV,WAAWrX,SAAC,cAGvC6L,GACClK,cAAC6H,IAAI,CAAC/E,GAAE,UAAAF,OAAYoC,GAAMxE,UAAWC,KAAOkV,cAActX,SACxD2B,cAACqV,KAAK/F,MAAK,CAAC9O,UAAWC,KAAOmV,UAAUvX,SAAE6L,SAKhD3J,eAAA,OACEC,UAAS,6BAAAoC,OAA+BnC,KAAOoV,0BAA2BxX,SAAA,CAE1E2B,cAAA,QAAMQ,UAAWC,KAAOqV,aAAazX,SAAE0W,IACtCE,GACCjV,cAAA,OAAKQ,UAAU,OAAMnC,SACnB2B,cAACoU,GAAY,CACXE,WAxCKA,KACjB7V,EAAQgB,KAAK,UAADmD,OAAWoC,EAAE,SAAQ,EAwCrB4H,aApCO/N,UACnB,UACQjB,EAASiP,OAAO,UAADjK,OAAWoC,EAAE,MAClCgQ,EAAahQ,EACf,CAAE,MAAOhG,GACPC,QAAQC,IAAIF,EACd,aAqCEgB,cAAC6H,IAAI,CAAC/E,GAAE,UAAAF,OAAYoC,GAAMxE,UAAWC,KAAOsV,aAAa1X,SACtDyR,GAAS9P,cAACqV,KAAKW,IAAG,CAAC5V,IAAK0P,EAAOnP,IAAKuJ,MAGvClK,cAACqV,KAAK9F,KAAI,CAAC/O,UAAWC,KAAOwV,eAAe5X,SAC1C2B,cAACkW,KAAK,CAAC1V,UAAU,6CAA4CnC,SAC3D2B,cAAA,OAAKQ,UAAU,4BAA2BnC,SAAEoR,QAGhDzP,cAACqV,KAAK9F,KAAI,CAAC/O,UAAWC,KAAO0V,cAAc9X,SACzCkC,eAAA,KAAGC,UAAWC,KAAO2V,SAAS/X,SAAA,CAAC,YACnB,IACV2B,cAAA,QAAMQ,UAAWC,KAAO4V,YAAYhY,SAAE6W,WAGrC,E,wCCdIoB,OA/Ef,SAA6BzB,GAC3B,MAAM,GAAE7P,EAAE,OAAE2H,EAAM,QAAE8C,EAAO,gBAAE8G,EAAe,YAAEC,GAAgB3B,GAGvD4B,EAAaC,GAAkBlY,mBAASiR,GA4C/C,OACElP,eAAC2D,IAAI,CAACE,SArCavF,UAEnBwC,EAAMiD,iBAGN,MAAMqS,EAAiBF,EAAYpE,OAGnC,GAAKsE,EAKL,UAEQ/Y,EAASgZ,IAAI,aAADhU,OAAcoC,EAAE,KAAK,CACrCiF,KAAM0C,EACN8C,QAASkH,IAIXH,GAAaK,IAAY,IACpBA,EACHjS,QAASiS,EAAajS,QAAQE,KAAKgS,GACjCA,EAAQ9R,KAAOA,EAAK,IAAK8R,EAASrH,QAASkH,GAAmBG,QAKlEP,GAAgB,EAClB,CAAE,MAAOvX,GAEPC,QAAQsP,MAAM,0BAA2BvP,EAAIa,SAASf,KACxD,MAxBEG,QAAQsP,MAAM,mCAwBhB,EAI6BlQ,SAAA,CAC3B2B,cAACkE,IAAK6C,MAAK,CAACvG,UAAU,OAAMnC,SAC1B2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,KAAOyD,KAClB2N,GAAG,WACH3R,MAAOuW,EACP/R,SAhDcrD,IACpBqV,EAAerV,EAAMK,OAAOxB,MAAM,EAgD5B4R,KAAM,MAGVvR,eAAA,OAAKC,UAAU,aAAYnC,SAAA,CACzB2B,cAAA,UACEQ,UAAWC,KAAOsW,UAClBhU,QAASA,IAAMwT,GAAgB,GAC/B/R,KAAK,SAAQnG,SACd,WAGD2B,cAAA,UACEQ,UAAWC,KAAOuW,QAClBC,UAAWR,EAAYpE,OACvB7N,KAAK,SAAQnG,SACd,cAMT,ECGe6Y,OA3EMrC,IACnB,MAAM,WACJtR,EAAU,cACVC,EAAa,WACb2T,EAAU,QACV1H,EAAO,OACP2H,EAAM,QACNC,EAAO,YACPb,EAAW,GACXxR,GACE6P,GAEGyC,EAAcf,GAAmB/X,oBAAS,GAC3CF,EAAcN,IACdiX,GAAsB,OAAX3W,QAAW,IAAXA,OAAW,EAAXA,EAAa2G,YAAamS,EACrCzK,EAASkI,EAAM5K,KAuBrB,OACE1J,eAAA2C,WAAA,CAAA7E,SAAA,CACE2B,cAAA,SACAA,cAAA,OAAKQ,UAAWC,KAAO8W,YAAYlZ,SACjCkC,eAAC2V,KAAK,CAAA7X,SAAA,CACJ2B,cAAC6H,IAAI,CAAC/E,GAAE,aAAAF,OAAeW,GAAc/C,UAAU,OAAMnC,SACnD2B,cAACG,EAAM,CAACC,IAAgB,OAAX9B,QAAW,IAAXA,OAAW,EAAXA,EAAakF,cAAenD,OAAQ,OAEnDE,eAAC2V,KAAM3G,KAAI,CAAC/O,UAAU,8BAA6BnC,SAAA,CACjD2B,cAAA,MAAIQ,UAAWC,KAAO+W,MAAMnZ,SAAE+Y,IAC9BpX,cAAA,KAAA3B,SAAIoR,IACH6H,EACCtX,cAACsW,GAAmB,CAClBtR,GAAIA,EACJ2H,OAAQA,EACR8C,QAASA,EACTgI,aAAcjU,EACdgT,YAAaA,EACbD,gBAAiBA,IAGnBvW,cAAA,SAAOQ,UAAWC,KAAOmK,KAAKvM,SAAE8Y,OAGnClC,IAAaqC,GACZtX,cAACoU,GAAY,CACXE,WAAYA,IAAMiC,GAAgB,GAClC3J,aA/CS/N,UACnB,UACQjB,EAASiP,OAAO,aAADjK,OAAcoC,EAAE,MACrCqS,GAASK,IAAQ,CACf9S,QAAS,CACP,IACM8S,EAAS9S,QAAQ,SAK3B4R,GAAaK,IAAY,IACpBA,EACHjS,QAASiS,EAAajS,QAAQ4G,QAAQsL,GAAYA,EAAQ9R,KAAOA,OAErE,CAAE,MAAOhG,GACPC,QAAQC,IAAIF,EACd,UAmCEgB,cAAA,WACC,E,UCLQ2X,OApEevZ,IAA8B,IAA7B,OAAEuO,EAAM,YAAE6J,GAAapY,EAEpD,MAAOqR,EAASmI,GAAcpZ,mBAAS,IAEjCF,EAAcN,IA2BpB,OACEgC,cAAC8D,IAAS,CAACtD,UAAWC,KAAO8W,YAAYlZ,SACvC2B,cAACkE,IAAI,CAACE,SAvBWvF,UACnBwC,EAAMiD,iBACN,IAEE,MAAM,KAAExF,SAAelB,EAASJ,KAAK,aAAc,CACjDiS,UACAxF,KAAM0C,IAGR6J,GAAaK,IAAY,IACpBA,EACHjS,QAAS,CAAC9F,KAAS+X,EAAajS,aAGlCgT,EAAW,GACb,CAAE,MAAO5Y,GAEPC,QAAQC,IAAIF,EACd,GAK+BX,SAC3BkC,eAACkG,IAAG,CAAApI,SAAA,CACF2B,cAAC0G,IAAG,CAACmR,GAAI,GAAIlR,GAAI,GAAInG,UAAU,eAAcnC,SAC3CkC,eAACuX,KAAU,CAAAzZ,SAAA,CACT2B,cAACG,EAAM,CACLC,IAAgB,OAAX9B,QAAW,IAAXA,OAAW,EAAXA,EAAakF,cAClBnD,OAAQ,GACRG,UAAU,SAEZR,cAACkE,IAAKgD,QAAO,CACX2K,GAAG,WACH3R,MAAOuP,EACP/K,SAtCQL,GAAMuT,EAAWvT,EAAE3C,OAAOxB,OAuClC4R,KAAM,EACNrN,YAAY,qBACZjE,UAAS,GAAAoC,OAAKnC,KAAOsX,mBAAkB,cACvC7M,MAAO,CAAE8M,aAAc,cAI7BhY,cAAC0G,IAAG,CAACmR,GAAI,GAAIlR,GAAI,EAAGnG,UAAU,qCAAoCnC,SAChE2B,cAACwH,IAAM,CACLhD,KAAK,SACLyS,UAAWxH,EAAQ4C,OACnB7R,UAAS,GAAAoC,OAAKnC,KAAOwX,eAAc,iBAAgB5Z,SACpD,iBAMG,E,8BCtET,MAAM6Z,GAAgBrZ,MAAOsZ,EAAUC,KAC5C,IACE,MAAM,KAAEtZ,SAAepB,EAASqB,IAAIoZ,EAASE,MAC7CD,GAAaE,IAAY,IACpBA,EACHD,KAAMvZ,EAAKuZ,KACXzT,QAAS9F,EAAK8F,QAAQ2T,QAAO,CAACC,EAAKC,IAC1BD,EAAIE,MAAMC,GAAcA,EAAU3T,KAAOyT,EAAIzT,KAChDwT,EACA,IAAIA,EAAKC,IACZH,EAAa1T,YAEpB,CAAE,MAAO5F,GAAM,GC0FF4Z,OAvFf,WAEErT,EAAY,aACZ,MAAM,GAAEP,GAAO6T,eACR5O,EAAMoN,GAAW7Y,mBAAS,CAAEoG,QAAS,MAErCkU,EAAUtC,GAAehY,mBAAS,CAAEoG,QAAS,KAE9CtG,EAAcN,IAGd+a,EAAe9O,EAAKrF,SAAWqF,EAAKrF,QAAQ5D,OAAS,EAErDqQ,EAAW0H,EAAe9O,EAAKrF,QAAQ,GAAK,KAE5CoU,EAAU3H,IAAuB,OAAX/S,QAAW,IAAXA,OAAW,EAAXA,EAAa2G,YAAaoM,EAASyD,MAEzDmE,EAAe5H,GAAYA,EAASxB,UA+B1C,OAvBA1Q,qBAAU,KACqBN,WAC3B,IAEE,OAASC,KAAMoa,IAAkBpa,KAAMqa,UAC/BxZ,QAAQyZ,IAAI,CAChB1b,EAASqB,IAAI,UAAD6D,OAAWoC,IACvBtH,EAASqB,IAAI,sBAAD6D,OAAuBoC,MAIvCqS,EAAQ,CAAEzS,QAAS,CAACsU,KACpB1C,EAAY2C,EACd,CAAE,MAAOna,GAEPC,QAAQC,IAAIF,EACd,GAIFqa,EAAsB,GACrB,CAACrU,IAGFhF,cAACyG,IAAG,CAACjG,UAAU,QAAOnC,SACpB2B,cAAC0G,IAAG,CAAClG,UAAU,kBAAkBsS,GAAI,GAAGzU,SACrC0a,GACCxY,eAAA2C,WAAA,CAAA7E,SAAA,CACE2B,cAAC4U,GAAI,IACCvD,EACJzI,SAAUyO,EACViC,UAAQ,EACRC,WArCgBC,KAC1BnC,EAAQ,CAAEzS,QAAS,IAAK,IAsChBrE,eAACuD,IAAS,CAACtD,UAAWC,KAAOgZ,iBAAiBpb,SAAA,EAC1C4a,GAAgBD,IAChBhZ,cAAC2X,GAAqB,CAAChL,OAAQ3H,EAAIwR,YAAaA,IAElDxW,cAAC0Z,KAAc,CACbC,WAAYb,EAASlU,QAAQ5D,OAC7BqX,KAAMA,IAAMH,GAAcY,EAAUtC,GACpCoD,UAAWd,EAAST,KACpBwB,OAAQ7Z,cAAC4Q,GAAK,CAACC,SAAO,IAAIxS,SAEzBya,EAASlU,QAAQE,KAAKgS,GACrB9W,cAACkX,GAAW,IAENJ,EACJO,QAASA,EACTb,YAAaA,EACbvM,KAAMjF,GAJD8R,EAAQ9R,iBAcjC,E,oBCtGe,OAA0B,uC,oBCKlC,MAAM8U,GAAqBhc,0BACrBic,GAAwBjc,0BAGxBkc,GAAiBA,IAAM/b,qBAAW6b,IAIlCG,GAAsB7b,IAAmB,IAAlB,SAAEC,GAAUD,EAC9C,MAAO8b,EAAaC,GAAkB3b,mBAAS,CAC7C4b,YAAa,CAAExV,QAAS,IACxByV,eAAgB,CAAEzV,QAAS,MAIvBtG,EAAcN,IAqBpB,OAlBAmB,qBAAU,KACYN,WAClB,IAEE,MAAM,KAAEC,SAAepB,EAASqB,IAAI,mCAEpCob,GAAgBG,IAAS,IACpBA,EACHD,eAAgBvb,KAEpB,CAAE,MAAOE,GACPC,QAAQC,IAAIF,EACd,GAEFL,EAAa,GACZ,CAACL,IAIF0B,cAAC8Z,GAAmB7Z,SAAQ,CAACC,MAAOga,EAAY7b,SAC9C2B,cAAC+Z,GAAsB9Z,SAAQ,CAACC,MAAOia,EAAe9b,SACnDA,KAEyB,E,yBChBnBkc,OAxBE1F,IAEf,MAAM,QAAE2F,EAAO,OAAEC,EAAM,UAAEC,EAAY,IAAO7F,GAEtC,GAAE7P,EAAE,MAAE8K,EAAK,MAAEgF,GAAU0F,EAE7B,OACEja,eAAA,OACEC,UAAS,kCAAAoC,OAAoC6X,GAAU,eAAgBpc,SAAA,CAEvE2B,cAAA,OAAA3B,SACE2B,cAAC6H,IAAI,CAACrH,UAAU,oBAAoBsC,GAAE,aAAAF,OAAeoC,GAAK3G,SACxD2B,cAACG,EAAM,CAACC,IAAK0P,EAAOzP,OAAQqa,QAGhC1a,cAAA,OAAKQ,UAAS,QAAAoC,OAAUnC,KAAOka,WAAYtc,SACzC2B,cAAC6H,IAAI,CAACrH,UAAU,oBAAoBsC,GAAE,aAAAF,OAAeoC,GAAK3G,SACxD2B,cAAA,UAAA3B,SAASyW,UAGT,EC0BK8F,OA7CQxc,IAAiB,IAAhB,OAAEqc,GAAQrc,EAChC,MAAM,eAAEic,GAAmBL,MACpBa,EAAmBC,GAAwBtc,mBAAS,IAE3DW,qBAAU,KACR,GAAIkb,EAAezV,QAAS,CAE1B,MAAMmW,EAAiB,IAAIV,EAAezV,SAASoW,MACjD,CAACC,EAAGC,IACF,IAAItQ,KAAKsQ,EAAE/D,YAAYgE,UAAY,IAAIvQ,KAAKqQ,EAAE9D,YAAYgE,YAIxDC,EAAoBX,EAAS,EAAI,EACvCK,EAAqBC,EAAeM,MAAM,EAAGD,GAC/C,IACC,CAACf,EAAgBI,IAGpB,MAAMa,EAAab,EAAS,EAAI,GAEhC,OACEza,cAAC8D,IAAS,CACRtD,UAAS,GAAAoC,OAAKnC,KAAOma,eAAc,KAAAhY,OACjC6X,EAAS,6BAA+B,IACvCpc,SAEFwc,EAAkB7Z,OACjBT,eAAA2C,WAAA,CAAA7E,SAAA,CACE2B,cAAA,KAAGQ,UAAWC,KAAO8a,aAAald,SAAC,iBACnC2B,cAACyG,IAAG,CAACjG,UAAS,GAAAoC,OAAK6X,EAASha,KAAO+a,qBAAuB,IAAKnd,SAC5Dwc,EAAkB/V,KAAK0V,GACtBxa,cAAC0G,IAAG,CAAkBoI,GAAIwM,EAAY9a,UAAU,OAAMnC,SACpD2B,cAACua,GAAO,CAACC,QAASA,EAASC,OAAQA,KAD3BD,EAAQxV,WAOxBhF,cAAC4Q,GAAK,CAACC,SAAO,KAEN,ECwFD4K,OAnHf,SAAkBrd,GAA4B,IAA3B,QAAEgJ,EAAO,OAAEoE,EAAS,IAAIpN,EAEzCmH,EAAY,aAGZ,MAAOoD,EAAOC,GAAYpK,mBAAS,CAAEoG,QAAS,MACvC8W,EAAWC,GAAgBnd,oBAAS,IAGrC,SAAEmH,GAAaD,cAGfpH,EAAcL,qBAAWJ,IAGxB8G,EAAOiX,GAAYpd,mBAAS,IAG7BuO,EAAsBJ,IAC1B/D,GAAUkE,IAAS,IACdA,EACHlI,QAASkI,EAAUlI,QAAQ4G,QAAQvB,GAASA,EAAKjF,KAAO2H,OACvD,EAuCL,OAnCAxN,qBAAU,KAwBRwc,GAAa,GACb,MAAME,EAAQC,YAAW,KAxBNjd,WACjB,IAEE,MAAMoG,EAAsB,OAAX3G,QAAW,IAAXA,OAAW,EAAXA,EAAa2G,SAC9B,IAAKA,EAEH,YADAhG,QAAQsP,MAAM,4BAKhB,MAAM,KAAEzP,SAAepB,EAASqB,IAAI,2BAAD6D,OACNqC,EAAQ,KAAArC,OAAI4I,EAAM,WAAA5I,OAAU+B,IAIzDiE,EAAS9J,GACT6c,GAAa,EACf,CAAE,MAAO3c,GACPC,QAAQC,IAAIF,EACd,GAMA+K,EAAY,GACX,KAGH,MAAO,KACLgS,aAAaF,EAAM,CACpB,GACA,CAACrQ,EAAQ7G,EAAOgB,EAAUrH,IAG3BiC,eAACkG,IAAG,CAACjG,UAAU,QAAOnC,SAAA,CACpBkC,eAACmG,IAAG,CAAClG,UAAU,kBAAkBsS,GAAI,EAAEzU,SAAA,CACrC2B,cAAC4a,GAAc,CAACH,QAAM,IACtBza,cAAA,KAAGQ,UAAS,gCAAAoC,OAAkCnC,KAAOub,cACrDhc,cAACkE,IAAI,CACH1D,UAAWC,KAAOwb,UAClB7X,SAAW/C,GAAUA,EAAMiD,iBAAiBjG,SAE5C2B,cAACkE,IAAKgD,QAAO,CACXhH,MAAOyE,EACPD,SAAWrD,GAAUua,EAASva,EAAMK,OAAOxB,OAC3CsE,KAAK,OACLhE,UAAU,UACViE,YAAY,mBAGfiX,EACC1b,cAAAkD,WAAA,CAAA7E,SACGsK,EAAM/D,QAAQ5D,OACbhB,cAAC0Z,KAAc,CACbrb,SAAUsK,EAAM/D,QAAQE,KAAKmF,GAC3BjK,cAAC4U,GAAI,IAEC3K,EACJrB,SAAUA,EACVoM,aAAcjI,GAHT9C,EAAKjF,MAMd2U,WAAYhR,EAAM/D,QAAQ5D,OAC1B6Y,OAAQ7Z,cAAC4Q,GAAK,CAACC,SAAO,IACtB+I,UAAWjR,EAAM0P,KACjBA,KAAMA,IAAMH,GAAcvP,EAAOC,KAGnCrI,eAACuD,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SAAA,CACtC2B,cAAC4Q,GAAK,CAACxQ,IAAK8b,GAAW9U,QAASA,IAChCpH,cAAA,KAAA3B,SAAG,8BAKT2B,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SACtC2B,cAAC4Q,GAAK,CAACC,SAAO,SAIpB7Q,cAAC0G,IAAG,CAACC,GAAI,EAAGnG,UAAU,+BAA8BnC,SAClD2B,cAAC4a,GAAc,QAIvB,EC6LeuB,OAjTf,SAAqB/d,GAAgB,IAAD6S,EAAAC,EAAAC,EAAAC,EAAA,IAAd,SAAExI,GAAUxK,EAChC,MAAOiI,EAAQC,GAAa9H,mBAAS,CAAC,IAE/B6S,EAAUC,GAAe9S,mBAAS,CACvC0L,MAAO,GACPuF,QAAS,GACTK,MAAO,GACP1F,SAAU,GACVwF,YAAY,EACZC,WAAW,EACXH,SAAU,SACVC,SAAU,QACV5P,OAAQ,UAEJ,MACJmK,EAAK,QACLuF,EAAO,MACPK,EAAK,SACL1F,EAAQ,SACRsF,EAAQ,SACRC,EAAQ,OACR5P,EAAM,WACN6P,EAAU,UACVC,GACEwB,EAEEE,EAAavP,iBAAO,MACpBvD,EAAUC,eACV,GAAEsG,GAAO6T,eACR6C,EAAWC,GAAgBnd,oBAAS,GAiB3C,GAfAW,qBAAU,KACcN,WACpB,IACE,MAAM,KAAEC,SAAepB,EAASqB,IAAI,UAAD6D,OAAWoC,EAAE,MAChDsM,EAAYxS,GACZ6c,GAAa,EACf,CAAE,MAAO3c,GACPC,QAAQsP,MAAM,6BAA8BvP,GAC5C2c,GAAa,EACf,GAGFS,EAAe,GACd,CAACpX,KAEC0W,EACH,OACEnb,eAACuD,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SAAA,CACtC2B,cAAC4Q,GAAK,CAACC,SAAO,IAAI,OAIxB,GAAIxK,EAAOgW,KACT,OACErc,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SACtC2B,cAACsH,IAAK,CAACC,QAAQ,SAAQlJ,SAAEgI,EAAOgW,SAKtC,MAAM9V,EAAgBlF,IACpB,MAAM,KAAEmF,EAAI,MAAEtG,EAAK,KAAEsE,EAAI,QAAEgN,GAAYnQ,EAAMK,OAC7C4P,EAAY,IACPD,EACH,CAAC7K,GAAgB,aAAThC,EAAsBgN,EAAUtR,GACxC,EAiDEuR,EACJlR,eAAA,OAAKC,UAAWC,KAAOiR,YAAYrT,SAAA,CACjCkC,eAAC2D,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAAA,CAC5C2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,UACZ2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBpN,KAAK,OACLgC,KAAK,QACLtG,MAAOmR,EAASnH,OAAS,GACzBxF,SAAU6B,OAGP,OAANF,QAAM,IAANA,GAAa,QAAP4K,EAAN5K,EAAQ6D,aAAK,IAAA+G,OAAP,EAANA,EAAenM,KAAI,CAACsC,EAASC,IAC5BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAKhC9G,eAAC2D,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAAA,CAC5C2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,YACZ2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBC,GAAG,WACHC,KAAM,EACNtL,KAAK,UACLtG,MAAOmR,EAAS5B,SAAW,GAC3B/K,SAAU6B,OAGP,OAANF,QAAM,IAANA,GAAe,QAAT6K,EAAN7K,EAAQoJ,eAAO,IAAAyB,OAAT,EAANA,EAAiBpM,KAAI,CAACsC,EAASC,IAC9BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAIhC9G,eAAC2D,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAAA,CAC5C2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,aACZ2B,cAACkE,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBpN,KAAK,OACLgC,KAAK,WACLtG,MAAOmR,EAASjH,UAAY,GAC5B1F,SAAU6B,OAGP,OAANF,QAAM,IAANA,GAAgB,QAAV8K,EAAN9K,EAAQ+D,gBAAQ,IAAA+G,OAAV,EAANA,EAAkBrM,KAAI,CAACsC,EAASC,IAC/BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAKhC9G,eAAC2D,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAAA,CAC5C2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,aACZkC,eAAC2D,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBC,GAAG,SACHrL,KAAK,WACLtG,MAAOmR,EAAS3B,UAAY,GAC5BhL,SAAU6B,EAAalI,SAAA,CAEvB2B,cAAA,UAAQE,MAAM,SAAQ7B,SAAC,wBACvB2B,cAAA,UAAQE,MAAM,OAAM7B,SAAC,+BACrB2B,cAAA,UAAQE,MAAM,SAAQ7B,SAAC,iCACvB2B,cAAA,UAAQE,MAAM,MAAK7B,SAAC,oCAIxBkC,eAAC2D,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAAA,CAC5C2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,aACZkC,eAAC2D,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBC,GAAG,SACHrL,KAAK,WACLtG,MAAOmR,EAAS1B,UAAY,GAC5BjL,SAAU6B,EAAalI,SAAA,CAEvB2B,cAAA,UAAQE,MAAM,OAAM7B,SAAC,SACrB2B,cAAA,UAAQE,MAAM,WAAU7B,SAAC,aACzB2B,cAAA,UAAQE,MAAM,QAAO7B,SAAC,gBAI1BkC,eAAC2D,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAAA,CAC5C2B,cAACkE,IAAK+C,MAAK,CAAA5I,SAAC,WACZkC,eAAC2D,IAAKgD,QAAO,CACX1G,UAAWC,KAAOmR,gBAClBC,GAAG,SACHrL,KAAK,SACLtG,MAAOmR,EAAStR,QAAU,GAC1B2E,SAAU6B,EAAalI,SAAA,CAEvB2B,cAAA,UAAQE,MAAM,OAAM7B,SAAC,SACrB2B,cAAA,UAAQE,MAAM,cAAa7B,SAAC,gBAC5B2B,cAAA,UAAQE,MAAM,OAAM7B,SAAC,eAGzB2B,cAACkE,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAC5C2B,cAACkE,IAAK6N,MAAK,CACTvN,KAAK,WACLwN,MAAM,UACNxL,KAAK,aACLgL,QAASH,EAASzB,WAClBlL,SAAU6B,MAGdvG,cAACkE,IAAK6C,MAAK,CAACvG,UAAWC,KAAOkR,gBAAgBtT,SAC5C2B,cAACkE,IAAK6N,MAAK,CACTvN,KAAK,WACLwN,MAAM,SACNxL,KAAK,YACLgL,QAASH,EAASxB,UAClBnL,SAAU6B,MAIdhG,eAAA,OAAKC,UAAU,cAAanC,SAAA,CAC1B2B,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUwK,KAAI,gBAChDlP,QAASA,IAAMtE,EAAQyT,SAAS7T,SACjC,WAGD2B,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAU0K,MAAK,gBACjD3N,KAAK,SAAQnG,SACd,eAOP,OACE2B,cAACkE,IAAI,CAACE,SAxKavF,UACnBwC,EAAMiD,iBACN,IAAI8N,EAAY,CAAC,EAGjB,GAAIE,OAAOC,KAAKH,GAAWpR,OAEzB,YADAsF,EAAU8L,GAIZ,MAAMI,EAAW,IAAIC,SAErBD,EAASE,OAAO,QAASxI,GACzBsI,EAASE,OAAO,UAAWjD,GACvB8B,EAAW/P,SAAW+P,EAAW/P,QAAQmR,MAAM,IACjDH,EAASE,OAAO,QAASnB,EAAW/P,QAAQmR,MAAM,IAEpDH,EAASE,OAAO,WAAYtI,GAC5BoI,EAASE,OAAO,WAAYhD,GAC5B8C,EAASE,OAAO,WAAY/C,GAC5B6C,EAASE,OAAO,SAAU3S,GAC1ByS,EAASE,OAAO,aAAc9C,GAC9B4C,EAASE,OAAO,YAAa7C,GAE7B,IACE,MAAM,KAAE/Q,SAAepB,EAASkZ,IAAI,UAADhU,OAAWoC,EAAE,KAAKwN,GACrD5J,GAAUkE,GACRA,EAAUhI,KAAKmF,GAAUA,EAAKjF,KAAOlG,EAAKkG,GAAKlG,EAAOmL,MAExDxL,EAAQgB,KAAK,IACf,CAAE,MAAOT,GAAM,IAADc,EAAA8S,EACZ3T,QAAQC,IAAIF,GACiB,OAAb,QAAZc,EAAAd,EAAIa,gBAAQ,IAAAC,OAAA,EAAZA,EAAcC,SAAgBuG,EAAsB,QAAbsM,EAAC5T,EAAIa,gBAAQ,IAAA+S,OAAA,EAAZA,EAAc9T,KAC5D,GAuI8B0B,UAAWC,KAAOoS,SAASxU,SACvDkC,eAACkG,IAAG,CAAApI,SAAA,CACF2B,cAAC0G,IAAG,CAAClG,UAAU,kBAAkBmG,GAAI,EAAGmM,GAAI,EAAEzU,SAC5CkC,eAACuD,IAAS,CACRtD,UAAS,GAAAoC,OAAKgE,IAAUC,QAAO,KAAAjE,OAAInC,KAAOqD,UAAS,8CAA6CzF,SAAA,CAEhGkC,eAAC2D,IAAK6C,MAAK,CAACvG,UAAU,cAAanC,SAAA,CAChCyR,GACCvP,eAAA2C,WAAA,CAAA7E,SAAA,CACE2B,cAAA,UAAA3B,SACGyR,GACC9P,cAAC+H,IAAK,CAACvH,UAAWoG,IAAUmB,MAAO3H,IAAK0P,EAAOiD,SAAO,MAI1D/S,cAAA,OAAA3B,SACE2B,cAACkE,IAAK+C,MAAK,CACTzG,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUwK,KAAI,gBAChDe,QAAQ,eAAc3U,SACvB,2BAMLyR,GACA9P,cAACkE,IAAK+C,MAAK,CACTzG,UAAU,gCACVwS,QAAQ,eAAc3U,SAEtB2B,cAAC4Q,GAAK,CAACxQ,IAAK6S,GAAQ7L,QAAQ,4BAIhCpH,cAACkE,IAAKgP,KAAI,CACRlO,GAAG,eACHmO,OAAO,UACPzO,SAvNarD,IACrBA,EAAMK,OAAOiR,MAAM3R,SACrBoS,IAAIC,gBAAgBvD,GACpBwB,EAAY,IACPD,EACHvB,MAAOsD,IAAIE,gBAAgBjS,EAAMK,OAAOiR,MAAM,MAElD,EAiNYpR,IAAKgQ,OAGF,OAANlL,QAAM,IAANA,GAAa,QAAP+K,EAAN/K,EAAQyJ,aAAK,IAAAsB,OAAP,EAANA,EAAetM,KAAI,CAACsC,EAASC,IAC5BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAIhCrH,cAAA,OAAKQ,UAAU,YAAWnC,SAAEoT,SAIhCzR,cAAC0G,IAAG,CAACC,GAAI,EAAGmM,GAAI,EAAGtS,UAAU,+BAA8BnC,SACzD2B,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SAAEoT,UAKpD,E,oBCtSA,SAAS6K,GAAgBC,GACvB,OAAKA,EACEA,EAAUC,cAAcC,OAAO,GAAGC,cAAgBH,EAAUlB,MAAM,GADlD,EAEzB,CA0HesB,OAxHf,WACE,MAAOjB,EAAWC,GAAgBnd,oBAAS,IACpCoe,EAAcC,GAAmBre,mBAAS,CAAEoG,QAAS,KACtDtG,EAAcN,KACd,GAAEgH,GAAO6T,cACTsB,EL3B+Blc,qBAAW8b,KK4B1C,YAAEK,GAAgBJ,MACjBQ,GAAWJ,EAAYxV,QAE9BzF,qBAAU,KACUN,WAChB,IAEE,MAAQC,KAAMge,SAAyBpf,EAASqB,IAAI,aAAD6D,OAAcoC,EAAE,MAGnE,IAAI+X,EAAQ,2BAAAna,OAA8Bka,EAAehI,QAI1C,OAAXxW,QAAW,IAAXA,OAAW,EAAXA,EAAa2G,YAAa6X,EAAehI,QAC3CiI,GAAY,mBAId,MAAQje,KAAM8d,SAAuBlf,EAASqB,IAAIge,GAGlD5C,GAAgBG,IAAS,IACpBA,EACHF,YAAa,CAAExV,QAAS,CAACkY,QAE3BD,EAAgBD,GAChBjB,GAAa,EACf,CAAE,MAAO3c,GACPC,QAAQC,IAAIF,EACd,GAGFge,EAAW,GACV,CAAChY,EAAImV,EAAgB7b,IAExB,MAAM2e,EACJ1c,eAAA2C,WAAA,CAAA7E,SAAA,EACU,OAAPmc,QAAO,IAAPA,OAAO,EAAPA,EAASvF,WAAYjV,cAACuT,GAAmB,CAACvO,GAAW,OAAPwV,QAAO,IAAPA,OAAO,EAAPA,EAASxV,KACxDzE,eAACkG,IAAG,CAACyW,WAAS,EAAC1c,UAAU,mBAAkBnC,SAAA,CACzC2B,cAAC0G,IAAG,CAACoM,GAAI,EAAGtS,UAAU,eAAcnC,SAClC2B,cAAC+H,IAAK,CACJvH,UAAWC,KAAO0c,aAClBC,eAAa,EACbhd,IAAY,OAAPoa,QAAO,IAAPA,OAAO,EAAPA,EAAS1K,UAGlB9P,cAAC0G,IAAG,CAACoM,GAAI,EAAEzU,SACT2B,cAAA,MAAIQ,UAAS,GAAAoC,OAAKnC,KAAO4c,eAAc,QAAOhf,SAC3Cie,GAAuB,OAAP9B,QAAO,IAAPA,OAAO,EAAPA,EAAS1F,YAGtB,OAAP0F,QAAO,IAAPA,OAAO,EAAPA,EAAS/K,UACRzP,cAAC0G,IAAG,CAACoI,GAAI,GAAInI,GAAI,GAAInG,UAAS,GAAAoC,OAAKnC,KAAO6c,WAAU,QAAOjf,SACxDmc,EAAQ/K,gBAOb8N,EACJhd,eAAA2C,WAAA,CAAA7E,SAAA,CACE2B,cAAA,MAAIQ,UAAWC,KAAO+c,WACtBjd,eAAA,KAAGC,UAAS,GAAAoC,OAAKnC,KAAOgd,YAAW,gBAAepf,SAAA,CAC/Cie,GAAuB,OAAP9B,QAAO,IAAPA,OAAO,EAAPA,EAAS1F,OAAO,cAElC8H,EAAahY,QAAQ5D,OACpBhB,cAAC0Z,KAAc,CACbrb,SAAUue,EAAahY,QAAQE,KAAKmF,GAClCjK,cAAC4U,GAAI,IAAmB3K,EAAMrB,SAAUiU,GAA7B5S,EAAKjF,MAElB2U,WAAYiD,EAAahY,QAAQ5D,OACjC6Y,OAAQ7Z,cAAC4Q,GAAK,CAACC,SAAO,IACtB+I,UAAWgD,EAAavE,KACxBA,KAAMA,IAAMH,GAAc0E,EAAcC,KAG1C7c,cAACyG,IAAG,CAACjG,UAAU,yBAAwBnC,SACrC2B,cAAC0G,IAAG,CAACoI,GAAI,GAAI+I,GAAI,GAAIlR,GAAI,GAAInG,UAAWC,KAAOid,QAAQrf,SACrD2B,cAAC4Q,GAAK,CACJxQ,IAAK8b,GACL9U,QAAO,GAAAxE,OAAK0Z,GACH,OAAP9B,QAAO,IAAPA,OAAO,EAAPA,EAAS1F,OACV,kCAQb,OACEvU,eAACkG,IAAG,CAAApI,SAAA,CACFkC,eAACmG,IAAG,CAAClG,UAAU,kBAAkBsS,GAAI,EAAEzU,SAAA,CACrC2B,cAAC4a,GAAc,CAACH,QAAM,IACtBza,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SACrCqd,EACCnb,eAAA2C,WAAA,CAAA7E,SAAA,CACG4e,EACAM,KAGHvd,cAAC4Q,GAAK,CAACC,SAAO,SAIpB7Q,cAAC0G,IAAG,CAACoM,GAAI,EAAGtS,UAAU,+BAA8BnC,SAClD2B,cAAC4a,GAAc,QAIvB,E,oBC5Ce+C,OArFMA,KAAO,IAAD9X,EAEzBN,EAAY,aAEZ,MAAON,EAAU2Y,GAAepf,mBAAS,KAClC6H,EAAQC,GAAa9H,mBAAS,CAAC,GAGhCC,EAAUC,eAEV,GAAEsG,GAAO6T,cAGTva,EAAcN,IAEdO,EAAiBL,IAGvBiB,qBAAU,KAAO,IAAD0e,GAEC,OAAXvf,QAAW,IAAXA,GAAuB,QAAZuf,EAAXvf,EAAaiF,kBAAU,IAAAsa,OAAZ,EAAXA,EAAyBxT,cAAerF,EAC1C4Y,EAAYtf,EAAY2G,UAExBxG,EAAQgB,KAAK,IACf,GACC,CAACnB,EAAaG,EAASuG,IAoB1B,OACEhF,cAACyG,IAAG,CAAApI,SACF2B,cAAC0G,IAAG,CAAClG,UAAU,2BAA2BmG,GAAI,EAAEtI,SAC9C2B,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SACtCkC,eAAC2D,IAAI,CAACE,SArBOvF,UACnBwC,EAAMiD,iBACN,UAEQ1G,EAASgZ,IAAI,sBAAuB,CAAE3R,aAE5C1G,GAAgBuf,IAAQ,IACnBA,EACH7Y,eAEFxG,EAAQyT,QACV,CAAE,MAAOlT,GAAM,IAADc,EACZb,QAAQC,IAAIF,GACZsH,EAAsB,QAAbxG,EAACd,EAAIa,gBAAQ,IAAAC,OAAA,EAAZA,EAAchB,KAC1B,GAOoC0B,UAAU,OAAMnC,SAAA,CAC5CkC,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAWC,KAAOsd,4BAA4B1f,SAAC,oBAG3D2B,cAACkE,IAAKgD,QAAO,CACXzC,YAAY,WACZD,KAAK,OACLtE,MAAO+E,EACPP,SAAWrD,GAAUuc,EAAYvc,EAAMK,OAAOxB,YAG3C,OAANmG,QAAM,IAANA,GAAgB,QAAVR,EAANQ,EAAQpB,gBAAQ,IAAAY,OAAV,EAANA,EAAkBf,KAAI,CAACsC,EAASC,IAC/BrH,cAACsH,IAAK,CAAWC,QAAQ,UAASlJ,SAC/B+I,GADSC,KAIdrH,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUwK,MAC5ClP,QAASA,IAAMtE,EAAQyT,SAAS7T,SACjC,WAGD2B,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAU0K,OAC5C3N,KAAK,SAAQnG,SACd,iBAMH,ECiBK2f,OApGUA,KAAO,IAADC,EAAAC,EAE7B3Y,EAAY,aACZ,MAAM9G,EAAUC,eACV,GAAEsG,GAAO6T,cAETva,EAAcN,KAGbmgB,EAAUC,GAAe5f,mBAAS,CACvC6f,cAAe,GACfC,cAAe,MAEX,cAAED,EAAa,cAAEC,GAAkBH,GAClC9X,EAAQC,GAAa9H,mBAAS,CAAC,GAGhC+H,EAAgBlF,IACpB+c,EAAY,IAAKD,EAAU,CAAC9c,EAAMK,OAAO8E,MAAOnF,EAAMK,OAAOxB,OAAQ,EAIvEf,qBAAU,KAAO,IAAD0e,GAEC,OAAXvf,QAAW,IAAXA,GAAuB,QAAZuf,EAAXvf,EAAaiF,kBAAU,IAAAsa,OAAZ,EAAXA,EAAyBxT,cAAerF,GAC1CvG,EAAQgB,KAAK,IACf,GACC,CAACnB,EAAaG,EAASuG,IAe1B,OACEhF,cAACyG,IAAG,CAAApI,SACF2B,cAAC0G,IAAG,CAAClG,UAAU,2BAA2BmG,GAAI,EAAEtI,SAC9C2B,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SACtCkC,eAAC2D,IAAI,CAACE,SAhBOvF,UACnBwC,EAAMiD,iBACN,UAEQ1G,EAASJ,KAAK,iCAAkC2gB,GACtD1f,EAAQyT,QACV,CAAE,MAAOlT,GAAM,IAADc,EACZb,QAAQC,IAAIF,GACZsH,EAAsB,QAAbxG,EAACd,EAAIa,gBAAQ,IAAAC,OAAA,EAAZA,EAAchB,KAC1B,GAOmCT,SAAA,CAC3BkC,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAWC,KAAOsd,4BAA4B1f,SAAC,iBAG3D2B,cAACkE,IAAKgD,QAAO,CACXzC,YAAY,eACZD,KAAK,WACLtE,MAAOme,EACP3Z,SAAU6B,EACVC,KAAK,qBAGF,OAANH,QAAM,IAANA,GAAqB,QAAf4X,EAAN5X,EAAQgY,qBAAa,IAAAJ,OAAf,EAANA,EAAuBnZ,KAAI,CAACsC,EAASC,IACpCrH,cAACsH,IAAK,CAAWC,QAAQ,UAASlJ,SAC/B+I,GADSC,KAId9G,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAWC,KAAOsd,4BAA4B1f,SAAC,qBAG3D2B,cAACkE,IAAKgD,QAAO,CACXzC,YAAY,uBACZD,KAAK,WACLtE,MAAOoe,EACP5Z,SAAU6B,EACVC,KAAK,qBAGF,OAANH,QAAM,IAANA,GAAqB,QAAf6X,EAAN7X,EAAQiY,qBAAa,IAAAJ,OAAf,EAANA,EAAuBpZ,KAAI,CAACsC,EAASC,IACpCrH,cAACsH,IAAK,CAAWC,QAAQ,UAASlJ,SAC/B+I,GADSC,KAIdrH,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUwK,MAC5ClP,QAASA,IAAMtE,EAAQyT,SAAS7T,SACjC,WAGD2B,cAACwH,IAAM,CACLhD,KAAK,SACLhE,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAU0K,OAAQ9T,SACrD,iBAMH,E,oBCgHKkgB,OA5MSA,KAAO,IAADrN,EAAAE,EAC5B,MAAM9S,EAAcN,IACdO,EAAiBL,KACjB,GAAE8G,GAAO6T,cACTpa,EAAUC,cACV8f,EAAYxc,oBAEXkY,EAAaC,GAAkB3b,mBAAS,CAC7CgI,KAAM,GACNiJ,QAAS,GACTK,MAAO,MAEH,KAAEtJ,EAAI,QAAEiJ,EAAO,MAAEK,GAAUoK,GAE1B7T,EAAQC,GAAa9H,mBAAS,CAAC,IAC/BuK,EAAWC,GAAgBxK,oBAAS,IACpC6J,EAAUoW,GAAejgB,mBAAS,IAEzCW,qBAAU,KACYN,WAAa,IAADgf,EAC9B,IAAe,OAAXvf,QAAW,IAAXA,GAAuB,QAAZuf,EAAXvf,EAAaiF,kBAAU,IAAAsa,OAAZ,EAAXA,EAAyBxT,cAAerF,EAC1C,IACE,MAAM,KAAElG,SAAepB,EAASqB,IAAI,aAAD6D,OAAcoC,EAAE,OAC7C,KAAEwB,EAAI,QAAEiJ,EAAO,MAAEK,GAAUhR,EACjCqb,EAAe,CAAE3T,OAAMiJ,UAASK,SAClC,CAAE,MAAO9Q,GACPC,QAAQC,IAAIF,GACZP,EAAQgB,KAAK,IACf,MAEAhB,EAAQgB,KAAK,IACf,EAGFd,EAAa,GACZ,CAACL,EAAaG,EAASuG,IAE1B,MA6CM0Z,EACJne,eAAA,OAAKC,UAAS,GAAAoC,OAAKnC,KAAOke,iBAAgB,SAAQtgB,SAAA,CAChD2B,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUmX,KAC5C7b,QAASA,IAAMiG,GAAa,GAAM3K,SACnC,mBAGDkC,eAAA,KAAGC,UAAWC,KAAOoe,SAASxgB,SAAA,CAC5B2B,cAAA,QAAMQ,UAAWC,KAAOqe,YAAYzgB,SAAC,YAAc,8EAMnDoT,EACJlR,eAAA2C,WAAA,CAAA7E,SAAA,CACEkC,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACT2B,cAACkE,IAAK+C,MAAK,CAACzG,UAAWC,KAAOse,SAAS1gB,SAAC,WACxC2B,cAACkE,IAAKgD,QAAO,CACX2K,GAAG,WACH3R,MAAOuP,EACP/K,SAnEcrD,IACpB8Y,EAAe,IACVD,EACH,CAAC7Y,EAAMK,OAAO8E,MAAOnF,EAAMK,OAAOxB,OAClC,EAgEIsG,KAAK,UACLsL,KAAM,OAIH,OAANzL,QAAM,IAANA,GAAe,QAAT6K,EAAN7K,EAAQoJ,eAAO,IAAAyB,OAAT,EAANA,EAAiBpM,KAAI,CAACsC,EAASC,IAC9BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAIhCrH,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUwK,MAC5ClP,QAASA,IAAMtE,EAAQyT,SAAS7T,SACjC,WAGD2B,cAACwH,IAAM,CACLhH,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAU0K,OAC5C3N,KAAK,SAAQnG,SACd,YAML,OACEkC,eAAA2C,WAAA,CAAA7E,SAAA,CACE2B,cAACkE,IAAI,CAACE,SAxFWvF,UAAkB,IAADmgB,EACpC3d,EAAMiD,iBACN,MAAMkO,EAAW,IAAIC,SAIc,IAADwM,GAHlCzM,EAASE,OAAO,OAAQlM,GACxBgM,EAASE,OAAO,UAAWjD,GAEd,OAAT+O,QAAS,IAATA,GAAkB,QAATQ,EAATR,EAAWhd,eAAO,IAAAwd,GAAlBA,EAAoBrM,MAAM,KAC5BH,EAASE,OAAO,QAAkB,OAAT8L,QAAS,IAATA,GAAkB,QAATS,EAATT,EAAWhd,eAAO,IAAAyd,OAAT,EAATA,EAAoBtM,MAAM,IAGrD,IACE,MAAM,KAAE7T,SAAepB,EAASkZ,IAAI,aAADhU,OAAcoC,EAAE,KAAKwN,GACxDjU,GAAgBD,IAAW,IACtBA,EACHkF,cAAe1E,EAAKgR,UAEtBrR,EAAQyT,QACV,CAAE,MAAOlT,GAAM,IAADc,EACZb,QAAQC,IAAIF,GACZsH,EAAsB,QAAbxG,EAACd,EAAIa,gBAAQ,IAAAC,OAAA,EAAZA,EAAchB,KAC1B,GAoE+BT,SAC3BkC,eAACkG,IAAG,CAAApI,SAAA,CACF2B,cAAC0G,IAAG,CAAClG,UAAU,8BAA8BmG,GAAI,EAAGmM,GAAI,EAAEzU,SACxD2B,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SACtCkC,eAAC2D,IAAK6C,MAAK,CAAA1I,SAAA,CACRyR,GACC9P,cAAA,UAAA3B,SACE2B,cAAC+H,IAAK,CAAC3H,IAAK0P,EAAOjB,OAAK,MAGrB,OAANxI,QAAM,IAANA,GAAa,QAAP+K,EAAN/K,EAAQyJ,aAAK,IAAAsB,OAAP,EAANA,EAAetM,KAAI,CAACsC,EAASC,IAC5BrH,cAACsH,IAAK,CAACC,QAAQ,UAASlJ,SACrB+I,GAD2BC,KAIhCrH,cAAA,OAAA3B,SACE2B,cAACkE,IAAK+C,MAAK,CACTzG,UAAS,GAAAoC,OAAK6E,IAAUD,OAAM,KAAA5E,OAAI6E,IAAUwK,KAAI,gBAChDe,QAAQ,eAAc3U,SACvB,uBAIH2B,cAACkE,IAAKgP,KAAI,CACRlO,GAAG,eACHzD,IAAKid,EACLrL,OAAO,UACPzO,SAAWL,IACLA,EAAE3C,OAAOiR,MAAM3R,QACjBmZ,EAAe,IACVD,EACHpK,MAAOsD,IAAIE,gBAAgBjP,EAAE3C,OAAOiR,MAAM,KAE9C,WAMVpS,eAACmG,IAAG,CAACC,GAAI,EAAGmM,GAAI,EAAGtS,UAAU,8BAA6BnC,SAAA,CACxD2B,cAAC8D,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SAAEoT,IAC1ClR,eAACuD,IAAS,CAACtD,UAAWoG,IAAUC,QAAQxI,SAAA,CACrCqgB,EAAsB,eAK/Bne,eAACyO,IAAK,CAACC,KAAMlG,EAAWmG,OAAQA,IAAMlG,GAAa,GAAO3K,SAAA,CACxD2B,cAACgP,IAAMlI,OAAM,CAACsI,aAAW,EAAA/Q,SACvB2B,cAACgP,IAAMM,MAAK,CAAAjR,SAAC,qBAEfkC,eAACyO,IAAMO,KAAI,CAAAlR,SAAA,CACT2B,cAAA,KAAA3B,SAAG,4DACH2B,cAACkE,IAAKgD,QAAO,CACX1C,KAAK,WACLtE,MAAOmI,EACP3D,SAAWL,GAAMoa,EAAYpa,EAAE3C,OAAOxB,YAG1CK,eAACyO,IAAMe,OAAM,CAAA1R,SAAA,CACX2B,cAACwH,IAAM,CAACD,QAAQ,YAAYxE,QAASA,IAAMiG,GAAa,GAAO3K,SAAC,UAGhE2B,cAACwH,IAAM,CAACD,QAAQ,SAASxE,QAhIZlE,UACnB,IACE,MAAMgB,QAAiBjC,EAASiP,OAAO,gBAAiB,CACtD/N,KAAM,CAAEuJ,SAAUA,KAEI,MAApBxI,EAASE,QACXd,QAAQC,IAAI,cACZX,EAAe,MACfE,EAAQgB,KAAK,YACRR,QAAQC,IAAIW,EACrB,CAAE,MAAOb,GACPC,QAAQsP,MAAMvP,EAChB,GAoHqDX,SAAC,2BAKnD,ECxHQ6gB,OApFf,WACE,MAAM5gB,EAAcN,KACb2K,EAAOC,GAAYpK,mBAAS,IAwBnC,OAtBAW,qBAAU,KAiBJb,GAhBeO,WACjB,IACE,MAAMoG,EAAsB,OAAX3G,QAAW,IAAXA,OAAW,EAAXA,EAAa2G,SAC9B,IAAKA,EAEH,YADAhG,QAAQsP,MAAM,4BAGhB,MAAM,KAAEzP,SAAepB,EAASqB,IAAI,2BAAD6D,OACNqC,IAE7B2D,EAAS9J,EAAK8F,QAChB,CAAE,MAAO5F,GACPC,QAAQC,IAAIF,EACd,GAIA+K,EACF,GACC,CAACzL,IAGFiC,eAAA,OAAKC,UAAWC,IAAOye,IAAI7gB,SAAA,CACzB2B,cAAC8B,EAAM,IACP9B,cAAC8D,IAAS,CAACtD,UAAWC,IAAO0e,KAAK9gB,SAChCkC,eAAC6e,IAAM,CAAA/gB,SAAA,CACL2B,cAACqf,IAAK,CACJ/Z,OAAK,EACLga,KAAK,IACLC,OAAQA,IAAMvf,cAAC0I,GAAU,CAACC,MAAOA,EAAOC,SAAUA,MAEpD5I,cAACqf,IAAK,CACJ/Z,OAAK,EACLga,KAAK,YACLC,OAAQA,IACNvf,cAACyb,GAAS,CACRrU,QAAQ,yCACRwB,SAAUA,EACVD,MAAOA,MAIb3I,cAACqf,IAAK,CAAC/Z,OAAK,EAACga,KAAK,UAAUC,OAAQA,IAAMvf,cAACkI,EAAU,MACrDlI,cAACqf,IAAK,CAAC/Z,OAAK,EAACga,KAAK,UAAUC,OAAQA,IAAMvf,cAAC4F,EAAU,MACrD5F,cAACqf,IAAK,CACJ/Z,OAAK,EACLga,KAAK,gBACLC,OAAQA,IAAMvf,cAACgR,GAAc,CAACpI,SAAUA,MAE1C5I,cAACqf,IAAK,CAAC/Z,OAAK,EAACga,KAAK,aAAaC,OAAQA,IAAMvf,cAAC4Y,GAAQ,MACtD5Y,cAACqf,IAAK,CAAC/Z,OAAK,EAACga,KAAK,SAASC,OAAQA,IAAMvf,cAACyb,GAAS,MACnDzb,cAACqf,IAAK,CACJ/Z,OAAK,EACLga,KAAK,kBACLC,OAAQA,IAAMvf,cAACmc,GAAY,CAACvT,SAAUA,MAExC5I,cAACqf,IAAK,CAAC/Z,OAAK,EAACga,KAAK,gBAAgBC,OAAQA,IAAMvf,cAAC2c,GAAW,MAC5D3c,cAACqf,IAAK,CACJ/Z,OAAK,EACLga,KAAK,8BACLC,OAAQA,IAAMvf,cAAC2d,GAAY,MAE7B3d,cAACqf,IAAK,CACJ/Z,OAAK,EACLga,KAAK,8BACLC,OAAQA,IAAMvf,cAACge,GAAgB,MAEjChe,cAACqf,IAAK,CACJ/Z,OAAK,EACLga,KAAK,qBACLC,OAAQA,IAAMvf,cAACue,GAAe,MAEhCve,cAACqf,IAAK,CAACE,OAAQA,IAAMvf,cAAA,KAAA3B,SAAG,6BAKlC,ECzFemhB,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAKvhB,IAAkD,IAAjD,OAAEwhB,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS5hB,EACpEwhB,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECAFQ,IAASV,OACPvf,cAACiU,IAAMiM,WAAU,CAAA7hB,SACf2B,cAACmgB,IAAM,CAAA9hB,SACL2B,cAAC7B,EAAmB,CAAAE,SAClB2B,cAACia,GAAmB,CAAA5b,SAClB2B,cAACkf,GAAG,YAKZvd,SAASye,eAAe,SAM1BZ,I,qBCxBAtiB,EAAOC,QAAU,CAAC,UAAY,sCAAsC,YAAc,wCAAwC,WAAa,uCAAuC,gBAAkB,4CAA4C,YAAc,wCAAwC,gBAAkB,4CAA4C,aAAe,yC,qBCA/WD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,QAAU,wBAAwB,OAAS,uBAAuB,aAAe,6BAA6B,iBAAmB,iCAAiC,eAAiB,+BAA+B,SAAW,yBAAyB,qBAAuB,qCAAqC,sBAAwB,sCAAsC,YAAc,4B,qBCAldD,EAAOC,QAAU,CAAC,kBAAoB,sCAAsC,GAAK,uBAAuB,kBAAkB,oCAAoC,mBAAmB,qCAAqC,oBAAoB,sCAAsC,cAAgB,kCAAkC,oBAAsB,wCAAwC,kBAAoB,sCAAsC,oBAAsB,wCAAwC,cAAgB,kCAAkC,oBAAsB,wCAAwC,kBAAoB,sCAAsC,oBAAsB,wCAAwC,WAAa,+BAA+B,aAAe,iCAAiC,SAAW,6BAA6B,YAAc,gCAAgC,YAAc,gCAAgC,WAAa,+BAA+B,aAAe,iCAAiC,iBAAmB,qCAAqC,wBAAwB,0CAA0C,mBAAmB,qC,qBCAzqCD,EAAOC,QAAU,CAAC,SAAW,+BAA+B,SAAW,+BAA+B,gBAAkB,sCAAsC,KAAO,2BAA2B,SAAW,+BAA+B,SAAW,+BAA+B,aAAe,mCAAmC,iBAAmB,uCAAuC,oBAAsB,0C,qBCAtZD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,WAAa,yBAAyB,WAAa,yBAAyB,aAAe,2BAA2B,UAAY,wBAAwB,aAAe,2BAA2B,eAAiB,6BAA6B,aAAe,2BAA2B,cAAgB,4BAA4B,SAAW,uBAAuB,YAAc,0B,qBCA1cD,EAAOC,QAAU,CAAC,IAAM,0BAA0B,MAAQ,4BAA4B,OAAS,6BAA6B,KAAO,2BAA2B,UAAY,gCAAgC,UAAY,gCAAgC,UAAY,gC,qBCAlQD,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,KAAO,0BAA0B,mBAAqB,wCAAwC,sBAAwB,2CAA2C,eAAiB,oCAAoC,eAAiB,oCAAoC,YAAc,iCAAiC,WAAa,gCAAgC,OAAS,4BAA4B,gBAAkB,qC,qBCAndD,EAAOC,QAAU,CAAC,aAAe,kCAAkC,eAAiB,oCAAoC,WAAa,gCAAgC,SAAW,8BAA8B,YAAc,iCAAiC,QAAU,6B,qBCAvQD,EAAOC,QAAU,CAAC,4BAA8B,0D,qBCAhDD,EAAOC,QAAU,CAAC,iBAAmB,0CAA0C,SAAW,kCAAkC,YAAc,qCAAqC,SAAW,kC,qBCA1LD,EAAOC,QAAU,CAAC,KAAO,kCAAkC,UAAY,uCAAuC,QAAU,qC,qBCAxHD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,aAAe,qCAAqC,qBAAuB,6CAA6C,IAAM,4BAA4B,YAAY,kC,qBCAhPD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8B,qBCAxED,EAAOC,QAAU,CAAC,OAAS,uB","file":"static/js/main.605a764f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"Wide\":\"Button_Wide__2ScDr\",\"Dark\":\"Button_Dark__1IuZO\",\"DarkOutline\":\"Button_DarkOutline__Vs2wq\",\"Bright\":\"Button_Bright__1MBHR\",\"Red\":\"Button_Red__1ANXl\",\"RedOutline\":\"Button_RedOutline__1BwjL\",\"Green\":\"Button_Green__1wHLv\",\"GreenOutline\":\"Button_GreenOutline__2AY3X\",\"Black\":\"Button_Black__2dCp7\",\"BlackOutline\":\"Button_BlackOutline__I-kZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Asset\":\"Asset_Asset__1dBcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"TaskPage_SearchBar__2Wtp-\",\"SearchIcon\":\"TaskPage_SearchIcon__2Iwqi\",\"CommentContainer\":\"TaskPage_CommentContainer__2vz5E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WordBreak\":\"Account_WordBreak__tfKZH\",\"AuthorizeBtn\":\"Account_AuthorizeBtn__3jlSy\",\"UnauthorizeBtn\":\"Account_UnauthorizeBtn__KOaoX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Main\":\"App_Main__HQkvd\",\"Content\":\"App_Content__ZaMNr\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"Image\":\"App_Image__3UPXw\",\"view-dropdown\":\"App_view-dropdown__2QjCh\"};","export default __webpack_public_path__ + \"static/media/1january.5ff4a75b.webp\";","export default __webpack_public_path__ + \"static/media/2februari.fa7b9389.webp\";","export default __webpack_public_path__ + \"static/media/3march.99c94ffd.webp\";","export default __webpack_public_path__ + \"static/media/4april.b2e0e44a.webp\";","export default __webpack_public_path__ + \"static/media/5may.9763cfeb.webp\";","export default __webpack_public_path__ + \"static/media/6june.6253fbce.webp\";","export default __webpack_public_path__ + \"static/media/7july.66b1dd06.webp\";","export default __webpack_public_path__ + \"static/media/8august.32990e01.webp\";","export default __webpack_public_path__ + \"static/media/9september.5efc8a6b.webp\";","export default __webpack_public_path__ + \"static/media/10october.62739035.webp\";","export default __webpack_public_path__ + \"static/media/11november.8ee7261e.webp\";","export default __webpack_public_path__ + \"static/media/12december.c30b98ac.webp\";","export default __webpack_public_path__ + \"static/media/logo.9a1790e5.png\";","import axios from \"axios\";\n\n// Set default configurations for axios\naxios.defaults.baseURL = \"/api\";  // Set base URL for all axios requests to API endpoint\naxios.defaults.headers.post[\"Content-Type\"] = \"multipart/form-data\";  // Set default Content type for POST requests\naxios.defaults.withCredentials = true;  // Include credentials in every request\n\n// Create axios instances for request and response\nexport const axiosReq = axios.create();  // sending requests\nexport const axiosRes = axios.create();  // handling responses\n","import {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n  useCallback,\n} from \"react\";\nimport axios from \"axios\";\nimport { axiosReq, axiosRes } from \"../api/axiosDefaults\";\nimport { useHistory } from \"react-router-dom\";\n\n// Contexts to manage current user data\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\n// Custom hooks for using contexts\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\n// Provide current user context to its children\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  // Function to fetch current user details\n  const handleMount = useCallback(async () => {\n    try {\n      const { data } = await axiosRes.get(`/dj-rest-auth/user/`);\n      setCurrentUser(data);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  // Hook to execute handleMount on component mount\n  useEffect(() => {\n    handleMount();\n  }, [handleMount]);\n\n  // Memo hook to set up interceptors for HTTP requests and responses\n  useMemo(() => {\n    // Interceptor for requests to handle token refresh\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        try {\n          await axios.post(`/dj-rest-auth/token/refresh/`);\n        } catch (err) {\n          setCurrentUser((prevCurrentUser) => {\n            if (prevCurrentUser) {\n              history.push(\"/signin\");\n            }\n            return null;\n          });\n          return config;\n        }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n\n    // Interceptor for responses to handle unauthorized access\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post(`/dj-rest-auth/token/refresh/`);\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push(\"/signin\");\n              }\n              return null;\n            });\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [history]);\n\n  // Providing the current user data and the function to update it\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React from \"react\";\nimport styles from \"../styles/Avatar.module.css\";\n\n// Avatar component\nconst Avatar = ({ src, height = 45, text }) => {\n  return (\n    <span>\n      <img\n        className={styles.Avatar}\n        src={src}\n        height={height}\n        width={height}\n        alt=\"avatar\"\n      />\n      {text}\n    </span>\n  );\n};\n\nexport default Avatar;\n","import { useEffect } from \"react\";\n\n// Handle click event\nconst useClickOutsideToggle = (callback, ...refs) => {\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        refs.every((ref) => ref.current && !ref.current.contains(event.target))\n      ) {\n        callback();\n      }\n    };\n\n    // Add event listener for mousedown events\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [callback, refs]);\n};\n\nexport default useClickOutsideToggle;\n","import React, { useState, useRef } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { FormControl } from \"react-bootstrap\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport logo from \"../assets/logo.png\";\nimport styles from \"../styles/NavBar.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  useSetCurrentUser,\n  useCurrentUser,\n} from \"../contexts/CurrentUserContext\";\nimport Avatar from \"./Avatar\";\nimport axios from \"axios\";\nimport { axiosReq } from \"../api/axiosDefaults\";\nimport useClickOutsideToggle from \"../hooks/useClickOutsideToggle\";\n\n// Navbar component\nconst NavBar = () => {\n  // For managing current user data and navbar behavior\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n\n  const navbarRef = useRef(null);\n  const searchRef = useRef(null);\n\n  // managing navbar, search expansion and search functionality\n  const [navbarExpanded, setNavbarExpanded] = useState(false);\n  const [searchExpanded, setSearchExpanded] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  // Close navbar when clicking outside\n  useClickOutsideToggle(() => setNavbarExpanded(false), navbarRef);\n  // Close searchbar when clicking otside\n  useClickOutsideToggle(() => setSearchExpanded(false), searchRef);\n\n  // Handle search input changes and fetch results\n  const handleSearchChange = async (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n\n    if (query.length === 0) {\n      setSearchResults([]);\n    } else {\n      try {\n        // Fetch search result based on query\n        const { data } = await axiosReq.get(`/search-users/?username=${query}`);\n        setSearchResults(data.results);\n        setSearchExpanded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  // Close search results dropdown\n  const closeSearchResults = () => {\n    setSearchExpanded(false);\n  };\n\n  // Handle sign out\n  const handleSignout = async () => {\n    try {\n      await axios.post(\"/dj-rest-auth/logout/\");\n      setCurrentUser(null); // Clear current user context\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Create task icon\n  const addTaskIcon = (\n    <NavLink\n      className={`${styles.CreateTaskButton} d-flex align-items-center`}\n      to=\"/tasks/create\"\n      onClick={() => setNavbarExpanded(false)}\n    >\n      <i className=\"fa-solid fa-calendar-plus\"></i>\n      <span className={`${styles.CreateTaskText}`}>Create task</span>\n    </NavLink>\n  );\n\n  // Links shown to logged in users\n  const loggedInIcons = (\n    <>\n      <NavLink\n        activeClassName={styles.Active}\n        className={styles.NavLink}\n        to=\"/tasks\"\n        onClick={() => setNavbarExpanded(false)}\n      >\n        <i className=\"fa-solid fa-list-check\"></i>\n        <span className={styles.NavLinkTexts}>Tasks</span>\n      </NavLink>\n\n      <NavLink\n        className={styles.NavLink}\n        to=\"/\"\n        onClick={() => {\n          handleSignout();\n          setNavbarExpanded(false);\n        }}\n      >\n        <i className=\"fa-solid fa-right-from-bracket\"></i>\n        <span className={styles.NavLinkTexts}>Sign out</span>\n      </NavLink>\n\n      <NavLink\n        className={styles.NavLink}\n        activeClassName={styles.Active}\n        to={`/accounts/${currentUser?.account_id}`}\n        onClick={() => setNavbarExpanded(false)}\n      >\n        <div>\n          <Avatar src={currentUser?.account_image} height={40} />\n        </div>\n        <span className={styles.NavLinkTexts}>Account</span>\n      </NavLink>\n    </>\n  );\n\n  // Links shown to logged out users\n  const loggedOutIcons = (\n    <>\n      <NavLink\n        className={styles.NavLink}\n        activeClassName={styles.Active}\n        to=\"/signin\"\n        onClick={() => setNavbarExpanded(false)}\n      >\n        <i className=\"fa-solid fa-right-to-bracket\"></i>\n        <span className={styles.NavLinkTexts}>Sign in</span>\n      </NavLink>\n      <NavLink\n        className={styles.NavLink}\n        activeClassName={styles.Active}\n        to=\"/signup\"\n        onClick={() => setNavbarExpanded(false)}\n      >\n        <i className=\"fa-solid fa-user-plus\"></i>\n        <span className={styles.NavLinkTexts}>Sign up</span>\n      </NavLink>\n    </>\n  );\n\n  return (\n    <Navbar\n      expanded={navbarExpanded}\n      className={styles.NavBar}\n      expand=\"md\"\n      fixed=\"top\"\n      ref={navbarRef}\n    >\n      <Container>\n        <NavLink to=\"/\" onClick={() => setNavbarExpanded(false)}>\n          <Navbar.Brand>\n            <img src={logo} alt=\"logo\" height=\"45\" />\n          </Navbar.Brand>\n        </NavLink>\n        {currentUser && (\n          <div className={styles.SearchInputContainer} ref={searchRef}>\n            <Form inline onSubmit={(e) => e.preventDefault()}>\n              <FormControl\n                type=\"text\"\n                placeholder=\"Search for users\"\n                className=\"mr-sm-2\"\n                value={searchQuery}\n                onChange={handleSearchChange}\n              />\n            </Form>\n            {searchExpanded && (\n              <div className={styles.SearchResultsDropdown}>\n                {searchResults.length > 0 ? (\n                  searchResults.map((user) => (\n                    <NavLink\n                      key={user.id}\n                      to={`/accounts/${user.id}`}\n                      onClick={() => {\n                        closeSearchResults();\n                        setNavbarExpanded(false);\n                      }}\n                    >\n                      {user.username}\n                    </NavLink>\n                  ))\n                ) : (\n                  <div className={styles.NoUserFound}>No user found</div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n        <Navbar.Toggle\n          onClick={() => setNavbarExpanded(!navbarExpanded)}\n          aria-controls=\"basic-navbar-nav\"\n        />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          {currentUser && addTaskIcon}\n\n          <Nav className=\"ml-auto text-left\">\n            <NavLink\n              exact\n              className={styles.NavLink}\n              activeClassName={styles.Active}\n              to=\"/\"\n              onClick={() => setNavbarExpanded(false)}\n            >\n              <i className=\"fa-solid fa-house-chimney\"></i>\n              <span className={styles.NavLinkTexts}>Home</span>\n            </NavLink>\n\n            {currentUser ? loggedInIcons : loggedOutIcons}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/melon11.d4c30671.png\";","import { useEffect } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\n\nexport const useRedirect = (userAuthStatus) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        await axios.post(\"/dj-rest-auth/token/refresh/\");\n        // No redirection when logged in\n      } catch (err) {\n        if (userAuthStatus === \"loggedOut\") {\n          // Redirect to signin only if the user is on a page that requires authentication\n          if (\n            location.pathname !== \"/signin\" &&\n            location.pathname !== \"/signup\"\n          ) {\n            history.push(\"/signin\");\n          }\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, location, userAuthStatus]);\n};\n","import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport SignUpMelonImage from \"../../assets/melon11.png\";\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\nimport {\n  Form,\n  Button,\n  Image,\n  Col,\n  Row,\n  Container,\n  Alert,\n} from \"react-bootstrap\";\nimport axios from \"axios\";\n\n// Handles user registration\nconst SignUpForm = () => {\n  // redirect logged in users away from the signup page\n  useRedirect(\"loggedIn\");\n  // managing sign up form data\n  const [signUpData, setSignUpData] = useState({\n    username: \"\",\n    password1: \"\",\n    password2: \"\",\n  });\n  const { username, password1, password2 } = signUpData;\n  // managing form errors\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  // Handle changes in form inputs\n  const handleChange = (event) => {\n    // Updates signUpData state with new input values\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  // Handle form submission.\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents the default form submission\n    try {\n      // POST request to the registration endpoint with the form data\n      await axios.post(\"/dj-rest-auth/registration/\", signUpData);\n      // Redirects to the sign in page after successful registration\n      history.push(\"/signin\");\n    } catch (err) {\n      // Set form errors if registration attempt fails\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className=\"my-auto py-2 p-md-2\" md={6}>\n        <Container className={`${appStyles.Content} p-4 `}>\n          <h1 className={styles.Header}>sign up</h1>\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId=\"username\">\n              <Form.Label className=\"d-none\">username</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId=\"password1\">\n              <Form.Label className=\"d-none\">Password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password1\"\n                value={password1}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password1?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId=\"password2\">\n              <Form.Label className=\"d-none\">Confirm password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                name=\"password2\"\n                value={password2}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password2?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n              type=\"submit\"\n            >\n              Sign up\n            </Button>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\" className=\"mt-3\">\n                {message}\n              </Alert>\n            ))}\n          </Form>\n        </Container>\n\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to=\"/signin\">\n            Already have an account? <span>Sign in</span>\n          </Link>\n        </Container>\n      </Col>\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignUpCol}`}\n      >\n        <Image className={`${appStyles.FillerImage}`} src={SignUpMelonImage} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SignUpForm;\n","export default __webpack_public_path__ + \"static/media/melon4.ec283e97.png\";","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport styles from \"../../styles/SignInUpForm.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport SignInMelon from \"../../assets/melon4.png\";\nimport { useSetCurrentUser } from \"../../contexts/CurrentUserContext\";\n\n// SignInForm to handle sign ins\nconst SignInForm = () => {\n  // Custom hook to set current user context\n  const setCurrentUser = useSetCurrentUser();\n  // Manage sign in form data and error\n  const [signInData, setSignInData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  // Destructure to extract username and password from signInData\n  const { username, password } = signInData;\n  // useState hook for managing form errors\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n\n  // Handle form submission.\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents the default form submission\n    try {\n      // POST request to the sign-in endpoint with the form data\n      const response = await axios.post(\"/dj-rest-auth/login/\", signInData);\n      // Extracts data from the response\n      const data = response.data;\n      // Set current user in the context to the signed in user\n      setCurrentUser(data.user);\n      // Redirect to homepage after successful sign in\n      history.push(\"/\");\n    } catch (err) {\n      // Set form errors if the sign in attempt fails\n      setErrors(err.response.data);\n    }\n  };\n\n  // Function to handle changes in form inputs\n  const handleChange = (event) => {\n    // Updates signInData state with new input values\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className=\"my-auto p-0 p-md-2\" md={6}>\n        <Container className={`${appStyles.Content} p-4 `}>\n          <h1 className={styles.Header}>sign in</h1>\n          <Form onSubmit={handleSubmit}>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Form.Group controlId=\"username\">\n              <Form.Label className=\"d-none\">Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                name=\"username\"\n                className={styles.Input}\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId=\"password\">\n              <Form.Label className=\"d-none\">Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                className={styles.Input}\n                value={password}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n              type=\"submit\"\n            >\n              Sign in\n            </Button>\n          </Form>\n        </Container>\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to=\"/signup\">\n            Don't have an account? <span>Sign up now!</span>\n          </Link>\n        </Container>\n      </Col>\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignInCol}`}\n      >\n        <Image className={`${appStyles.FillerImage}`} src={SignInMelon} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SignInForm;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport styles from \"../styles/MyCalendar.module.css\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\n// Show unique image for each month's 1st day\nconst monthImages = {\n  0: require(\"../assets/months/1january.webp\"),\n  1: require(\"../assets/months/2februari.webp\"),\n  2: require(\"../assets/months/3march.webp\"),\n  3: require(\"../assets/months/4april.webp\"),\n  4: require(\"../assets/months/5may.webp\"),\n  5: require(\"../assets/months/6june.webp\"),\n  6: require(\"../assets/months/7july.webp\"),\n  7: require(\"../assets/months/8august.webp\"),\n  8: require(\"../assets/months/9september.webp\"),\n  9: require(\"../assets/months/10october.webp\"),\n  10: require(\"../assets/months/11november.webp\"),\n  11: require(\"../assets/months/12december.webp\"),\n};\n\n// Calendar component\nconst MyCalendar = ({ tasks, setTasks }) => {\n  const [calendarTasks, setCalendarTasks] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [showTaskListModal, setShowTaskListModal] = useState(false); // State for task list modal\n  const [selectedDate, setSelectedDate] = useState(null); // State for selected date\n  const [currentView, setCurrentView] = useState(\n    localStorage.getItem(\"calendarView\") || \"dayGridMonth\"\n  ); // State to manage current view\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth); // State to track window width\n  const history = useHistory();\n\n  // Hook to fetch tasks again\n  const fetchTasks = useCallback(async () => {\n    try {\n      const { data } = await axiosReq.get(\"/tasks/\");\n      setTasks(data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  }, [setTasks]);\n\n  // Fetch tasks on initial load and when tasks change\n  useEffect(() => {\n    const calendarTasksPreview = tasks.map((task) => ({\n      title: task.title,\n      date: task.due_date,\n      id: task.id.toString(),\n    }));\n    setCalendarTasks(calendarTasksPreview);\n  }, [tasks]);\n\n  // Handle updates on page navigation\n  useEffect(() => {\n    const unlisten = history.listen((location) => {\n      if (location.pathname === \"/\") {\n        fetchTasks();\n      }\n    });\n    return () => {\n      unlisten();\n    };\n  }, [history, fetchTasks]);\n\n  useEffect(() => {\n    const handleFirstDayCellCheck = () => {\n      const allDayCells = document.querySelectorAll(\".fc-daygrid-day\");\n\n      allDayCells.forEach((dayCell) => {\n        const date = new Date(dayCell.dataset.date);\n        if (date.getDate() === 1) {\n          const month = date.getMonth();\n          const imageUrl = monthImages[month];\n          if (imageUrl) {\n            dayCell.style.backgroundImage = `url(${imageUrl.default})`;\n            dayCell.style.backgroundSize = \"cover\";\n            dayCell.style.backgroundPosition = \"center\";\n            dayCell.style.position = \"relative\";\n\n            // Check if there are tasks on the first day of the month\n            const tasksOnFirstDay = tasks.filter(\n              (task) =>\n                new Date(task.due_date).toDateString() === date.toDateString()\n            );\n\n            // Add class to darken the background if tasks exist\n            if (tasksOnFirstDay.length > 0) {\n              dayCell.classList.add(styles.darkenBackground);\n            } else {\n              dayCell.classList.remove(styles.darkenBackground);\n            }\n          }\n        }\n      });\n    };\n\n    handleFirstDayCellCheck();\n\n    const observer = new MutationObserver(handleFirstDayCellCheck);\n    const config = { childList: true, subtree: true };\n\n    const calendarElement = document.querySelector(\".fc-daygrid\");\n    if (calendarElement) {\n      observer.observe(calendarElement, config);\n    }\n\n    return () => {\n      if (calendarElement) {\n        observer.disconnect();\n      }\n    };\n  }, [tasks, currentView]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Save current view to local storage when it changes\n  const handleViewChange = (view) => {\n    setCurrentView(view);\n    localStorage.setItem(\"calendarView\", view);\n  };\n\n  // Handle click events\n  const handleEventClick = (clickInfo) => {\n    const taskId = clickInfo.event.id;\n    const task = tasks.find((task) => task.id.toString() === taskId);\n    if (task) {\n      setSelectedTask(task);\n      setShowModal(true);\n    } else {\n      console.error(\"Task not found for ID:\", taskId);\n    }\n  };\n\n  // Handle icon click for task list\n  const handleIconClick = (date) => {\n    setSelectedDate(date);\n    setShowTaskListModal(true);\n  };\n\n  // Redirection after editing\n  const handleEditRedirect = (taskId) => {\n    history.push(`/tasks/${taskId}/edit`);\n  };\n\n  // Remove task from the list by its ID\n  const removeTaskFromList = (taskId) => {\n    setTasks((prevTasks) => prevTasks.filter((task) => task.id !== taskId));\n    setCalendarTasks((prevTasks) =>\n      prevTasks.filter((task) => task.id !== taskId)\n    );\n  };\n\n  // Handle task delete\n  const handleDelete = async (taskId) => {\n    try {\n      await axiosReq.delete(`/tasks/${taskId}/`);\n      removeTaskFromList(taskId);\n      setShowModal(false); // Close the modal after deletion\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Function to truncate text\n  const truncateText = (text) => {\n    const maxLength = windowWidth <= 451 ? 15 : 40;\n    return text.length > maxLength\n      ? text.substring(0, maxLength) + \"...\"\n      : text;\n  };\n\n  return (\n    <Container className={`p-4 ${styles.calendarContainer}`}>\n      <FullCalendar\n        plugins={[dayGridPlugin]}\n        initialView={currentView}\n        views={{\n          dayGridYear: {\n            type: \"dayGrid\",\n            duration: { year: 1 },\n            buttonText: \"Year\",\n          },\n        }}\n        customButtons={{\n          year: {\n            text: \"Year\",\n            click: () => handleViewChange(\"dayGridYear\"),\n          },\n          month: {\n            text: \"Month\",\n            click: () => handleViewChange(\"dayGridMonth\"),\n          },\n        }}\n        headerToolbar={{\n          left: \"prev,next today\",\n          center: \"title\",\n          right: \"dayGridMonth,dayGridYear\",\n        }}\n        events={calendarTasks}\n        eventClick={handleEventClick}\n        datesSet={(dateInfo) => handleViewChange(dateInfo.view.type)} // Capture view change\n        dayCellContent={({ date }) => {\n          const tasksOnDate = tasks.filter(\n            (task) =>\n              new Date(task.due_date).toDateString() === date.toDateString()\n          );\n          return (\n            <>\n              <div className=\"fc-daygrid-day-number\">{date.getDate()}</div>\n              {windowWidth <= 797 && tasksOnDate.length > 0 && (\n                <Container fluid className=\"mt-5\">\n                  <Row>\n                    <Col xs={6} className=\"mt-2\">\n                      <i\n                        className={`fa-solid fa-calendar-check task-list-icon`}\n                        onClick={() => handleIconClick(date)}\n                      ></i>\n                    </Col>\n                    <Col xs={6}></Col>\n                  </Row>\n                </Container>\n              )}\n            </>\n          );\n        }}\n      />\n\n      {/* Task details modal */}\n      <Modal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        className={styles.calendarModal}\n      >\n        <Modal.Header closeButton className={styles.calendarModalHeader}>\n          <Modal.Title>Task Details</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={styles.calendarModalBody}>\n          {windowWidth > 797 && selectedTask && (\n            <>\n              <p>\n                <strong>Title:</strong> {selectedTask.title}\n              </p>\n              <p>\n                <strong>Content:</strong> {selectedTask.content}\n              </p>\n              <p>\n                <strong>Due Date:</strong> {selectedTask.due_date}\n              </p>\n              <p>\n                <strong>Priority:</strong> {selectedTask.priority}\n              </p>\n              <p>\n                <strong>Category:</strong> {selectedTask.category}\n              </p>\n              <p>\n                <strong>Status:</strong> {selectedTask.status}\n              </p>\n              <p>\n                <strong>Is Overdue:</strong>{\" \"}\n                {selectedTask.is_overdue ? \"Yes\" : \"No\"}\n              </p>\n              <p>\n                <strong>Public:</strong> {selectedTask.is_public ? \"Yes\" : \"No\"}\n              </p>\n              {selectedTask.image && (\n                <div>\n                  <p>\n                    <strong>Image:</strong>\n                  </p>\n                  <Image src={selectedTask.image} alt=\"Task\" fluid />\n                </div>\n              )}\n            </>\n          )}\n          {windowWidth <= 797 && <p>Task list of this day.</p>}\n        </Modal.Body>\n        <Modal.Footer className={styles.calendarModalFooter}>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowModal(false)}\n            className={styles.closeButton}\n          >\n            Close\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={() => handleEditRedirect(selectedTask.id)}\n            className={styles.editButton}\n          >\n            Edit Task\n          </Button>\n          <Button\n            variant=\"danger\"\n            onClick={() => handleDelete(selectedTask.id)}\n            className={styles.deleteButton}\n          >\n            Delete Task\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n      {/* Task list modal */}\n      <Modal\n        show={showTaskListModal}\n        onHide={() => setShowTaskListModal(false)}\n        className={styles.taskListModal}\n      >\n        <Modal.Header closeButton className={styles.taskListModalHeader}>\n          <Modal.Title>\n            Tasks on {selectedDate ? selectedDate.toDateString() : \"\"}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={styles.taskListModalBody}>\n          {selectedDate && (\n            <ul className={styles.ulTaskList}>\n              {tasks\n                .filter(\n                  (task) =>\n                    new Date(task.due_date).toDateString() ===\n                    selectedDate.toDateString()\n                )\n                .map((task) => (\n                  <li key={task.id} className={styles.taskListItem}>\n                    <Link to={`/tasks/${task.id}`} className={styles.taskLink}>\n                      <strong>{truncateText(task.title)}</strong>\n                    </Link>\n                    <div className={styles.buttonGroup}>\n                      <Button\n                        variant=\"warning\"\n                        size=\"sm\"\n                        className={styles.editButton}\n                        onClick={() => handleEditRedirect(task.id)}\n                      >\n                        Edit\n                      </Button>\n                      <Button\n                        variant=\"danger\"\n                        size=\"sm\"\n                        className={styles.deleteButton}\n                        onClick={() => handleDelete(task.id)}\n                      >\n                        Delete\n                      </Button>\n                    </div>\n                  </li>\n                ))}\n            </ul>\n          )}\n        </Modal.Body>\n        <Modal.Footer className={styles.taskListModalFooter}>\n          <Button\n            variant=\"secondary\"\n            onClick={() => setShowTaskListModal(false)}\n            className={styles.closeButton}\n          >\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </Container>\n  );\n};\n\nexport default MyCalendar;\n","export default __webpack_public_path__ + \"static/media/upload.327ce923.png\";","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport styles from \"../styles/Asset.module.css\";\n\n// Asset component\nconst Asset = ({ spinner, src, message }) => {\n  return (\n    <div className={`${styles.Asset} p-4`}>\n      {spinner && <Spinner animation=\"border\" />}\n      {src && <img src={src} alt={message} />}\n      {message && <p className=\"mt-4\">{message}</p>}\n    </div>\n  );\n};\n\nexport default Asset;\n","import React, { useRef, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { Alert, Image } from \"react-bootstrap\";\n\nimport Upload from \"../../assets/upload.png\";\n\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport Asset from \"../../components/Asset\";\nimport { useHistory } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\nfunction TaskCreateForm({ setTasks }) {\n  // Redirect user if not logged in\n  useRedirect(\"loggedOut\");\n  // State to manage form errors\n  const [errors, setErrors] = useState({});\n\n  // State for managing task data\n  const [taskData, setTaskData] = useState({\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    due_date: \"\",\n    is_overdue: false,\n    is_public: false,\n    priority: \"medium\",\n    category: \"other\",\n    status: \"open\",\n  });\n  const {\n    title,\n    content,\n    image,\n    due_date,\n    priority,\n    category,\n    status,\n    is_overdue,\n    is_public,\n  } = taskData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    setTaskData({\n      ...taskData,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let newErrors = {};\n\n    // Validation for required fields\n    if (!title.trim()) newErrors.title = [\"This field is required.\"];\n    if (!content.trim()) newErrors.content = [\"This field is required.\"];\n    if (!due_date.trim()) newErrors.due_date = [\"This field is required.\"];\n\n    // If any issue, updated 'errors' and abort submission\n    if (Object.keys(newErrors).length) {\n      setErrors(newErrors);\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    if (imageInput.current && imageInput.current.files[0]) {\n      formData.append(\"image\", imageInput.current.files[0]);\n    }\n    formData.append(\"due_date\", due_date);\n    formData.append(\"priority\", priority);\n    formData.append(\"category\", category);\n    formData.append(\"status\", status);\n    formData.append(\"is_overdue\", is_overdue);\n    formData.append(\"is_public\", is_public);\n\n    try {\n      const { data } = await axiosReq.post(\"/tasks/\", formData);\n      setTasks((prevTasks) => [...prevTasks, data]);\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n      if (err.response?.status !== 401) setErrors(err.response?.data);\n    }\n  };\n\n  const textFields = (\n    <div className={styles.taskFormDiv}>\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Form.Group>\n        <Form.Label>Content</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"textarea\"\n          rows={3}\n          name=\"content\"\n          value={content}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Form.Group>\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          type=\"date\"\n          name=\"due_date\"\n          value={due_date}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.due_date?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Form.Group>\n        <Form.Label>Priority</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"priority\"\n          value={priority}\n          onChange={handleChange}\n        >\n          <option value=\"urgent\">🔴 Urgent</option>\n          <option value=\"high\">🟡 High Priority</option>\n          <option value=\"medium\">🟢 Medium Priority</option>\n          <option value=\"low\">🔵 Low Priority</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Category</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"category\"\n          value={category}\n          onChange={handleChange}\n        >\n          <option value=\"work\">Work</option>\n          <option value=\"personal\">Personal</option>\n          <option value=\"other\">Other</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group>\n        <Form.Label>Status</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"status\"\n          value={status}\n          onChange={handleChange}\n        >\n          <option value=\"open\">Open</option>\n          <option value=\"in_progress\">In Progress</option>\n          <option value=\"done\">Done</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Overdue\"\n          name=\"is_overdue\"\n          checked={is_overdue}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Form.Group>\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Public\"\n          name=\"is_public\"\n          checked={is_public}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <div className=\"text-center\">\n        <Button\n          className={`${btnStyles.Button} ${btnStyles.Dark} btn my-auto`}\n          onClick={() => history.goBack()}\n        >\n          cancel\n        </Button>\n        <Button\n          className={`${btnStyles.Button} ${btnStyles.Green} btn my-auto`}\n          type=\"submit\"\n        >\n          create\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit} className={styles.taskForm}>\n      <Row>\n        <Col className=\"py-2 p-0 p-md-2\" md={7} lg={8}>\n          <Container\n            className={`${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image && (\n                <>\n                  <figure>\n                    {image && (\n                      <Image className={appStyles.Image} src={image} rounded />\n                    )}\n                  </figure>\n\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} ${btnStyles.Dark} btn`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Change the image\n                    </Form.Label>\n                  </div>\n                </>\n              )}\n              {!image && (\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset src={Upload} message=\"Click to upload image\" />\n                </Form.Label>\n              )}\n\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n              />\n            </Form.Group>\n            {errors?.image?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n\n        <Col md={5} lg={4} className=\"d-none d-md-block p-0 p-md-2\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default TaskCreateForm;\n","import React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport styles from \"../styles/MoreDropdown.module.css\";\nimport { useHistory } from \"react-router-dom\";\n\n// Dropdown for editing user Account\n\nexport function AccountEditDropdown({ id }) {\n  const history = useHistory();\n  return (\n    <Dropdown className={`ml-auto px-3 ${styles.Absolute}`} drop=\"left\">\n      <Dropdown.Toggle as={DotsDropDown} />\n      <Dropdown.Menu className={`text-center ${styles.AccountDropdown}`}>\n        <Dropdown.Item\n          className={styles.Item}\n          onClick={() => history.push(`/accounts/${id}/edit`)}\n          aria-label=\"manage-account\"\n        >\n          <i className={`fas fa-edit ${styles.ItemIcon}`} />{\" \"}\n          <span className={styles.ItemText}>manage account</span>\n        </Dropdown.Item>\n        <Dropdown.Item\n          className={styles.Item}\n          onClick={() => history.push(`/accounts/${id}/edit/username`)}\n          aria-label=\"edit-username\"\n        >\n          <i className={`far fa-id-card ${styles.ItemIcon}`} />\n          <span className={styles.ItemText}>change username</span>\n        </Dropdown.Item>\n        <Dropdown.Item\n          className={styles.Item}\n          onClick={() => history.push(`/accounts/${id}/edit/password`)}\n          aria-label=\"edit-password\"\n        >\n          <i className={`fas fa-key ${styles.ItemIcon}`} />\n          <span className={styles.ItemText}>change password</span>\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\n// Dropdown for Edit/Delete Tasks and Comments\n\nconst DotsDropDown = React.forwardRef(({ onClick }, ref) => (\n  <i\n    className={`fa-solid fa-ellipsis-vertical ${styles.DotsIcon}`}\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  />\n));\n\nexport const MoreDropdown = ({ handleEdit, handleDelete }) => {\n  return (\n    <Dropdown className=\"ml-auto\" drop=\"left\">\n      <Dropdown.Toggle as={DotsDropDown} />\n\n      <Dropdown.Menu\n        className={`text-center ${styles.CommentDropdownMenu}`}\n        popperConfig={{ strategy: \"fixed\" }}\n      >\n        <Dropdown.Item\n          className={styles.DropdownItem}\n          onClick={handleEdit}\n          aria-label=\"edit\"\n        >\n          <i\n            className={`fa-solid fa-pen-to-square ${styles.MoreDropdownIcon}`}\n          />{\" \"}\n        </Dropdown.Item>\n        <Dropdown.Item\n          className={styles.DropdownItem}\n          onClick={handleDelete}\n          aria-label=\"delete\"\n        >\n          <i className={`fas fa-trash-alt ${styles.MoreDropdownIcon}`} />{\" \"}\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styles from \"../../styles/Task.module.css\";\nimport Card from \"react-bootstrap/Card\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\nimport { MoreDropdown } from \"../../components/MoreDropdown\";\nimport Media from \"react-bootstrap/Media\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\n\nconst Task = (props) => {\n  const {\n    id,\n    owner,\n    updated_at,\n    title,\n    content,\n    image,\n    due_date,\n    onTaskDelete,\n    is_public,\n  } = props;\n\n  const currentUser = useContext(CurrentUserContext);\n  const is_owner = currentUser?.username === owner;\n  const history = useHistory();\n  const dueDateObj = new Date(due_date);\n\n  // Format due date\n  const formattedDueDate = dueDateObj.toLocaleDateString(\"en-US\", {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  // Handle editing and redirecting\n  const handleEdit = () => {\n    history.push(`/tasks/${id}/edit`);\n  };\n\n  // Handles deletion of task\n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/tasks/${id}/`);\n      onTaskDelete(id);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <Card className={styles.Task}>\n      <Card.Body\n        className={`${styles.TitleSection} d-flex justify-content-between`}\n      >\n        <div className={`d-flex align-items-center ${styles.TitleContainer}`}>\n          {is_public && (\n            <div className={styles.PublicInfo}>\n              <i className={`fa-solid fa-users ${styles.PublicIcon}`} />\n              <span className={styles.PublicText}>public</span>\n            </div>\n          )}\n          {title && (\n            <Link to={`/tasks/${id}`} className={styles.taskTitleLink}>\n              <Card.Title className={styles.taskTitle}>{title}</Card.Title>\n            </Link>\n          )}\n        </div>\n\n        <div\n          className={`d-flex align-items-center ${styles.DateAndDropdownContainer}`}\n        >\n          <span className={styles.creationDate}>{updated_at}</span>\n          {is_owner && (\n            <div className=\"ml-2\">\n              <MoreDropdown\n                handleEdit={handleEdit}\n                handleDelete={handleDelete}\n              />\n            </div>\n          )}\n        </div>\n      </Card.Body>\n\n      <Link to={`/tasks/${id}`} className={styles.ImageSection}>\n        {image && <Card.Img src={image} alt={title} />}\n      </Link>\n\n      <Card.Body className={styles.ContentSection}>\n        <Media className=\"align-items-center justify-content-between\">\n          <div className=\"d-flex align-items-center\">{content}</div>\n        </Media>\n      </Card.Body>\n      <Card.Body className={styles.FooterSection}>\n        <p className={styles.DueDateP}>\n          Due date:{\" \"}\n          <span className={styles.DueDateSpan}>{formattedDueDate}</span>\n        </p>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Task;\n","import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport styles from \"../../styles/TaskCommentEditForm.module.css\";\n\nfunction TaskCommentEditForm(props) {\n  const { id, taskId, content, setShowEditForm, setComments } = props;\n\n  // state to manage content of the form\n  const [formContent, setFormContent] = useState(content);\n\n  // Event handler for changes in the form input\n  const handleChange = (event) => {\n    setFormContent(event.target.value);\n  };\n\n  // Event handler for form submission\n  const handleSubmit = async (event) => {\n    // Prevents the default form submission behaviour\n    event.preventDefault();\n\n    // Trim content to remove trailing whitespaces\n    const trimmedContent = formContent.trim();\n\n    // Check if trimmed content is empty and logs an error if true\n    if (!trimmedContent) {\n      console.error(\"Comment content cannot be empty.\");\n      return;\n    }\n\n    try {\n      // Sends a PUT request to update the comment with the new content\n      await axiosRes.put(`/comments/${id}/`, {\n        task: taskId,\n        content: trimmedContent,\n      });\n\n      // Updates the comments state with the new comment content\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.map((comment) =>\n          comment.id === id ? { ...comment, content: trimmedContent } : comment\n        ),\n      }));\n\n      // Closes the edit form\n      setShowEditForm(false);\n    } catch (err) {\n      // Logs an error message if the update operation fails\n      console.error(\"Error updating comment:\", err.response.data);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group className=\"pr-1\">\n        <Form.Control\n          className={styles.Form}\n          as=\"textarea\"\n          value={formContent}\n          onChange={handleChange}\n          rows={2}\n        />\n      </Form.Group>\n      <div className=\"text-right\">\n        <button\n          className={styles.BtnCancel}\n          onClick={() => setShowEditForm(false)}\n          type=\"button\"\n        >\n          cancel\n        </button>\n        <button\n          className={styles.BtnSave}\n          disabled={!formContent.trim()}\n          type=\"submit\"\n        >\n          save\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default TaskCommentEditForm;\n","import React, { useState } from \"react\";\nimport { Media } from \"react-bootstrap\";\nimport Avatar from \"../../components/Avatar\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport styles from \"../../styles/TaskComment.module.css\";\nimport { Link } from \"react-router-dom\";\nimport { MoreDropdown } from \"../../components/MoreDropdown\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport TaskCommentEditForm from \"./TaskCommentEditForm\";\n\nconst TaskComment = (props) => {\n  const {\n    account_id,\n    account_image,\n    created_at,\n    content,\n    author,\n    setTask,\n    setComments,\n    id,\n  } = props;\n\n  const [showEditForm, setShowEditForm] = useState(false);\n  const currentUser = useCurrentUser();\n  const is_owner = currentUser?.username === author;\n  const taskId = props.task;\n\n  // Delete comments \n  const handleDelete = async () => {\n    try {\n      await axiosRes.delete(`/comments/${id}/`);\n      setTask((prevTask) => ({\n        results: [\n          {\n            ...(prevTask.results[0]),\n          },\n        ],\n      }));\n\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: prevComments.results.filter((comment) => comment.id !== id),\n      }));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <hr />\n      <div className={styles.CommentForm}>\n        <Media>\n          <Link to={`/accounts/${account_id}`} className=\"mt-1\">\n            <Avatar src={currentUser?.account_image} height={25} />\n          </Link>\n          <Media.Body className=\"mb-1 align-self-center ml-2\">\n            <h6 className={styles.Owner}>{author}</h6>\n            <p>{content}</p>\n            {showEditForm ? (\n              <TaskCommentEditForm\n                id={id}\n                taskId={taskId}\n                content={content}\n                accountImage={account_image}\n                setComments={setComments}\n                setShowEditForm={setShowEditForm}\n              />\n            ) : (\n              <small className={styles.Date}>{created_at}</small>\n            )}\n          </Media.Body>\n          {is_owner && !showEditForm && (\n            <MoreDropdown\n              handleEdit={() => setShowEditForm(true)}\n              handleDelete={handleDelete}\n            />\n          )}\n        </Media>\n      </div>\n      <hr />\n    </>\n  );\n};\n\nexport default TaskComment;\n","import React, { useState } from \"react\";\nimport { Form, InputGroup, Button, Row, Container, Col } from \"react-bootstrap\";\nimport Avatar from \"../../components/Avatar\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport styles from \"../../styles/TaskComment.module.css\";\n\n// TaskCommentCreateForm for creating comments on tasks\nconst TaskCommentCreateForm = ({ taskId, setComments }) => {\n  // managing the content of the comment\n  const [content, setContent] = useState(\"\");\n  // access the current user data\n  const currentUser = useCurrentUser();\n\n  // Handle changes in the comment input field\n  const handleChange = (e) => setContent(e.target.value);\n\n  // Handle submission of the comment form\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents default form submission actiom\n    try {\n      // POST request to create new comment with task ID and content\n      const { data } = await axiosRes.post(\"/comments/\", {\n        content,\n        task: taskId,\n      });\n      // Update state to include new comment in the comments list\n      setComments((prevComments) => ({\n        ...prevComments,\n        results: [data, ...prevComments.results],\n      }));\n      // Clear the content field after successful submission\n      setContent(\"\");\n    } catch (err) {\n      // Log any errors that occur during the submission\n      console.log(err);\n    }\n  };\n\n  return (\n    <Container className={styles.CommentForm}>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col sm={12} md={11} className=\"pr-md-2 mt-1\">\n            <InputGroup>\n              <Avatar\n                src={currentUser?.account_image}\n                height={25}\n                className=\"mr-2\"\n              />\n              <Form.Control\n                as=\"textarea\"\n                value={content}\n                onChange={handleChange}\n                rows={2}\n                placeholder=\"Write a comment...\"\n                className={`${styles.InputFieldComments} mb-1 mt-1`}\n                style={{ borderRadius: \"3px\" }}\n              />\n            </InputGroup>\n          </Col>\n          <Col sm={12} md={1} className=\"pl-md-0 d-flex justify-content-end\">\n            <Button\n              type=\"submit\"\n              disabled={!content.trim()}\n              className={`${styles.PostCommentBtn} mt-2 mt-md-0`}\n            >\n              Post\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default TaskCommentCreateForm;\n","import { axiosReq } from \"../api/axiosDefaults\";\n\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, cur) => {\n        return acc.some((accResult) => accResult.id === cur.id)\n          ? acc\n          : [...acc, cur];\n      }, prevResource.results),\n    }));\n  } catch (err) {}\n};\n","import React, { useEffect, useState } from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport { useParams } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport Task from \"./Task\";\nimport TaskComment from \"./TaskComment\";\nimport TaskCommentCreateForm from \"./TaskCommentCreateForm\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport styles from \"../../styles/TaskPage.module.css\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Asset from \"../../components/Asset\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\n// TaskPage to display a specific task and its comments\nfunction TaskPage() {\n  // Redirects logged out users\n  useRedirect(\"loggedOut\");\n  const { id } = useParams();\n  const [task, setTask] = useState({ results: [] });\n  // State to hold comments associated with the task\n  const [comments, setComments] = useState({ results: [] });\n  // Retrieves current user information\n  const currentUser = useCurrentUser();\n\n  // Boolean to check if the task data is loaded\n  const isDataLoaded = task.results && task.results.length > 0;\n  // Extract first task data if loaded, else null\n  const taskData = isDataLoaded ? task.results[0] : null;\n  // Check if current user is the owner of the task\n  const isOwner = taskData && currentUser?.username === taskData.owner;\n  // Check if the task is public\n  const isPublicTask = taskData && taskData.is_public;\n\n  // Clear task data from the state\n  const removeTaskFromState = () => {\n    setTask({ results: [] });\n  };\n\n  // Fetch task and comments data when the component mounts or the ID changes\n  useEffect(() => {\n    const fetchTaskAndComments = async () => {\n      try {\n        // Fetches task and comments data from the server using the task ID\n        const [{ data: taskResponse }, { data: commentsResponse }] =\n          await Promise.all([\n            axiosReq.get(`/tasks/${id}`),\n            axiosReq.get(`/comments/?task_id=${id}`),\n          ]);\n\n        // Set fetched task and comments data to their respective states\n        setTask({ results: [taskResponse] });\n        setComments(commentsResponse);\n      } catch (err) {\n        // Logs the error if the fetching fails\n        console.log(err);\n      }\n    };\n\n    // Calls the fetch function\n    fetchTaskAndComments();\n  }, [id]);\n\n  return (\n    <Row className=\"h-100\">\n      <Col className=\"py-2 p-0 p-lg-2\" lg={10}>\n        {isDataLoaded && (\n          <>\n            <Task\n              {...taskData}\n              setTasks={setTask}\n              taskPage\n              removeTask={removeTaskFromState}\n            />\n            <Container className={styles.CommentContainer}>\n              {(isPublicTask || isOwner) && (\n                <TaskCommentCreateForm taskId={id} setComments={setComments} />\n              )}\n              <InfiniteScroll\n                dataLength={comments.results.length}\n                next={() => fetchMoreData(comments, setComments)}\n                hasMore={!!comments.next}\n                loader={<Asset spinner />}\n              >\n                {comments.results.map((comment) => (\n                  <TaskComment\n                    key={comment.id}\n                    {...comment}\n                    setTask={setTask}\n                    setComments={setComments}\n                    task={id}\n                  />\n                ))}\n              </InfiniteScroll>\n            </Container>\n          </>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default TaskPage;\n","export default __webpack_public_path__ + \"static/media/no-results.055a1c0b.png\";","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useCurrentUser } from \"./CurrentUserContext\";\nimport { axiosReq } from \"../api/axiosDefaults\";\n\n// Context to share account data through components\nexport const AccountDataContext = createContext();\nexport const SetAccountDataContext = createContext();\n\n// Custom hooks for easy access to context\nexport const useAccountData = () => useContext(AccountDataContext);\nexport const useSetAccountData = () => useContext(SetAccountDataContext);\n\n// Wrap children components and provide them with account data\nexport const AccountDataProvider = ({ children }) => {\n  const [accountData, setAccountData] = useState({\n    pageAccount: { results: [] },\n    newestAccounts: { results: [] },\n  });\n\n  // Access current user data\n  const currentUser = useCurrentUser();\n\n  // Fetch and set account data when component mounts or currentUser changes\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        // Fetching newest account data\n        const { data } = await axiosReq.get(\"/accounts/?ordering=-created_at\");\n        // Updating state with fetched data\n        setAccountData((prevState) => ({\n          ...prevState,\n          newestAccounts: data,\n        }));\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    handleMount();\n  }, [currentUser]);\n\n  // Provide accountData and setAccountData to children component\n  return (\n    <AccountDataContext.Provider value={accountData}>\n      <SetAccountDataContext.Provider value={setAccountData}>\n        {children}\n      </SetAccountDataContext.Provider>\n    </AccountDataContext.Provider>\n  );\n};\n","import React from \"react\";\nimport styles from \"../../styles/Account.module.css\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar\";\n\n// Account component\nconst Account = (props) => {\n  // Destructuring props to extract 'account', 'mobile', and 'imageSize' with default value\n  const { account, mobile, imageSize = 45 } = props;\n  // Ddestructuring 'account' to get 'id', 'image' and 'owner'\n  const { id, image, owner } = account;\n\n  return (\n    <div\n      className={`my-3 d-flex align-items-center ${mobile && \"flex-column\"}`}\n    >\n      <div>\n        <Link className=\"align-self-center\" to={`/accounts/${id}`}>\n          <Avatar src={image} height={imageSize} />\n        </Link>\n      </div>\n      <div className={`mx-2 ${styles.WordBreak}`}>\n        <Link className=\"align-self-center\" to={`/accounts/${id}`}>\n          <strong>{owner}</strong>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Account;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"../../styles/NewestAccounts.module.css\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport { useAccountData } from \"../../contexts/AccountDataContext\";\nimport Asset from \"../../components/Asset\";\nimport Account from \"./Account\";\n\nconst NewestAccounts = ({ mobile }) => {\n  const { newestAccounts } = useAccountData();\n  const [displayedAccounts, setDisplayedAccounts] = useState([]);\n\n  useEffect(() => {\n    if (newestAccounts.results) {\n      // Sort by created_at in descending order\n      const sortedAccounts = [...newestAccounts.results].sort(\n        (a, b) =>\n          new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n      );\n\n      // Determine nr of accounts to display based on screen size\n      const numAccountsToShow = mobile ? 3 : 5;\n      setDisplayedAccounts(sortedAccounts.slice(0, numAccountsToShow));\n    }\n  }, [newestAccounts, mobile]);\n\n  // Adjusted column sizes for different screen sizes\n  const columnSize = mobile ? 4 : 12;\n\n  return (\n    <Container\n      className={`${styles.NewestAccounts} ${\n        mobile ? \"d-lg-none text-center mb-3\" : \"\"\n      }`}\n    >\n      {displayedAccounts.length ? (\n        <>\n          <p className={styles.NewestUsersP}>Newest Users</p>\n          <Row className={`${mobile ? styles.NewestAccountsMobile : \"\"}`}>\n            {displayedAccounts.map((account) => (\n              <Col key={account.id} xs={columnSize} className=\"mb-3\">\n                <Account account={account} mobile={mobile} />\n              </Col>\n            ))}\n          </Row>\n        </>\n      ) : (\n        <Asset spinner />\n      )}\n    </Container>\n  );\n};\n\nexport default NewestAccounts;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Task from \"./Task\";\nimport Asset from \"../../components/Asset\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\n\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/TasksPage.module.css\";\nimport { useLocation } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport NoResults from \"../../assets/no-results.png\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { fetchMoreData } from \"../../utils/utils\";\nimport NewestAccounts from \"../accounts/NewestAccounts\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\n// TasksPage component, accepting props for an optional message and filter\nfunction TasksPage({ message, filter = \"\" }) {\n  // Redirect user if not logged in\n  useRedirect(\"loggedOut\");\n\n  // State for storing tasks and loading status\n  const [tasks, setTasks] = useState({ results: [] });\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  // Get current location path\n  const { pathname } = useLocation();\n\n  // Access current user information from context\n  const currentUser = useContext(CurrentUserContext);\n\n  // State to store search query\n  const [query, setQuery] = useState(\"\");\n\n  // remove task from the list by it ID\n  const removeTaskFromList = (taskId) => {\n    setTasks((prevTasks) => ({\n      ...prevTasks,\n      results: prevTasks.results.filter((task) => task.id !== taskId),\n    }));\n  };\n\n  // Fetch tasks when dependencies change\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        // Check if a user is logged in\n        const username = currentUser?.username;\n        if (!username) {\n          console.error(\"No logged-in user found!\");\n          return; // Exit if no user is found\n        }\n\n        // Fetch tasks data from the API\n        const { data } = await axiosReq.get(\n          `/tasks/?owner__username=${username}&${filter}search=${query}`\n        );\n\n        // Update state with fetched tasks and set loading status\n        setTasks(data);\n        setHasLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    // Reset loading state and set a timer to delay the fetch\n    setHasLoaded(false);\n    const timer = setTimeout(() => {\n      fetchTasks();\n    }, 1000); // Delayed fetch\n\n    // Cleanup function to clear the timer\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [filter, query, pathname, currentUser]);\n\n  return (\n    <Row className=\"h-100\">\n      <Col className=\"py-2 p-0 p-lg-2\" lg={8}>\n        <NewestAccounts mobile />\n        <i className={`fa-solid fa-magnifying-glass ${styles.SearchIcon}`} />\n        <Form\n          className={styles.SearchBar}\n          onSubmit={(event) => event.preventDefault()}\n        >\n          <Form.Control\n            value={query}\n            onChange={(event) => setQuery(event.target.value)}\n            type=\"text\"\n            className=\"mr-sm-2\"\n            placeholder=\"Search tasks\"\n          />\n        </Form>\n        {hasLoaded ? (\n          <>\n            {tasks.results.length ? (\n              <InfiniteScroll\n                children={tasks.results.map((task) => (\n                  <Task\n                    key={task.id}\n                    {...task}\n                    setTasks={setTasks}\n                    onTaskDelete={removeTaskFromList}\n                  />\n                ))}\n                dataLength={tasks.results.length}\n                loader={<Asset spinner />}\n                hasMore={!!tasks.next}\n                next={() => fetchMoreData(tasks, setTasks)}\n              />\n            ) : (\n              <Container className={appStyles.Content}>\n                <Asset src={NoResults} message={message} />\n                <p>No tasks created yet</p>\n              </Container>\n            )}\n          </>\n        ) : (\n          <Container className={appStyles.Content}>\n            <Asset spinner />\n          </Container>\n        )}\n      </Col>\n      <Col md={4} className=\"d-none d-lg-block p-0 p-lg-2\">\n        <NewestAccounts />\n      </Col>\n    </Row>\n  );\n}\n\nexport default TasksPage;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { Alert, Image } from \"react-bootstrap\";\nimport Asset from \"../../components/Asset\";\n\nimport Upload from \"../../assets/upload.png\";\n\nimport styles from \"../../styles/TaskCreateEditForm.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport btnStyles from \"../../styles/Button.module.css\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\n\nfunction TaskEditForm({ setTasks }) {\n  const [errors, setErrors] = useState({});\n\n  const [taskData, setTaskData] = useState({\n    title: \"\",\n    content: \"\",\n    image: \"\",\n    due_date: \"\",\n    is_overdue: false,\n    is_public: false,\n    priority: \"medium\",\n    category: \"other\",\n    status: \"open\",\n  });\n  const {\n    title,\n    content,\n    image,\n    due_date,\n    priority,\n    category,\n    status,\n    is_overdue,\n    is_public,\n  } = taskData;\n\n  const imageInput = useRef(null);\n  const history = useHistory();\n  const { id } = useParams();\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchTaskData = async () => {\n      try {\n        const { data } = await axiosReq.get(`/tasks/${id}/`);\n        setTaskData(data);\n        setHasLoaded(true); // Set hasLoaded to true after data is fetched\n      } catch (err) {\n        console.error(\"Failed to fetch task data:\", err);\n        setHasLoaded(true); // Set hasLoaded to true even if there is an error\n      }\n    };\n\n    fetchTaskData();\n  }, [id]); // Re-run when id changes\n\n  if (!hasLoaded) {\n    return (\n      <Container className={appStyles.Content}>\n        <Asset spinner />{\" \"}\n      </Container>\n    );\n  }\n  if (errors.form) {\n    return (\n      <Container className={appStyles.Content}>\n        <Alert variant=\"danger\">{errors.form}</Alert>\n      </Container>\n    );\n  }\n\n  const handleChange = (event) => {\n    const { name, value, type, checked } = event.target;\n    setTaskData({\n      ...taskData,\n      [name]: type === \"checkbox\" ? checked : value,\n    });\n  };\n\n  const handleChangeImage = (event) => {\n    if (event.target.files.length) {\n      URL.revokeObjectURL(image);\n      setTaskData({\n        ...taskData,\n        image: URL.createObjectURL(event.target.files[0]),\n      });\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let newErrors = {};\n\n    // If any issue, updated 'errors' and abort submission\n    if (Object.keys(newErrors).length) {\n      setErrors(newErrors);\n      return;\n    }\n\n    const formData = new FormData();\n\n    formData.append(\"title\", title);\n    formData.append(\"content\", content);\n    if (imageInput.current && imageInput.current.files[0]) {\n      formData.append(\"image\", imageInput.current.files[0]);\n    }\n    formData.append(\"due_date\", due_date);\n    formData.append(\"priority\", priority);\n    formData.append(\"category\", category);\n    formData.append(\"status\", status);\n    formData.append(\"is_overdue\", is_overdue);\n    formData.append(\"is_public\", is_public);\n\n    try {\n      const { data } = await axiosReq.put(`/tasks/${id}/`, formData);\n      setTasks((prevTasks) =>\n        prevTasks.map((task) => (task.id === data.id ? data : task))\n      );\n      history.push(\"/\");\n    } catch (err) {\n      console.log(err);\n      if (err.response?.status !== 401) setErrors(err.response?.data);\n    }\n  };\n\n  const textFields = (\n    <div className={styles.taskFormDiv}>\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          type=\"text\"\n          name=\"title\"\n          value={taskData.title || \"\"}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Content</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"textarea\"\n          rows={3}\n          name=\"content\"\n          value={taskData.content || \"\"}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Due Date</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          type=\"date\"\n          name=\"due_date\"\n          value={taskData.due_date || \"\"}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      {errors?.due_date?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Priority</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"priority\"\n          value={taskData.priority || \"\"}\n          onChange={handleChange}\n        >\n          <option value=\"urgent\">🔴 Urgent</option>\n          <option value=\"high\">🟡 High Priority</option>\n          <option value=\"medium\">🟢 Medium Priority</option>\n          <option value=\"low\">🔵 Low Priority</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Category</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"category\"\n          value={taskData.category || \"\"}\n          onChange={handleChange}\n        >\n          <option value=\"work\">Work</option>\n          <option value=\"personal\">Personal</option>\n          <option value=\"other\">Other</option>\n        </Form.Control>\n      </Form.Group>\n\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Label>Status</Form.Label>\n        <Form.Control\n          className={styles.formPlaceholder}\n          as=\"select\"\n          name=\"status\"\n          value={taskData.status || \"\"}\n          onChange={handleChange}\n        >\n          <option value=\"open\">Open</option>\n          <option value=\"in_progress\">In Progress</option>\n          <option value=\"done\">Done</option>\n        </Form.Control>\n      </Form.Group>\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Overdue\"\n          name=\"is_overdue\"\n          checked={taskData.is_overdue}\n          onChange={handleChange}\n        />\n      </Form.Group>\n      <Form.Group className={styles.formGroupCustom}>\n        <Form.Check\n          type=\"checkbox\"\n          label=\"Public\"\n          name=\"is_public\"\n          checked={taskData.is_public}\n          onChange={handleChange}\n        />\n      </Form.Group>\n\n      <div className=\"text-center\">\n        <Button\n          className={`${btnStyles.Button} ${btnStyles.Dark} btn my-auto`}\n          onClick={() => history.goBack()}\n        >\n          cancel\n        </Button>\n        <Button\n          className={`${btnStyles.Button} ${btnStyles.Green} btn my-auto`}\n          type=\"submit\"\n        >\n          save\n        </Button>\n      </div>\n    </div>\n  );\n\n  return (\n    <Form onSubmit={handleSubmit} className={styles.taskForm}>\n      <Row>\n        <Col className=\"py-2 p-0 p-md-2\" md={7} lg={8}>\n          <Container\n            className={`${appStyles.Content} ${styles.Container} d-flex flex-column justify-content-center`}\n          >\n            <Form.Group className=\"text-center\">\n              {image && (\n                <>\n                  <figure>\n                    {image && (\n                      <Image className={appStyles.Image} src={image} rounded />\n                    )}\n                  </figure>\n\n                  <div>\n                    <Form.Label\n                      className={`${btnStyles.Button} ${btnStyles.Dark} btn my-auto`}\n                      htmlFor=\"image-upload\"\n                    >\n                      Change the image\n                    </Form.Label>\n                  </div>\n                </>\n              )}\n              {!image && (\n                <Form.Label\n                  className=\"d-flex justify-content-center\"\n                  htmlFor=\"image-upload\"\n                >\n                  <Asset src={Upload} message=\"Click to upload image\" />\n                </Form.Label>\n              )}\n\n              <Form.File\n                id=\"image-upload\"\n                accept=\"image/*\"\n                onChange={handleChangeImage}\n                ref={imageInput}\n              />\n            </Form.Group>\n            {errors?.image?.map((message, idx) => (\n              <Alert variant=\"warning\" key={idx}>\n                {message}\n              </Alert>\n            ))}\n            <div className=\"d-md-none\">{textFields}</div>\n          </Container>\n        </Col>\n\n        <Col md={5} lg={4} className=\"d-none d-md-block p-0 p-md-2\">\n          <Container className={appStyles.Content}>{textFields}</Container>\n        </Col>\n      </Row>\n    </Form>\n  );\n}\n\nexport default TaskEditForm;\n","import React, { useEffect, useState } from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nimport Asset from \"../../components/Asset\";\n\nimport styles from \"../../styles/AccountPage.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport { AccountEditDropdown } from \"../../components/MoreDropdown.js\";\n\nimport Task from \"../tasks/Task.js\";\nimport { fetchMoreData } from \"../../utils/utils.js\";\nimport NoResults from \"../../assets/no-results.png\";\n\nimport NewestAccounts from \"./NewestAccounts\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useParams } from \"react-router-dom\";\nimport { axiosReq } from \"../../api/axiosDefaults\";\nimport {\n  useAccountData,\n  useSetAccountData,\n} from \"../../contexts/AccountDataContext\";\nimport { Image } from \"react-bootstrap\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nfunction formatOwnerName(ownerName) {\n  if (!ownerName) return \"\";\n  return ownerName.toLowerCase().charAt(0).toUpperCase() + ownerName.slice(1);\n}\n\nfunction AccountPage() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [accountTasks, setAccountTasks] = useState({ results: [] });\n  const currentUser = useCurrentUser();\n  const { id } = useParams();\n  const setAccountData = useSetAccountData();\n  const { pageAccount } = useAccountData();\n  const [account] = pageAccount.results;\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch the account details of the visited account\n        const { data: visitedAccount } = await axiosReq.get(`/accounts/${id}/`);\n\n        // Add the tasks URL to fetch tasks of the visited account\n        let tasksUrl = `/tasks/?owner__username=${visitedAccount.owner}`;\n\n        // If the current user is not owner of account visited -\n        // only public tasks are fetched\n        if (currentUser?.username !== visitedAccount.owner) {\n          tasksUrl += \"&is_public=true\";\n        }\n\n        // Fetch the tasks based on the construct URL\n        const { data: accountTasks } = await axiosReq.get(tasksUrl);\n\n        // Update state with the fetched data\n        setAccountData((prevState) => ({\n          ...prevState,\n          pageAccount: { results: [visitedAccount] },\n        }));\n        setAccountTasks(accountTasks);\n        setHasLoaded(true);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchData();\n  }, [id, setAccountData, currentUser]);\n\n  const mainAccount = (\n    <>\n      {account?.is_owner && <AccountEditDropdown id={account?.id} />}\n      <Row noGutters className=\"px-3 text-center\">\n        <Col lg={3} className=\"text-lg-left\">\n          <Image\n            className={styles.AccountImage}\n            roundedCircle\n            src={account?.image}\n          />\n        </Col>\n        <Col lg={6}>\n          <h3 className={`${styles.UsernameHeader} m-2`}>\n            {formatOwnerName(account?.owner)}\n          </h3>\n        </Col>\n        {account?.content && (\n          <Col xs={12} md={12} className={`${styles.BioContent} p-3`}>\n            {account.content}\n          </Col>\n        )}\n      </Row>\n    </>\n  );\n\n  const mainAccountTasks = (\n    <>\n      <hr className={styles.CustomHR} />\n      <p className={`${styles.OwnersTasks} text-center`}>\n        {formatOwnerName(account?.owner)}'s tasks\n      </p>\n      {accountTasks.results.length ? (\n        <InfiniteScroll\n          children={accountTasks.results.map((task) => (\n            <Task key={task.id} {...task} setTasks={setAccountTasks} />\n          ))}\n          dataLength={accountTasks.results.length}\n          loader={<Asset spinner />}\n          hasMore={!!accountTasks.next}\n          next={() => fetchMoreData(accountTasks, setAccountTasks)}\n        />\n      ) : (\n        <Row className=\"justify-content-center\">\n          <Col xs={12} sm={12} md={12} className={styles.NoTasks}>\n            <Asset\n              src={NoResults}\n              message={`${formatOwnerName(\n                account?.owner\n              )} has no public tasks.`}\n            />\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n\n  return (\n    <Row>\n      <Col className=\"py-2 p-0 p-lg-2\" lg={8}>\n        <NewestAccounts mobile />\n        <Container className={appStyles.Content}>\n          {hasLoaded ? (\n            <>\n              {mainAccount}\n              {mainAccountTasks}\n            </>\n          ) : (\n            <Asset spinner />\n          )}\n        </Container>\n      </Col>\n      <Col lg={4} className=\"d-none d-lg-block p-0 p-lg-2\">\n        <NewestAccounts />\n      </Col>\n    </Row>\n  );\n}\n\nexport default AccountPage;\n","import React, { useEffect, useState } from \"react\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport {\n  useCurrentUser,\n  useSetCurrentUser,\n} from \"../../contexts/CurrentUserContext\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/UsernamePasswordForm.module.css\";\n\n// Form to change username\nconst UsernameForm = () => {\n  // Redirects if the user is not logged in\n  useRedirect(\"loggedOut\");\n  // useState hook to manage username and form errors.\n  const [username, setUsername] = useState(\"\");\n  const [errors, setErrors] = useState({});\n\n  // useHistory hook for programmatic navigation.\n  const history = useHistory();\n  // useParams hook to access the user ID from the URL.\n  const { id } = useParams();\n\n  // Accessing the current user context\n  const currentUser = useCurrentUser();\n  // update the current user context\n  const setCurrentUser = useSetCurrentUser();\n\n  // runs when the component mount or dependencies update\n  useEffect(() => {\n    // Checks if the current user ID matches the ID inURL\n    if (currentUser?.account_id?.toString() === id) {\n      setUsername(currentUser.username);\n    } else {\n      history.push(\"/\"); // Redirect to home if not current user\n    }\n  }, [currentUser, history, id]);\n\n  // Handle form submission.\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents default form submission behavior\n    try {\n      // PUT request to update the username.\n      await axiosRes.put(\"/dj-rest-auth/user/\", { username });\n      // Update the current user's username in context\n      setCurrentUser((prevUser) => ({\n        ...prevUser,\n        username,\n      }));\n      history.goBack(); // Navigate back to the previous page\n    } catch (err) {\n      console.log(err);\n      setErrors(err.response?.data); // Set errors from the response\n    }\n  };\n\n  return (\n    <Row>\n      <Col className=\"py-2 mx-auto text-center\" md={6}>\n        <Container className={appStyles.Content}>\n          <Form onSubmit={handleSubmit} className=\"my-2\">\n            <Form.Group>\n              <Form.Label className={styles.CustomUsernamePasswordLabel}>\n                Change username\n              </Form.Label>\n              <Form.Control\n                placeholder=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(event) => setUsername(event.target.value)}\n              />\n            </Form.Group>\n            {errors?.username?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Dark}`}\n              onClick={() => history.goBack()}\n            >\n              cancel\n            </Button>\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Green}`}\n              type=\"submit\"\n            >\n              save\n            </Button>\n          </Form>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UsernameForm;\n","import React, { useEffect, useState } from \"react\";\n\nimport Alert from \"react-bootstrap/Alert\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Form from \"react-bootstrap/Form\";\n\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { axiosRes } from \"../../api/axiosDefaults\";\nimport { useCurrentUser } from \"../../contexts/CurrentUserContext\";\nimport { useRedirect } from \"../../hooks/useRedirect\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/UsernamePasswordForm.module.css\";\n\n// UserPasswordForm for changing user password\nconst UserPasswordForm = () => {\n  // Redirects logged out users.\n  useRedirect(\"loggedOut\");\n  const history = useHistory();\n  const { id } = useParams();\n  // Access current user data\n  const currentUser = useCurrentUser();\n\n  // useState hook to manage form data and errors\n  const [userData, setUserData] = useState({\n    new_password1: \"\",\n    new_password2: \"\",\n  });\n  const { new_password1, new_password2 } = userData;\n  const [errors, setErrors] = useState({});\n\n  // Handle form field changes\n  const handleChange = (event) => {\n    setUserData({ ...userData, [event.target.name]: event.target.value });\n  };\n\n  // Perform actions on component mount and when dependencies changes\n  useEffect(() => {\n    // Redirect user if not the owner of account\n    if (currentUser?.account_id?.toString() !== id) {\n      history.push(\"/\");\n    }\n  }, [currentUser, history, id]);\n\n  // Handle form submission\n  const handleSubmit = async (event) => {\n    event.preventDefault(); // Prevents default form submission action\n    try {\n      // POST request to change user password\n      await axiosRes.post(\"/dj-rest-auth/password/change/\", userData);\n      history.goBack(); // Navigate back to previous page\n    } catch (err) {\n      console.log(err);\n      setErrors(err.response?.data); // Set any errors from the response\n    }\n  };\n\n  return (\n    <Row>\n      <Col className=\"py-2 mx-auto text-center\" md={6}>\n        <Container className={appStyles.Content}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Label className={styles.CustomUsernamePasswordLabel}>\n                New password\n              </Form.Label>\n              <Form.Control\n                placeholder=\"new password\"\n                type=\"password\"\n                value={new_password1}\n                onChange={handleChange}\n                name=\"new_password1\"\n              />\n            </Form.Group>\n            {errors?.new_password1?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Form.Group>\n              <Form.Label className={styles.CustomUsernamePasswordLabel}>\n                Confirm password\n              </Form.Label>\n              <Form.Control\n                placeholder=\"confirm new password\"\n                type=\"password\"\n                value={new_password2}\n                onChange={handleChange}\n                name=\"new_password2\"\n              />\n            </Form.Group>\n            {errors?.new_password2?.map((message, idx) => (\n              <Alert key={idx} variant=\"warning\">\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Dark}`}\n              onClick={() => history.goBack()}\n            >\n              cancel\n            </Button>\n            <Button\n              type=\"submit\"\n              className={`${btnStyles.Button} ${btnStyles.Green}`}\n            >\n              save\n            </Button>\n          </Form>\n        </Container>\n      </Col>\n    </Row>\n  );\n};\n\nexport default UserPasswordForm;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Image from \"react-bootstrap/Image\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport { axiosReq, axiosRes } from \"../../api/axiosDefaults\";\nimport {\n  useCurrentUser,\n  useSetCurrentUser,\n} from \"../../contexts/CurrentUserContext\";\n// import { useRedirect } from \"../../hooks/useRedirect\";\n\nimport btnStyles from \"../../styles/Button.module.css\";\nimport appStyles from \"../../App.module.css\";\nimport styles from \"../../styles/AccountEditForm.module.css\";\n\nconst AccountEditForm = () => {\n  const currentUser = useCurrentUser();\n  const setCurrentUser = useSetCurrentUser();\n  const { id } = useParams();\n  const history = useHistory();\n  const imageFile = useRef();\n\n  const [accountData, setAccountData] = useState({\n    name: \"\",\n    content: \"\",\n    image: \"\",\n  });\n  const { name, content, image } = accountData; // Destructure accountData\n\n  const [errors, setErrors] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [password, setPassword] = useState(\"\");\n\n  useEffect(() => {\n    const handleMount = async () => {\n      if (currentUser?.account_id?.toString() === id) {\n        try {\n          const { data } = await axiosReq.get(`/accounts/${id}/`);\n          const { name, content, image } = data;\n          setAccountData({ name, content, image });\n        } catch (err) {\n          console.log(err);\n          history.push(\"/\");\n        }\n      } else {\n        history.push(\"/\");\n      }\n    };\n\n    handleMount();\n  }, [currentUser, history, id]);\n\n  const handleChange = (event) => {\n    setAccountData({\n      ...accountData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append(\"name\", name);\n    formData.append(\"content\", content);\n\n    if (imageFile?.current?.files[0]) {\n      formData.append(\"image\", imageFile?.current?.files[0]);\n    }\n\n    try {\n      const { data } = await axiosReq.put(`/accounts/${id}/`, formData);\n      setCurrentUser((currentUser) => ({\n        ...currentUser,\n        account_image: data.image,\n      }));\n      history.goBack();\n    } catch (err) {\n      console.log(err);\n      setErrors(err.response?.data);\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      const response = await axiosRes.delete(\"/delete-user/\", {\n        data: { password: password },\n      });\n      if (response.status !== 400) {\n        console.log(\"logged out\");\n        setCurrentUser(null);\n        history.push(\"/signup\");\n      } else console.log(response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const deleteAccountSection = (\n    <div className={`${styles.DeleteAccountDiv} mt-4`}>\n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Red}`}\n        onClick={() => setShowModal(true)}\n      >\n        Delete Account\n      </Button>\n      <p className={styles.WarningP}>\n        <span className={styles.WarningSpan}>Warning</span>: this action will\n        delete all your user data, and it is not undoable.\n      </p>\n    </div>\n  );\n\n  const textFields = (\n    <>\n      <Form.Group>\n        <Form.Label className={styles.BioLabel}>Status</Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          value={content}\n          onChange={handleChange}\n          name=\"content\"\n          rows={7}\n        />\n      </Form.Group>\n\n      {errors?.content?.map((message, idx) => (\n        <Alert variant=\"warning\" key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Dark}`}\n        onClick={() => history.goBack()}\n      >\n        cancel\n      </Button>\n      <Button\n        className={`${btnStyles.Button} ${btnStyles.Green}`}\n        type=\"submit\"\n      >\n        save\n      </Button>\n    </>\n  );\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Row>\n          <Col className=\"py-2 p-0 p-md-2 text-center\" md={7} lg={6}>\n            <Container className={appStyles.Content}>\n              <Form.Group>\n                {image && (\n                  <figure>\n                    <Image src={image} fluid />\n                  </figure>\n                )}\n                {errors?.image?.map((message, idx) => (\n                  <Alert variant=\"warning\" key={idx}>\n                    {message}\n                  </Alert>\n                ))}\n                <div>\n                  <Form.Label\n                    className={`${btnStyles.Button} ${btnStyles.Dark} btn my-auto`}\n                    htmlFor=\"image-upload\"\n                  >\n                    Change the image\n                  </Form.Label>\n                </div>\n                <Form.File\n                  id=\"image-upload\"\n                  ref={imageFile}\n                  accept=\"image/*\"\n                  onChange={(e) => {\n                    if (e.target.files.length) {\n                      setAccountData({\n                        ...accountData,\n                        image: URL.createObjectURL(e.target.files[0]),\n                      });\n                    }\n                  }}\n                />\n              </Form.Group>\n            </Container>\n          </Col>\n          <Col md={5} lg={6} className=\"py-2 p-0 p-md-2 text-center\">\n            <Container className={appStyles.Content}>{textFields}</Container>\n            <Container className={appStyles.Content}>\n              {deleteAccountSection}{\" \"}\n            </Container>\n          </Col>\n        </Row>\n      </Form>\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Delete Account</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Please enter your password to confirm account deletion:</p>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n            Close\n          </Button>\n          <Button variant=\"danger\" onClick={handleDelete}>\n            Delete Account\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n};\n\nexport default AccountEditForm;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./App.module.css\";\nimport NavBar from \"./components/NavBar\";\nimport Container from \"react-bootstrap/Container\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { axiosReq } from \"./api/axiosDefaults\";\nimport SignUpForm from \"./pages/auth/SignUpForm\";\nimport SignInForm from \"./pages/auth/SignInForm\";\nimport MyCalendar from \"./components/MyCalendar\";\nimport TaskCreateForm from \"./pages/tasks/TaskCreateForm\";\nimport TaskPage from \"./pages/tasks/TaskPage\";\nimport TasksPage from \"./pages/tasks/TasksPage\";\nimport { useCurrentUser } from \"./contexts/CurrentUserContext\";\nimport TaskEditForm from \"./pages/tasks/TaskEditForm\";\nimport AccountPage from \"./pages/accounts/AccountPage\";\nimport UsernameForm from \"./pages/accounts/UsernameForm\";\nimport UserPasswordForm from \"./pages/accounts/UserPasswordForm\";\nimport AccountEditForm from \"./pages/accounts/AccountEditForm\";\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const username = currentUser?.username;\n        if (!username) {\n          console.error(\"No logged-in user found!\");\n          return; // Exit the function if no user is found\n        }\n        const { data } = await axiosReq.get(\n          `/tasks/?owner__username=${username}`\n        );\n        setTasks(data.results);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    if (currentUser) {\n      fetchTasks();\n    }\n  }, [currentUser]); // Dependency on currentUser\n\n  return (\n    <div className={styles.App}>\n      <NavBar />\n      <Container className={styles.Main}>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => <MyCalendar tasks={tasks} setTasks={setTasks} />}\n          />\n          <Route\n            exact\n            path=\"/alltasks\"\n            render={() => (\n              <TasksPage\n                message=\"No results found. Try another keyword.\"\n                setTasks={setTasks}\n                tasks={tasks}\n              />\n            )}\n          />\n          <Route exact path=\"/signin\" render={() => <SignInForm />} />\n          <Route exact path=\"/signup\" render={() => <SignUpForm />} />\n          <Route\n            exact\n            path=\"/tasks/create\"\n            render={() => <TaskCreateForm setTasks={setTasks} />}\n          />\n          <Route exact path=\"/tasks/:id\" render={() => <TaskPage />} />\n          <Route exact path=\"/tasks\" render={() => <TasksPage />} />\n          <Route\n            exact\n            path=\"/tasks/:id/edit\"\n            render={() => <TaskEditForm setTasks={setTasks} />}\n          />\n          <Route exact path=\"/accounts/:id\" render={() => <AccountPage />} />\n          <Route\n            exact\n            path=\"/accounts/:id/edit/username\"\n            render={() => <UsernameForm />}\n          />\n          <Route\n            exact\n            path=\"/accounts/:id/edit/password\"\n            render={() => <UserPasswordForm />}\n          />\n          <Route\n            exact\n            path=\"/accounts/:id/edit\"\n            render={() => <AccountEditForm />}\n          />\n          <Route render={() => <p>Page not found!</p>} />\n        </Switch>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { CurrentUserProvider } from \"./contexts/CurrentUserContext\";\nimport { AccountDataProvider } from \"./contexts/AccountDataContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <CurrentUserProvider>\n        <AccountDataProvider>\n          <App />\n        </AccountDataProvider>\n      </CurrentUserProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"TaskCreateEditForm_Container__2K-o6\",\"closeButton\":\"TaskCreateEditForm_closeButton__1eIb2\",\"editButton\":\"TaskCreateEditForm_editButton__280ZQ\",\"formGroupCustom\":\"TaskCreateEditForm_formGroupCustom__3pQMI\",\"taskFormDiv\":\"TaskCreateEditForm_taskFormDiv__GNA8r\",\"formPlaceholder\":\"TaskCreateEditForm_formPlaceholder__2gt29\",\"changeImgBtn\":\"TaskCreateEditForm_changeImgBtn__Nxy8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"rainbow\":\"NavBar_rainbow__3OHcZ\",\"NavLink\":\"NavBar_NavLink__34ons\",\"Active\":\"NavBar_Active__3PBZb\",\"NavLinkTexts\":\"NavBar_NavLinkTexts__1gGsB\",\"CreateTaskButton\":\"NavBar_CreateTaskButton__21DC3\",\"CreateTaskText\":\"NavBar_CreateTaskText__1oW0v\",\"viewText\":\"NavBar_viewText__8Ox3o\",\"SearchInputContainer\":\"NavBar_SearchInputContainer__-CB6c\",\"SearchResultsDropdown\":\"NavBar_SearchResultsDropdown__24X5I\",\"NoUserFound\":\"NavBar_NoUserFound__1dBuD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendarContainer\":\"MyCalendar_calendarContainer__3mWfz\",\"fc\":\"MyCalendar_fc__3a1Hm\",\"fc-media-screen\":\"MyCalendar_fc-media-screen__242xI\",\"fc-direction-ltr\":\"MyCalendar_fc-direction-ltr__2X4oo\",\"fc-theme-standard\":\"MyCalendar_fc-theme-standard__3OmbO\",\"calendarModal\":\"MyCalendar_calendarModal__3yXjP\",\"calendarModalHeader\":\"MyCalendar_calendarModalHeader__TKw01\",\"calendarModalBody\":\"MyCalendar_calendarModalBody__faVvp\",\"calendarModalFooter\":\"MyCalendar_calendarModalFooter__2MVeP\",\"taskListModal\":\"MyCalendar_taskListModal__1i0Z9\",\"taskListModalHeader\":\"MyCalendar_taskListModalHeader__ySeS7\",\"taskListModalBody\":\"MyCalendar_taskListModalBody__3l10k\",\"taskListModalFooter\":\"MyCalendar_taskListModalFooter__39H-j\",\"ulTaskList\":\"MyCalendar_ulTaskList__197sm\",\"taskListItem\":\"MyCalendar_taskListItem__3Icrf\",\"taskLink\":\"MyCalendar_taskLink__1s-Lm\",\"buttonGroup\":\"MyCalendar_buttonGroup__3ETSd\",\"closeButton\":\"MyCalendar_closeButton__1ltmF\",\"editButton\":\"MyCalendar_editButton__3zpTC\",\"deleteButton\":\"MyCalendar_deleteButton__1yCZB\",\"darkenBackground\":\"MyCalendar_darkenBackground__1mSBe\",\"fc-daygrid-day-number\":\"MyCalendar_fc-daygrid-day-number__34yCs\",\"fc-daygrid-event\":\"MyCalendar_fc-daygrid-event__ezMp6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DotsIcon\":\"MoreDropdown_DotsIcon__orToG\",\"Absolute\":\"MoreDropdown_Absolute__2RO70\",\"AccountDropdown\":\"MoreDropdown_AccountDropdown__3a9wk\",\"Item\":\"MoreDropdown_Item__1ogZW\",\"ItemText\":\"MoreDropdown_ItemText__2G_6j\",\"ItemIcon\":\"MoreDropdown_ItemIcon__XOScw\",\"DropdownItem\":\"MoreDropdown_DropdownItem__2E4UM\",\"MoreDropdownIcon\":\"MoreDropdown_MoreDropdownIcon__1uxua\",\"CommentDropdownMenu\":\"MoreDropdown_CommentDropdownMenu__13u1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Task_Task__3r7K9\",\"PublicIcon\":\"Task_PublicIcon__KwUnf\",\"PublicText\":\"Task_PublicText__13sNO\",\"PublicInfo\":\"Task_PublicInfo__26Fy3\",\"TitleSection\":\"Task_TitleSection__2FCnH\",\"taskTitle\":\"Task_taskTitle__1AvDP\",\"creationDate\":\"Task_creationDate__1d3VA\",\"ContentSection\":\"Task_ContentSection__1wP1_\",\"ImageSection\":\"Task_ImageSection__3QNNm\",\"FooterSection\":\"Task_FooterSection__1GoVv\",\"DueDateP\":\"Task_DueDateP__1qsaj\",\"DueDateSpan\":\"Task_DueDateSpan__3pLR2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"SignInUpForm_Row__3PbVy\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"Container\":\"SignInUpForm_Container__2cuBp\",\"SignInCol\":\"SignInUpForm_SignInCol__3ImPK\",\"SignUpCol\":\"SignInUpForm_SignUpCol__28o4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Owner\":\"TaskComment_Owner__3gKei\",\"Date\":\"TaskComment_Date__2npnW\",\"InputFieldComments\":\"TaskComment_InputFieldComments__3Fq48\",\"TaskCommentCreateForm\":\"TaskComment_TaskCommentCreateForm__4y4Xu\",\"PostCommentBtn\":\"TaskComment_PostCommentBtn__L2U9n\",\"CommentFormCol\":\"TaskComment_CommentFormCol__2dISq\",\"CommentForm\":\"TaskComment_CommentForm__1tuMY\",\"InputGroup\":\"TaskComment_InputGroup__3j2j5\",\"Avatar\":\"TaskComment_Avatar__2SVmW\",\"ButtonContainer\":\"TaskComment_ButtonContainer__36Yte\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccountImage\":\"AccountPage_AccountImage__3F6Yr\",\"UsernameHeader\":\"AccountPage_UsernameHeader__qRBHs\",\"BioContent\":\"AccountPage_BioContent__2grvv\",\"CustomHR\":\"AccountPage_CustomHR__aMvrn\",\"OwnersTasks\":\"AccountPage_OwnersTasks__8wMQu\",\"NoTasks\":\"AccountPage_NoTasks__2B_Np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomUsernamePasswordLabel\":\"UsernamePasswordForm_CustomUsernamePasswordLabel__37nma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DeleteAccountDiv\":\"AccountEditForm_DeleteAccountDiv__1A7sX\",\"WarningP\":\"AccountEditForm_WarningP__2XaTo\",\"WarningSpan\":\"AccountEditForm_WarningSpan__3hIHT\",\"BioLabel\":\"AccountEditForm_BioLabel__xZUgy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"TaskCommentEditForm_Form__wcOZE\",\"BtnCancel\":\"TaskCommentEditForm_BtnCancel__r4M55\",\"BtnSave\":\"TaskCommentEditForm_BtnSave__2sHvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewestAccounts\":\"NewestAccounts_NewestAccounts__1nNIw\",\"NewestUsersP\":\"NewestAccounts_NewestUsersP__wx6Lj\",\"NewestAccountsMobile\":\"NewestAccounts_NewestAccountsMobile__2u0SF\",\"col\":\"NewestAccounts_col__1Q6Ci\",\"col-lg-12\":\"NewestAccounts_col-lg-12__Ymvck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchBar\":\"TasksPage_SearchBar__hCMay\",\"SearchIcon\":\"TasksPage_SearchIcon__7YqSy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};"],"sourceRoot":""}